Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@58eac00e
Adding type registration true_false -> org.hibernate.type.TrueFalseType@30aec673
Adding type registration yes_no -> org.hibernate.type.YesNoType@58f31629
Adding type registration byte -> org.hibernate.type.ByteType@52831a73
Adding type registration byte -> org.hibernate.type.ByteType@52831a73
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52831a73
Adding type registration character -> org.hibernate.type.CharacterType@48581a3b
Adding type registration char -> org.hibernate.type.CharacterType@48581a3b
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48581a3b
Adding type registration short -> org.hibernate.type.ShortType@db99785
Adding type registration short -> org.hibernate.type.ShortType@db99785
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@db99785
Adding type registration integer -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration int -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration long -> org.hibernate.type.LongType@74667e6a
Adding type registration long -> org.hibernate.type.LongType@74667e6a
Adding type registration java.lang.Long -> org.hibernate.type.LongType@74667e6a
Adding type registration float -> org.hibernate.type.FloatType@a54acec
Adding type registration float -> org.hibernate.type.FloatType@a54acec
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@a54acec
Adding type registration double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@59303963
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@59303963
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@52d0f583
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@52d0f583
Adding type registration string -> org.hibernate.type.StringType@7af0affa
Adding type registration java.lang.String -> org.hibernate.type.StringType@7af0affa
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5b251fb9
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7f97bc14
Adding type registration url -> org.hibernate.type.UrlType@25a1a012
Adding type registration java.net.URL -> org.hibernate.type.UrlType@25a1a012
Adding type registration Duration -> org.hibernate.type.DurationType@5bf9ea6b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5bf9ea6b
Adding type registration Instant -> org.hibernate.type.InstantType@bc09d57
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@bc09d57
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7015ebef
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7015ebef
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1df5c7e3
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1df5c7e3
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@15c6027d
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@15c6027d
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46c10083
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46c10083
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@35eee641
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@35eee641
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2a8f6e6
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2a8f6e6
Adding type registration date -> org.hibernate.type.DateType@36359723
Adding type registration java.sql.Date -> org.hibernate.type.DateType@36359723
Adding type registration time -> org.hibernate.type.TimeType@5f08fe00
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5f08fe00
Adding type registration timestamp -> org.hibernate.type.TimestampType@724bf25f
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@724bf25f
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@724bf25f
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@26582ca
Adding type registration calendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@44e4cb76
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4aebee4b
Adding type registration locale -> org.hibernate.type.LocaleType@1c297897
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c297897
Adding type registration currency -> org.hibernate.type.CurrencyType@7889b4b9
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7889b4b9
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7f5614f9
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7f5614f9
Adding type registration class -> org.hibernate.type.ClassType@71a4f441
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71a4f441
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f6b53ed
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f6b53ed
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c48b72c
Adding type registration binary -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration byte[] -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration [B -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration row_version -> org.hibernate.type.RowVersionType@739831a4
Adding type registration image -> org.hibernate.type.ImageType@38883a31
Adding type registration characters -> org.hibernate.type.CharArrayType@118acf70
Adding type registration char[] -> org.hibernate.type.CharArrayType@118acf70
Adding type registration [C -> org.hibernate.type.CharArrayType@118acf70
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration text -> org.hibernate.type.TextType@6e24ce51
Adding type registration ntext -> org.hibernate.type.NTextType@4001d8c1
Adding type registration blob -> org.hibernate.type.BlobType@21390938
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@21390938
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4e4162bc
Adding type registration clob -> org.hibernate.type.ClobType@26d5a317
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26d5a317
Adding type registration nclob -> org.hibernate.type.NClobType@113f9078
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@113f9078
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e52a26b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@224c7de4
Adding type registration serializable -> org.hibernate.type.SerializableType@191c6e13
Adding type registration object -> org.hibernate.type.ObjectType@78c262ba
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@78c262ba
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7d2c345d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@217dc48e
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5db948c9
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@296edc75
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@357c9bd9
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7aea704c
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d0290d8
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@32507479
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@11069eac
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@11069eac
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5f6b53ed
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ec9fdb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@35af1558]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6b6c0b7c, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5b1f0f26, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@58516c91, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ec9fdb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@61648dd2]
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69f24965
Registering SessionFactory: 78521175-23d4-42d4-8f68-29149117d440 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@58eac00e
Adding type registration true_false -> org.hibernate.type.TrueFalseType@30aec673
Adding type registration yes_no -> org.hibernate.type.YesNoType@58f31629
Adding type registration byte -> org.hibernate.type.ByteType@52831a73
Adding type registration byte -> org.hibernate.type.ByteType@52831a73
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52831a73
Adding type registration character -> org.hibernate.type.CharacterType@48581a3b
Adding type registration char -> org.hibernate.type.CharacterType@48581a3b
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48581a3b
Adding type registration short -> org.hibernate.type.ShortType@db99785
Adding type registration short -> org.hibernate.type.ShortType@db99785
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@db99785
Adding type registration integer -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration int -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration long -> org.hibernate.type.LongType@74667e6a
Adding type registration long -> org.hibernate.type.LongType@74667e6a
Adding type registration java.lang.Long -> org.hibernate.type.LongType@74667e6a
Adding type registration float -> org.hibernate.type.FloatType@a54acec
Adding type registration float -> org.hibernate.type.FloatType@a54acec
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@a54acec
Adding type registration double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@59303963
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@59303963
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@52d0f583
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@52d0f583
Adding type registration string -> org.hibernate.type.StringType@7af0affa
Adding type registration java.lang.String -> org.hibernate.type.StringType@7af0affa
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5b251fb9
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7f97bc14
Adding type registration url -> org.hibernate.type.UrlType@25a1a012
Adding type registration java.net.URL -> org.hibernate.type.UrlType@25a1a012
Adding type registration Duration -> org.hibernate.type.DurationType@5bf9ea6b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5bf9ea6b
Adding type registration Instant -> org.hibernate.type.InstantType@bc09d57
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@bc09d57
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7015ebef
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7015ebef
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1df5c7e3
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1df5c7e3
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@15c6027d
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@15c6027d
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46c10083
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46c10083
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@35eee641
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@35eee641
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2a8f6e6
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2a8f6e6
Adding type registration date -> org.hibernate.type.DateType@36359723
Adding type registration java.sql.Date -> org.hibernate.type.DateType@36359723
Adding type registration time -> org.hibernate.type.TimeType@5f08fe00
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5f08fe00
Adding type registration timestamp -> org.hibernate.type.TimestampType@724bf25f
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@724bf25f
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@724bf25f
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@26582ca
Adding type registration calendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@44e4cb76
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4aebee4b
Adding type registration locale -> org.hibernate.type.LocaleType@1c297897
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c297897
Adding type registration currency -> org.hibernate.type.CurrencyType@7889b4b9
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7889b4b9
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7f5614f9
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7f5614f9
Adding type registration class -> org.hibernate.type.ClassType@71a4f441
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71a4f441
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f6b53ed
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f6b53ed
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c48b72c
Adding type registration binary -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration byte[] -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration [B -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration row_version -> org.hibernate.type.RowVersionType@739831a4
Adding type registration image -> org.hibernate.type.ImageType@38883a31
Adding type registration characters -> org.hibernate.type.CharArrayType@118acf70
Adding type registration char[] -> org.hibernate.type.CharArrayType@118acf70
Adding type registration [C -> org.hibernate.type.CharArrayType@118acf70
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration text -> org.hibernate.type.TextType@6e24ce51
Adding type registration ntext -> org.hibernate.type.NTextType@4001d8c1
Adding type registration blob -> org.hibernate.type.BlobType@21390938
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@21390938
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4e4162bc
Adding type registration clob -> org.hibernate.type.ClobType@26d5a317
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26d5a317
Adding type registration nclob -> org.hibernate.type.NClobType@113f9078
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@113f9078
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e52a26b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@224c7de4
Adding type registration serializable -> org.hibernate.type.SerializableType@191c6e13
Adding type registration object -> org.hibernate.type.ObjectType@78c262ba
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@78c262ba
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7d2c345d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@217dc48e
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5db948c9
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@296edc75
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@357c9bd9
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7aea704c
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d0290d8
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@32507479
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@11069eac
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@11069eac
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5f6b53ed
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ec9fdb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@35af1558]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6b6c0b7c, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5b1f0f26, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@58516c91, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ec9fdb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@61648dd2]
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69f24965
Registering SessionFactory: ccb7a394-e5cf-42ce-b51b-02257c0e40ba (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@58eac00e
Adding type registration true_false -> org.hibernate.type.TrueFalseType@30aec673
Adding type registration yes_no -> org.hibernate.type.YesNoType@58f31629
Adding type registration byte -> org.hibernate.type.ByteType@52831a73
Adding type registration byte -> org.hibernate.type.ByteType@52831a73
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52831a73
Adding type registration character -> org.hibernate.type.CharacterType@48581a3b
Adding type registration char -> org.hibernate.type.CharacterType@48581a3b
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48581a3b
Adding type registration short -> org.hibernate.type.ShortType@db99785
Adding type registration short -> org.hibernate.type.ShortType@db99785
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@db99785
Adding type registration integer -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration int -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration long -> org.hibernate.type.LongType@74667e6a
Adding type registration long -> org.hibernate.type.LongType@74667e6a
Adding type registration java.lang.Long -> org.hibernate.type.LongType@74667e6a
Adding type registration float -> org.hibernate.type.FloatType@a54acec
Adding type registration float -> org.hibernate.type.FloatType@a54acec
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@a54acec
Adding type registration double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@59303963
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@59303963
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@52d0f583
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@52d0f583
Adding type registration string -> org.hibernate.type.StringType@7af0affa
Adding type registration java.lang.String -> org.hibernate.type.StringType@7af0affa
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5b251fb9
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7f97bc14
Adding type registration url -> org.hibernate.type.UrlType@25a1a012
Adding type registration java.net.URL -> org.hibernate.type.UrlType@25a1a012
Adding type registration Duration -> org.hibernate.type.DurationType@5bf9ea6b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5bf9ea6b
Adding type registration Instant -> org.hibernate.type.InstantType@bc09d57
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@bc09d57
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7015ebef
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7015ebef
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1df5c7e3
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1df5c7e3
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@15c6027d
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@15c6027d
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46c10083
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46c10083
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@35eee641
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@35eee641
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2a8f6e6
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2a8f6e6
Adding type registration date -> org.hibernate.type.DateType@36359723
Adding type registration java.sql.Date -> org.hibernate.type.DateType@36359723
Adding type registration time -> org.hibernate.type.TimeType@5f08fe00
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5f08fe00
Adding type registration timestamp -> org.hibernate.type.TimestampType@724bf25f
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@724bf25f
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@724bf25f
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@26582ca
Adding type registration calendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@44e4cb76
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4aebee4b
Adding type registration locale -> org.hibernate.type.LocaleType@1c297897
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c297897
Adding type registration currency -> org.hibernate.type.CurrencyType@7889b4b9
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7889b4b9
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7f5614f9
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7f5614f9
Adding type registration class -> org.hibernate.type.ClassType@71a4f441
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71a4f441
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f6b53ed
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f6b53ed
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c48b72c
Adding type registration binary -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration byte[] -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration [B -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration row_version -> org.hibernate.type.RowVersionType@739831a4
Adding type registration image -> org.hibernate.type.ImageType@38883a31
Adding type registration characters -> org.hibernate.type.CharArrayType@118acf70
Adding type registration char[] -> org.hibernate.type.CharArrayType@118acf70
Adding type registration [C -> org.hibernate.type.CharArrayType@118acf70
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration text -> org.hibernate.type.TextType@6e24ce51
Adding type registration ntext -> org.hibernate.type.NTextType@4001d8c1
Adding type registration blob -> org.hibernate.type.BlobType@21390938
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@21390938
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4e4162bc
Adding type registration clob -> org.hibernate.type.ClobType@26d5a317
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26d5a317
Adding type registration nclob -> org.hibernate.type.NClobType@113f9078
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@113f9078
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e52a26b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@224c7de4
Adding type registration serializable -> org.hibernate.type.SerializableType@191c6e13
Adding type registration object -> org.hibernate.type.ObjectType@78c262ba
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@78c262ba
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7d2c345d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@217dc48e
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5db948c9
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@296edc75
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@357c9bd9
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7aea704c
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d0290d8
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@32507479
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@11069eac
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@11069eac
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5f6b53ed
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ec9fdb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@35af1558]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6b6c0b7c, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5b1f0f26, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@58516c91, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ec9fdb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@61648dd2]
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69f24965
Registering SessionFactory: 060fba33-d9d8-49fc-92e9-954ef36267d6 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@58eac00e
Adding type registration true_false -> org.hibernate.type.TrueFalseType@30aec673
Adding type registration yes_no -> org.hibernate.type.YesNoType@58f31629
Adding type registration byte -> org.hibernate.type.ByteType@52831a73
Adding type registration byte -> org.hibernate.type.ByteType@52831a73
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52831a73
Adding type registration character -> org.hibernate.type.CharacterType@48581a3b
Adding type registration char -> org.hibernate.type.CharacterType@48581a3b
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48581a3b
Adding type registration short -> org.hibernate.type.ShortType@db99785
Adding type registration short -> org.hibernate.type.ShortType@db99785
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@db99785
Adding type registration integer -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration int -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration long -> org.hibernate.type.LongType@74667e6a
Adding type registration long -> org.hibernate.type.LongType@74667e6a
Adding type registration java.lang.Long -> org.hibernate.type.LongType@74667e6a
Adding type registration float -> org.hibernate.type.FloatType@a54acec
Adding type registration float -> org.hibernate.type.FloatType@a54acec
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@a54acec
Adding type registration double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@59303963
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@59303963
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@52d0f583
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@52d0f583
Adding type registration string -> org.hibernate.type.StringType@7af0affa
Adding type registration java.lang.String -> org.hibernate.type.StringType@7af0affa
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5b251fb9
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7f97bc14
Adding type registration url -> org.hibernate.type.UrlType@25a1a012
Adding type registration java.net.URL -> org.hibernate.type.UrlType@25a1a012
Adding type registration Duration -> org.hibernate.type.DurationType@5bf9ea6b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5bf9ea6b
Adding type registration Instant -> org.hibernate.type.InstantType@bc09d57
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@bc09d57
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7015ebef
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7015ebef
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1df5c7e3
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1df5c7e3
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@15c6027d
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@15c6027d
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46c10083
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46c10083
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@35eee641
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@35eee641
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2a8f6e6
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2a8f6e6
Adding type registration date -> org.hibernate.type.DateType@36359723
Adding type registration java.sql.Date -> org.hibernate.type.DateType@36359723
Adding type registration time -> org.hibernate.type.TimeType@5f08fe00
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5f08fe00
Adding type registration timestamp -> org.hibernate.type.TimestampType@724bf25f
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@724bf25f
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@724bf25f
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@26582ca
Adding type registration calendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@44e4cb76
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4aebee4b
Adding type registration locale -> org.hibernate.type.LocaleType@1c297897
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c297897
Adding type registration currency -> org.hibernate.type.CurrencyType@7889b4b9
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7889b4b9
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7f5614f9
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7f5614f9
Adding type registration class -> org.hibernate.type.ClassType@71a4f441
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71a4f441
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f6b53ed
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f6b53ed
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c48b72c
Adding type registration binary -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration byte[] -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration [B -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration row_version -> org.hibernate.type.RowVersionType@739831a4
Adding type registration image -> org.hibernate.type.ImageType@38883a31
Adding type registration characters -> org.hibernate.type.CharArrayType@118acf70
Adding type registration char[] -> org.hibernate.type.CharArrayType@118acf70
Adding type registration [C -> org.hibernate.type.CharArrayType@118acf70
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration text -> org.hibernate.type.TextType@6e24ce51
Adding type registration ntext -> org.hibernate.type.NTextType@4001d8c1
Adding type registration blob -> org.hibernate.type.BlobType@21390938
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@21390938
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4e4162bc
Adding type registration clob -> org.hibernate.type.ClobType@26d5a317
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26d5a317
Adding type registration nclob -> org.hibernate.type.NClobType@113f9078
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@113f9078
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e52a26b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@224c7de4
Adding type registration serializable -> org.hibernate.type.SerializableType@191c6e13
Adding type registration object -> org.hibernate.type.ObjectType@78c262ba
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@78c262ba
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7d2c345d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@217dc48e
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5db948c9
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@296edc75
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@357c9bd9
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7aea704c
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d0290d8
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@32507479
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@11069eac
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@11069eac
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5f6b53ed
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ec9fdb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@35af1558]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6b6c0b7c, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5b1f0f26, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@58516c91, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ec9fdb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@61648dd2]
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69f24965
Registering SessionFactory: 0c3e9810-51e4-4059-bbf5-62ec68cd0222 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@2313052e
Adding type registration boolean -> org.hibernate.type.BooleanType@2313052e
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2313052e
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6cfcd46d
Adding type registration true_false -> org.hibernate.type.TrueFalseType@1698fc68
Adding type registration yes_no -> org.hibernate.type.YesNoType@34997338
Adding type registration byte -> org.hibernate.type.ByteType@7e928e2f
Adding type registration byte -> org.hibernate.type.ByteType@7e928e2f
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7e928e2f
Adding type registration character -> org.hibernate.type.CharacterType@2fc0cc3
Adding type registration char -> org.hibernate.type.CharacterType@2fc0cc3
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2fc0cc3
Adding type registration short -> org.hibernate.type.ShortType@45efc20d
Adding type registration short -> org.hibernate.type.ShortType@45efc20d
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@45efc20d
Adding type registration integer -> org.hibernate.type.IntegerType@5b444398
Adding type registration int -> org.hibernate.type.IntegerType@5b444398
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5b444398
Adding type registration long -> org.hibernate.type.LongType@4c4d27c8
Adding type registration long -> org.hibernate.type.LongType@4c4d27c8
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4c4d27c8
Adding type registration float -> org.hibernate.type.FloatType@19ae6bb
Adding type registration float -> org.hibernate.type.FloatType@19ae6bb
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@19ae6bb
Adding type registration double -> org.hibernate.type.DoubleType@4ee37ca3
Adding type registration double -> org.hibernate.type.DoubleType@4ee37ca3
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4ee37ca3
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d8305c2
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d8305c2
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1fcb4808
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1fcb4808
Adding type registration string -> org.hibernate.type.StringType@7c2b6087
Adding type registration java.lang.String -> org.hibernate.type.StringType@7c2b6087
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3b77a04f
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@662f5666
Adding type registration url -> org.hibernate.type.UrlType@75c9e76b
Adding type registration java.net.URL -> org.hibernate.type.UrlType@75c9e76b
Adding type registration Duration -> org.hibernate.type.DurationType@12bcd0c0
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@12bcd0c0
Adding type registration Instant -> org.hibernate.type.InstantType@6d304f9d
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6d304f9d
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4cc6fa2a
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4cc6fa2a
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@61884cb1
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@61884cb1
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@192d74fb
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@192d74fb
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5bfa8cc5
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5bfa8cc5
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4a3329b9
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4a3329b9
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f053c80
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f053c80
Adding type registration date -> org.hibernate.type.DateType@3918c187
Adding type registration java.sql.Date -> org.hibernate.type.DateType@3918c187
Adding type registration time -> org.hibernate.type.TimeType@3d484181
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3d484181
Adding type registration timestamp -> org.hibernate.type.TimestampType@4721d212
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4721d212
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4721d212
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4bff1903
Adding type registration calendar -> org.hibernate.type.CalendarType@14f5da2c
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@14f5da2c
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@14f5da2c
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1eb6749b
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4f2c9ba6
Adding type registration locale -> org.hibernate.type.LocaleType@71b3bc45
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@71b3bc45
Adding type registration currency -> org.hibernate.type.CurrencyType@5ce33a58
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5ce33a58
Adding type registration timezone -> org.hibernate.type.TimeZoneType@25748410
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@25748410
Adding type registration class -> org.hibernate.type.ClassType@75e01201
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@75e01201
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1bb1fde8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1bb1fde8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2453f95d
Adding type registration binary -> org.hibernate.type.BinaryType@4de41af9
Adding type registration byte[] -> org.hibernate.type.BinaryType@4de41af9
Adding type registration [B -> org.hibernate.type.BinaryType@4de41af9
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@62435e70
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@62435e70
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@62435e70
Adding type registration row_version -> org.hibernate.type.RowVersionType@275fe372
Adding type registration image -> org.hibernate.type.ImageType@7e38a7fe
Adding type registration characters -> org.hibernate.type.CharArrayType@73ff4fae
Adding type registration char[] -> org.hibernate.type.CharArrayType@73ff4fae
Adding type registration [C -> org.hibernate.type.CharArrayType@73ff4fae
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1433046b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1433046b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1433046b
Adding type registration text -> org.hibernate.type.TextType@5b64c4b7
Adding type registration ntext -> org.hibernate.type.NTextType@1c80e49b
Adding type registration blob -> org.hibernate.type.BlobType@4d098f9b
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d098f9b
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7e3060d8
Adding type registration clob -> org.hibernate.type.ClobType@6d24ffa1
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d24ffa1
Adding type registration nclob -> org.hibernate.type.NClobType@6b54655f
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6b54655f
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2756c0a7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@165b2f7f
Adding type registration serializable -> org.hibernate.type.SerializableType@1c55f277
Adding type registration object -> org.hibernate.type.ObjectType@7c56e013
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7c56e013
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6731787b
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16f7b4af
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7adf16aa
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@34a1d21f
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@58bf8650
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@73c60324
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@71ae31b0
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ba534b0
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6dd91637
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@6dd91637
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1bb1fde8
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6e1f8469] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2e380628]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@1a480135, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@73d16e93], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@778db7c5, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@609db43b, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6e1f8469] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@422b8438]
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@23f3dbf0
Registering SessionFactory: 61627271-0c9f-490f-a8d8-64f67e288ad9 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@58eac00e
Adding type registration true_false -> org.hibernate.type.TrueFalseType@30aec673
Adding type registration yes_no -> org.hibernate.type.YesNoType@58f31629
Adding type registration byte -> org.hibernate.type.ByteType@52831a73
Adding type registration byte -> org.hibernate.type.ByteType@52831a73
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52831a73
Adding type registration character -> org.hibernate.type.CharacterType@48581a3b
Adding type registration char -> org.hibernate.type.CharacterType@48581a3b
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48581a3b
Adding type registration short -> org.hibernate.type.ShortType@db99785
Adding type registration short -> org.hibernate.type.ShortType@db99785
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@db99785
Adding type registration integer -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration int -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration long -> org.hibernate.type.LongType@74667e6a
Adding type registration long -> org.hibernate.type.LongType@74667e6a
Adding type registration java.lang.Long -> org.hibernate.type.LongType@74667e6a
Adding type registration float -> org.hibernate.type.FloatType@a54acec
Adding type registration float -> org.hibernate.type.FloatType@a54acec
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@a54acec
Adding type registration double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@59303963
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@59303963
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@52d0f583
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@52d0f583
Adding type registration string -> org.hibernate.type.StringType@7af0affa
Adding type registration java.lang.String -> org.hibernate.type.StringType@7af0affa
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5b251fb9
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7f97bc14
Adding type registration url -> org.hibernate.type.UrlType@25a1a012
Adding type registration java.net.URL -> org.hibernate.type.UrlType@25a1a012
Adding type registration Duration -> org.hibernate.type.DurationType@5bf9ea6b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5bf9ea6b
Adding type registration Instant -> org.hibernate.type.InstantType@bc09d57
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@bc09d57
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7015ebef
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7015ebef
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1df5c7e3
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1df5c7e3
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@15c6027d
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@15c6027d
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46c10083
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46c10083
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@35eee641
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@35eee641
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2a8f6e6
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2a8f6e6
Adding type registration date -> org.hibernate.type.DateType@36359723
Adding type registration java.sql.Date -> org.hibernate.type.DateType@36359723
Adding type registration time -> org.hibernate.type.TimeType@5f08fe00
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5f08fe00
Adding type registration timestamp -> org.hibernate.type.TimestampType@724bf25f
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@724bf25f
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@724bf25f
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@26582ca
Adding type registration calendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@44e4cb76
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4aebee4b
Adding type registration locale -> org.hibernate.type.LocaleType@1c297897
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c297897
Adding type registration currency -> org.hibernate.type.CurrencyType@7889b4b9
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7889b4b9
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7f5614f9
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7f5614f9
Adding type registration class -> org.hibernate.type.ClassType@71a4f441
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71a4f441
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f6b53ed
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f6b53ed
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c48b72c
Adding type registration binary -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration byte[] -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration [B -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration row_version -> org.hibernate.type.RowVersionType@739831a4
Adding type registration image -> org.hibernate.type.ImageType@38883a31
Adding type registration characters -> org.hibernate.type.CharArrayType@118acf70
Adding type registration char[] -> org.hibernate.type.CharArrayType@118acf70
Adding type registration [C -> org.hibernate.type.CharArrayType@118acf70
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration text -> org.hibernate.type.TextType@6e24ce51
Adding type registration ntext -> org.hibernate.type.NTextType@4001d8c1
Adding type registration blob -> org.hibernate.type.BlobType@21390938
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@21390938
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4e4162bc
Adding type registration clob -> org.hibernate.type.ClobType@26d5a317
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26d5a317
Adding type registration nclob -> org.hibernate.type.NClobType@113f9078
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@113f9078
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e52a26b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@224c7de4
Adding type registration serializable -> org.hibernate.type.SerializableType@191c6e13
Adding type registration object -> org.hibernate.type.ObjectType@78c262ba
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@78c262ba
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7d2c345d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@217dc48e
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5db948c9
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@296edc75
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@357c9bd9
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7aea704c
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d0290d8
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@32507479
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@11069eac
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@11069eac
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5f6b53ed
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ec9fdb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@35af1558]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6b6c0b7c, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5b1f0f26, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@58516c91, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ec9fdb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@61648dd2]
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69f24965
Registering SessionFactory: 674c6c9b-3b02-4f41-ad0a-d36afbaa2c52 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@58eac00e
Adding type registration true_false -> org.hibernate.type.TrueFalseType@30aec673
Adding type registration yes_no -> org.hibernate.type.YesNoType@58f31629
Adding type registration byte -> org.hibernate.type.ByteType@52831a73
Adding type registration byte -> org.hibernate.type.ByteType@52831a73
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52831a73
Adding type registration character -> org.hibernate.type.CharacterType@48581a3b
Adding type registration char -> org.hibernate.type.CharacterType@48581a3b
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48581a3b
Adding type registration short -> org.hibernate.type.ShortType@db99785
Adding type registration short -> org.hibernate.type.ShortType@db99785
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@db99785
Adding type registration integer -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration int -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration long -> org.hibernate.type.LongType@74667e6a
Adding type registration long -> org.hibernate.type.LongType@74667e6a
Adding type registration java.lang.Long -> org.hibernate.type.LongType@74667e6a
Adding type registration float -> org.hibernate.type.FloatType@a54acec
Adding type registration float -> org.hibernate.type.FloatType@a54acec
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@a54acec
Adding type registration double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@59303963
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@59303963
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@52d0f583
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@52d0f583
Adding type registration string -> org.hibernate.type.StringType@7af0affa
Adding type registration java.lang.String -> org.hibernate.type.StringType@7af0affa
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5b251fb9
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7f97bc14
Adding type registration url -> org.hibernate.type.UrlType@25a1a012
Adding type registration java.net.URL -> org.hibernate.type.UrlType@25a1a012
Adding type registration Duration -> org.hibernate.type.DurationType@5bf9ea6b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5bf9ea6b
Adding type registration Instant -> org.hibernate.type.InstantType@bc09d57
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@bc09d57
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7015ebef
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7015ebef
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1df5c7e3
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1df5c7e3
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@15c6027d
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@15c6027d
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46c10083
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46c10083
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@35eee641
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@35eee641
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2a8f6e6
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2a8f6e6
Adding type registration date -> org.hibernate.type.DateType@36359723
Adding type registration java.sql.Date -> org.hibernate.type.DateType@36359723
Adding type registration time -> org.hibernate.type.TimeType@5f08fe00
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5f08fe00
Adding type registration timestamp -> org.hibernate.type.TimestampType@724bf25f
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@724bf25f
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@724bf25f
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@26582ca
Adding type registration calendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@44e4cb76
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4aebee4b
Adding type registration locale -> org.hibernate.type.LocaleType@1c297897
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c297897
Adding type registration currency -> org.hibernate.type.CurrencyType@7889b4b9
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7889b4b9
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7f5614f9
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7f5614f9
Adding type registration class -> org.hibernate.type.ClassType@71a4f441
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71a4f441
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f6b53ed
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f6b53ed
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c48b72c
Adding type registration binary -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration byte[] -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration [B -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration row_version -> org.hibernate.type.RowVersionType@739831a4
Adding type registration image -> org.hibernate.type.ImageType@38883a31
Adding type registration characters -> org.hibernate.type.CharArrayType@118acf70
Adding type registration char[] -> org.hibernate.type.CharArrayType@118acf70
Adding type registration [C -> org.hibernate.type.CharArrayType@118acf70
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration text -> org.hibernate.type.TextType@6e24ce51
Adding type registration ntext -> org.hibernate.type.NTextType@4001d8c1
Adding type registration blob -> org.hibernate.type.BlobType@21390938
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@21390938
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4e4162bc
Adding type registration clob -> org.hibernate.type.ClobType@26d5a317
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26d5a317
Adding type registration nclob -> org.hibernate.type.NClobType@113f9078
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@113f9078
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e52a26b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@224c7de4
Adding type registration serializable -> org.hibernate.type.SerializableType@191c6e13
Adding type registration object -> org.hibernate.type.ObjectType@78c262ba
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@78c262ba
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7d2c345d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@217dc48e
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5db948c9
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@296edc75
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@357c9bd9
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7aea704c
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d0290d8
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@32507479
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@11069eac
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@11069eac
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5f6b53ed
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ec9fdb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@35af1558]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6b6c0b7c, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5b1f0f26, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@58516c91, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ec9fdb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@61648dd2]
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69f24965
Registering SessionFactory: 483205e2-ff2f-4a31-8430-9937b236fd50 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@58eac00e
Adding type registration true_false -> org.hibernate.type.TrueFalseType@30aec673
Adding type registration yes_no -> org.hibernate.type.YesNoType@58f31629
Adding type registration byte -> org.hibernate.type.ByteType@52831a73
Adding type registration byte -> org.hibernate.type.ByteType@52831a73
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52831a73
Adding type registration character -> org.hibernate.type.CharacterType@48581a3b
Adding type registration char -> org.hibernate.type.CharacterType@48581a3b
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48581a3b
Adding type registration short -> org.hibernate.type.ShortType@db99785
Adding type registration short -> org.hibernate.type.ShortType@db99785
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@db99785
Adding type registration integer -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration int -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration long -> org.hibernate.type.LongType@74667e6a
Adding type registration long -> org.hibernate.type.LongType@74667e6a
Adding type registration java.lang.Long -> org.hibernate.type.LongType@74667e6a
Adding type registration float -> org.hibernate.type.FloatType@a54acec
Adding type registration float -> org.hibernate.type.FloatType@a54acec
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@a54acec
Adding type registration double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@59303963
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@59303963
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@52d0f583
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@52d0f583
Adding type registration string -> org.hibernate.type.StringType@7af0affa
Adding type registration java.lang.String -> org.hibernate.type.StringType@7af0affa
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5b251fb9
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7f97bc14
Adding type registration url -> org.hibernate.type.UrlType@25a1a012
Adding type registration java.net.URL -> org.hibernate.type.UrlType@25a1a012
Adding type registration Duration -> org.hibernate.type.DurationType@5bf9ea6b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5bf9ea6b
Adding type registration Instant -> org.hibernate.type.InstantType@bc09d57
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@bc09d57
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7015ebef
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7015ebef
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1df5c7e3
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1df5c7e3
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@15c6027d
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@15c6027d
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46c10083
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46c10083
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@35eee641
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@35eee641
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2a8f6e6
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2a8f6e6
Adding type registration date -> org.hibernate.type.DateType@36359723
Adding type registration java.sql.Date -> org.hibernate.type.DateType@36359723
Adding type registration time -> org.hibernate.type.TimeType@5f08fe00
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5f08fe00
Adding type registration timestamp -> org.hibernate.type.TimestampType@724bf25f
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@724bf25f
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@724bf25f
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@26582ca
Adding type registration calendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@44e4cb76
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4aebee4b
Adding type registration locale -> org.hibernate.type.LocaleType@1c297897
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c297897
Adding type registration currency -> org.hibernate.type.CurrencyType@7889b4b9
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7889b4b9
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7f5614f9
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7f5614f9
Adding type registration class -> org.hibernate.type.ClassType@71a4f441
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71a4f441
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f6b53ed
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f6b53ed
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c48b72c
Adding type registration binary -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration byte[] -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration [B -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration row_version -> org.hibernate.type.RowVersionType@739831a4
Adding type registration image -> org.hibernate.type.ImageType@38883a31
Adding type registration characters -> org.hibernate.type.CharArrayType@118acf70
Adding type registration char[] -> org.hibernate.type.CharArrayType@118acf70
Adding type registration [C -> org.hibernate.type.CharArrayType@118acf70
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration text -> org.hibernate.type.TextType@6e24ce51
Adding type registration ntext -> org.hibernate.type.NTextType@4001d8c1
Adding type registration blob -> org.hibernate.type.BlobType@21390938
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@21390938
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4e4162bc
Adding type registration clob -> org.hibernate.type.ClobType@26d5a317
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26d5a317
Adding type registration nclob -> org.hibernate.type.NClobType@113f9078
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@113f9078
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e52a26b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@224c7de4
Adding type registration serializable -> org.hibernate.type.SerializableType@191c6e13
Adding type registration object -> org.hibernate.type.ObjectType@78c262ba
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@78c262ba
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7d2c345d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@217dc48e
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5db948c9
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@296edc75
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@357c9bd9
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7aea704c
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d0290d8
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@32507479
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@11069eac
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@11069eac
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5f6b53ed
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ec9fdb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@35af1558]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6b6c0b7c, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5b1f0f26, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@58516c91, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ec9fdb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@61648dd2]
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69f24965
Registering SessionFactory: dcebf921-cfdf-4fd4-8030-6ec1132254d2 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@58eac00e
Adding type registration true_false -> org.hibernate.type.TrueFalseType@30aec673
Adding type registration yes_no -> org.hibernate.type.YesNoType@58f31629
Adding type registration byte -> org.hibernate.type.ByteType@52831a73
Adding type registration byte -> org.hibernate.type.ByteType@52831a73
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52831a73
Adding type registration character -> org.hibernate.type.CharacterType@48581a3b
Adding type registration char -> org.hibernate.type.CharacterType@48581a3b
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48581a3b
Adding type registration short -> org.hibernate.type.ShortType@db99785
Adding type registration short -> org.hibernate.type.ShortType@db99785
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@db99785
Adding type registration integer -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration int -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration long -> org.hibernate.type.LongType@74667e6a
Adding type registration long -> org.hibernate.type.LongType@74667e6a
Adding type registration java.lang.Long -> org.hibernate.type.LongType@74667e6a
Adding type registration float -> org.hibernate.type.FloatType@a54acec
Adding type registration float -> org.hibernate.type.FloatType@a54acec
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@a54acec
Adding type registration double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@59303963
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@59303963
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@52d0f583
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@52d0f583
Adding type registration string -> org.hibernate.type.StringType@7af0affa
Adding type registration java.lang.String -> org.hibernate.type.StringType@7af0affa
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5b251fb9
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7f97bc14
Adding type registration url -> org.hibernate.type.UrlType@25a1a012
Adding type registration java.net.URL -> org.hibernate.type.UrlType@25a1a012
Adding type registration Duration -> org.hibernate.type.DurationType@5bf9ea6b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5bf9ea6b
Adding type registration Instant -> org.hibernate.type.InstantType@bc09d57
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@bc09d57
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7015ebef
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7015ebef
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1df5c7e3
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1df5c7e3
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@15c6027d
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@15c6027d
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46c10083
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46c10083
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@35eee641
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@35eee641
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2a8f6e6
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2a8f6e6
Adding type registration date -> org.hibernate.type.DateType@36359723
Adding type registration java.sql.Date -> org.hibernate.type.DateType@36359723
Adding type registration time -> org.hibernate.type.TimeType@5f08fe00
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5f08fe00
Adding type registration timestamp -> org.hibernate.type.TimestampType@724bf25f
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@724bf25f
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@724bf25f
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@26582ca
Adding type registration calendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@44e4cb76
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4aebee4b
Adding type registration locale -> org.hibernate.type.LocaleType@1c297897
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c297897
Adding type registration currency -> org.hibernate.type.CurrencyType@7889b4b9
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7889b4b9
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7f5614f9
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7f5614f9
Adding type registration class -> org.hibernate.type.ClassType@71a4f441
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71a4f441
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f6b53ed
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f6b53ed
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c48b72c
Adding type registration binary -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration byte[] -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration [B -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration row_version -> org.hibernate.type.RowVersionType@739831a4
Adding type registration image -> org.hibernate.type.ImageType@38883a31
Adding type registration characters -> org.hibernate.type.CharArrayType@118acf70
Adding type registration char[] -> org.hibernate.type.CharArrayType@118acf70
Adding type registration [C -> org.hibernate.type.CharArrayType@118acf70
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration text -> org.hibernate.type.TextType@6e24ce51
Adding type registration ntext -> org.hibernate.type.NTextType@4001d8c1
Adding type registration blob -> org.hibernate.type.BlobType@21390938
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@21390938
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4e4162bc
Adding type registration clob -> org.hibernate.type.ClobType@26d5a317
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26d5a317
Adding type registration nclob -> org.hibernate.type.NClobType@113f9078
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@113f9078
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e52a26b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@224c7de4
Adding type registration serializable -> org.hibernate.type.SerializableType@191c6e13
Adding type registration object -> org.hibernate.type.ObjectType@78c262ba
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@78c262ba
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7d2c345d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@217dc48e
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5db948c9
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@296edc75
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@357c9bd9
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7aea704c
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d0290d8
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@32507479
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@11069eac
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@11069eac
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5f6b53ed
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ec9fdb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@35af1558]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6b6c0b7c, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5b1f0f26, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@58516c91, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ec9fdb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@61648dd2]
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69f24965
Registering SessionFactory: 24086cdb-d14b-4a4d-b8b0-d8922e6ef9bf (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7eeb38b2
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@58eac00e
Adding type registration true_false -> org.hibernate.type.TrueFalseType@30aec673
Adding type registration yes_no -> org.hibernate.type.YesNoType@58f31629
Adding type registration byte -> org.hibernate.type.ByteType@52831a73
Adding type registration byte -> org.hibernate.type.ByteType@52831a73
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52831a73
Adding type registration character -> org.hibernate.type.CharacterType@48581a3b
Adding type registration char -> org.hibernate.type.CharacterType@48581a3b
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48581a3b
Adding type registration short -> org.hibernate.type.ShortType@db99785
Adding type registration short -> org.hibernate.type.ShortType@db99785
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@db99785
Adding type registration integer -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration int -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b4872bc
Adding type registration long -> org.hibernate.type.LongType@74667e6a
Adding type registration long -> org.hibernate.type.LongType@74667e6a
Adding type registration java.lang.Long -> org.hibernate.type.LongType@74667e6a
Adding type registration float -> org.hibernate.type.FloatType@a54acec
Adding type registration float -> org.hibernate.type.FloatType@a54acec
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@a54acec
Adding type registration double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60e1d87c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@59303963
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@59303963
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@52d0f583
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@52d0f583
Adding type registration string -> org.hibernate.type.StringType@7af0affa
Adding type registration java.lang.String -> org.hibernate.type.StringType@7af0affa
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5b251fb9
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7f97bc14
Adding type registration url -> org.hibernate.type.UrlType@25a1a012
Adding type registration java.net.URL -> org.hibernate.type.UrlType@25a1a012
Adding type registration Duration -> org.hibernate.type.DurationType@5bf9ea6b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5bf9ea6b
Adding type registration Instant -> org.hibernate.type.InstantType@bc09d57
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@bc09d57
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7015ebef
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7015ebef
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1df5c7e3
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1df5c7e3
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@15c6027d
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@15c6027d
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46c10083
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46c10083
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@35eee641
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@35eee641
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2a8f6e6
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2a8f6e6
Adding type registration date -> org.hibernate.type.DateType@36359723
Adding type registration java.sql.Date -> org.hibernate.type.DateType@36359723
Adding type registration time -> org.hibernate.type.TimeType@5f08fe00
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5f08fe00
Adding type registration timestamp -> org.hibernate.type.TimestampType@724bf25f
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@724bf25f
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@724bf25f
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@26582ca
Adding type registration calendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2f3928ac
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@44e4cb76
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4aebee4b
Adding type registration locale -> org.hibernate.type.LocaleType@1c297897
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c297897
Adding type registration currency -> org.hibernate.type.CurrencyType@7889b4b9
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7889b4b9
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7f5614f9
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7f5614f9
Adding type registration class -> org.hibernate.type.ClassType@71a4f441
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71a4f441
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f6b53ed
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f6b53ed
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c48b72c
Adding type registration binary -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration byte[] -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration [B -> org.hibernate.type.BinaryType@6282b9f5
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@632b305d
Adding type registration row_version -> org.hibernate.type.RowVersionType@739831a4
Adding type registration image -> org.hibernate.type.ImageType@38883a31
Adding type registration characters -> org.hibernate.type.CharArrayType@118acf70
Adding type registration char[] -> org.hibernate.type.CharArrayType@118acf70
Adding type registration [C -> org.hibernate.type.CharArrayType@118acf70
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31efacad
Adding type registration text -> org.hibernate.type.TextType@6e24ce51
Adding type registration ntext -> org.hibernate.type.NTextType@4001d8c1
Adding type registration blob -> org.hibernate.type.BlobType@21390938
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@21390938
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4e4162bc
Adding type registration clob -> org.hibernate.type.ClobType@26d5a317
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26d5a317
Adding type registration nclob -> org.hibernate.type.NClobType@113f9078
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@113f9078
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e52a26b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@224c7de4
Adding type registration serializable -> org.hibernate.type.SerializableType@191c6e13
Adding type registration object -> org.hibernate.type.ObjectType@78c262ba
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@78c262ba
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7d2c345d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@217dc48e
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5db948c9
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@296edc75
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@357c9bd9
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7aea704c
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d0290d8
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@32507479
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@11069eac
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@11069eac
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5f6b53ed
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ec9fdb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@35af1558]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6b6c0b7c, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5b1f0f26, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@58516c91, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77ec9fdb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@61648dd2]
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69f24965
Registering SessionFactory: 42d83db0-28a7-485d-bef2-5e2084bddfe9 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2e590b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@2bb62414
Adding type registration yes_no -> org.hibernate.type.YesNoType@30bbcf91
Adding type registration byte -> org.hibernate.type.ByteType@eed890d
Adding type registration byte -> org.hibernate.type.ByteType@eed890d
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@eed890d
Adding type registration character -> org.hibernate.type.CharacterType@553d2579
Adding type registration char -> org.hibernate.type.CharacterType@553d2579
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@553d2579
Adding type registration short -> org.hibernate.type.ShortType@2f054f70
Adding type registration short -> org.hibernate.type.ShortType@2f054f70
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2f054f70
Adding type registration integer -> org.hibernate.type.IntegerType@3b97907c
Adding type registration int -> org.hibernate.type.IntegerType@3b97907c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3b97907c
Adding type registration long -> org.hibernate.type.LongType@738a5848
Adding type registration long -> org.hibernate.type.LongType@738a5848
Adding type registration java.lang.Long -> org.hibernate.type.LongType@738a5848
Adding type registration float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration double -> org.hibernate.type.DoubleType@437bd805
Adding type registration double -> org.hibernate.type.DoubleType@437bd805
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@437bd805
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@33a8c9c9
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@33a8c9c9
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4f363abd
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4f363abd
Adding type registration string -> org.hibernate.type.StringType@7c5df615
Adding type registration java.lang.String -> org.hibernate.type.StringType@7c5df615
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@241fbec
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@622d7e4
Adding type registration url -> org.hibernate.type.UrlType@2199e845
Adding type registration java.net.URL -> org.hibernate.type.UrlType@2199e845
Adding type registration Duration -> org.hibernate.type.DurationType@5e50df2e
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5e50df2e
Adding type registration Instant -> org.hibernate.type.InstantType@27960b1e
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@27960b1e
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@dbddbe3
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@dbddbe3
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4bf03fee
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4bf03fee
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7675c171
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7675c171
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28ee0a3c
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28ee0a3c
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7cf63b9a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7cf63b9a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@634ca3e7
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@634ca3e7
Adding type registration date -> org.hibernate.type.DateType@13866329
Adding type registration java.sql.Date -> org.hibernate.type.DateType@13866329
Adding type registration time -> org.hibernate.type.TimeType@552fee7a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@552fee7a
Adding type registration timestamp -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@e91af20
Adding type registration calendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@d5e575c
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1129829c
Adding type registration locale -> org.hibernate.type.LocaleType@3dbd7107
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3dbd7107
Adding type registration currency -> org.hibernate.type.CurrencyType@89caf47
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@89caf47
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2df65a56
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2df65a56
Adding type registration class -> org.hibernate.type.ClassType@224c7de4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@224c7de4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2afdf6b7
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2afdf6b7
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@35bd8bc9
Adding type registration binary -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration byte[] -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration [B -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration row_version -> org.hibernate.type.RowVersionType@2dd63e3
Adding type registration image -> org.hibernate.type.ImageType@1e00bfe2
Adding type registration characters -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration char[] -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration [C -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration text -> org.hibernate.type.TextType@4b03cbad
Adding type registration ntext -> org.hibernate.type.NTextType@5d71b500
Adding type registration blob -> org.hibernate.type.BlobType@6b162ecc
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b162ecc
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@56a4abd0
Adding type registration clob -> org.hibernate.type.ClobType@26457986
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26457986
Adding type registration nclob -> org.hibernate.type.NClobType@2bebd114
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2bebd114
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5a14e60d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@79ecc507
Adding type registration serializable -> org.hibernate.type.SerializableType@5a05dd30
Adding type registration object -> org.hibernate.type.ObjectType@5ec88f9e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5ec88f9e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@689faf79
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@582e9152
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7a31ca20
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@349c4d1c
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@21edd891
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@de579ff
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7971c2a9
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2fd39436
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@f08f8a9
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@f08f8a9
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2afdf6b7
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2bf4fa1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27210a3b]
Binding entity from annotated class: model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity model.Label on table label_table
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2e590b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@2bb62414
Adding type registration yes_no -> org.hibernate.type.YesNoType@30bbcf91
Adding type registration byte -> org.hibernate.type.ByteType@eed890d
Adding type registration byte -> org.hibernate.type.ByteType@eed890d
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@eed890d
Adding type registration character -> org.hibernate.type.CharacterType@553d2579
Adding type registration char -> org.hibernate.type.CharacterType@553d2579
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@553d2579
Adding type registration short -> org.hibernate.type.ShortType@2f054f70
Adding type registration short -> org.hibernate.type.ShortType@2f054f70
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2f054f70
Adding type registration integer -> org.hibernate.type.IntegerType@3b97907c
Adding type registration int -> org.hibernate.type.IntegerType@3b97907c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3b97907c
Adding type registration long -> org.hibernate.type.LongType@738a5848
Adding type registration long -> org.hibernate.type.LongType@738a5848
Adding type registration java.lang.Long -> org.hibernate.type.LongType@738a5848
Adding type registration float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration double -> org.hibernate.type.DoubleType@437bd805
Adding type registration double -> org.hibernate.type.DoubleType@437bd805
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@437bd805
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@33a8c9c9
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@33a8c9c9
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4f363abd
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4f363abd
Adding type registration string -> org.hibernate.type.StringType@7c5df615
Adding type registration java.lang.String -> org.hibernate.type.StringType@7c5df615
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@241fbec
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@622d7e4
Adding type registration url -> org.hibernate.type.UrlType@2199e845
Adding type registration java.net.URL -> org.hibernate.type.UrlType@2199e845
Adding type registration Duration -> org.hibernate.type.DurationType@5e50df2e
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5e50df2e
Adding type registration Instant -> org.hibernate.type.InstantType@27960b1e
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@27960b1e
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@dbddbe3
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@dbddbe3
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4bf03fee
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4bf03fee
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7675c171
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7675c171
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28ee0a3c
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28ee0a3c
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7cf63b9a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7cf63b9a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@634ca3e7
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@634ca3e7
Adding type registration date -> org.hibernate.type.DateType@13866329
Adding type registration java.sql.Date -> org.hibernate.type.DateType@13866329
Adding type registration time -> org.hibernate.type.TimeType@552fee7a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@552fee7a
Adding type registration timestamp -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@e91af20
Adding type registration calendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@d5e575c
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1129829c
Adding type registration locale -> org.hibernate.type.LocaleType@3dbd7107
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3dbd7107
Adding type registration currency -> org.hibernate.type.CurrencyType@89caf47
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@89caf47
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2df65a56
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2df65a56
Adding type registration class -> org.hibernate.type.ClassType@224c7de4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@224c7de4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2afdf6b7
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2afdf6b7
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@35bd8bc9
Adding type registration binary -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration byte[] -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration [B -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration row_version -> org.hibernate.type.RowVersionType@2dd63e3
Adding type registration image -> org.hibernate.type.ImageType@1e00bfe2
Adding type registration characters -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration char[] -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration [C -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration text -> org.hibernate.type.TextType@4b03cbad
Adding type registration ntext -> org.hibernate.type.NTextType@5d71b500
Adding type registration blob -> org.hibernate.type.BlobType@6b162ecc
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b162ecc
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@56a4abd0
Adding type registration clob -> org.hibernate.type.ClobType@26457986
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26457986
Adding type registration nclob -> org.hibernate.type.NClobType@2bebd114
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2bebd114
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5a14e60d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@79ecc507
Adding type registration serializable -> org.hibernate.type.SerializableType@5a05dd30
Adding type registration object -> org.hibernate.type.ObjectType@5ec88f9e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5ec88f9e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@689faf79
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@582e9152
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7a31ca20
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@349c4d1c
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@21edd891
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@de579ff
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7971c2a9
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2fd39436
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@f08f8a9
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@f08f8a9
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2afdf6b7
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2bf4fa1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27210a3b]
Binding entity from annotated class: model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity model.Label on table label_table
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@195580ba
Adding type registration boolean -> org.hibernate.type.BooleanType@195580ba
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@195580ba
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@db99785
Adding type registration true_false -> org.hibernate.type.TrueFalseType@f613067
Adding type registration yes_no -> org.hibernate.type.YesNoType@7b222230
Adding type registration byte -> org.hibernate.type.ByteType@3380ca3d
Adding type registration byte -> org.hibernate.type.ByteType@3380ca3d
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3380ca3d
Adding type registration character -> org.hibernate.type.CharacterType@e5c2463
Adding type registration char -> org.hibernate.type.CharacterType@e5c2463
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@e5c2463
Adding type registration short -> org.hibernate.type.ShortType@1320e68a
Adding type registration short -> org.hibernate.type.ShortType@1320e68a
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1320e68a
Adding type registration integer -> org.hibernate.type.IntegerType@7fb8bad0
Adding type registration int -> org.hibernate.type.IntegerType@7fb8bad0
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7fb8bad0
Adding type registration long -> org.hibernate.type.LongType@353f472a
Adding type registration long -> org.hibernate.type.LongType@353f472a
Adding type registration java.lang.Long -> org.hibernate.type.LongType@353f472a
Adding type registration float -> org.hibernate.type.FloatType@67d4c48d
Adding type registration float -> org.hibernate.type.FloatType@67d4c48d
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@67d4c48d
Adding type registration double -> org.hibernate.type.DoubleType@79afa369
Adding type registration double -> org.hibernate.type.DoubleType@79afa369
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@79afa369
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4525e9e8
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4525e9e8
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7a1a3468
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7a1a3468
Adding type registration string -> org.hibernate.type.StringType@bc09d57
Adding type registration java.lang.String -> org.hibernate.type.StringType@bc09d57
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@42ed89da
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34d480b9
Adding type registration url -> org.hibernate.type.UrlType@19dc0d32
Adding type registration java.net.URL -> org.hibernate.type.UrlType@19dc0d32
Adding type registration Duration -> org.hibernate.type.DurationType@644d1b61
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@644d1b61
Adding type registration Instant -> org.hibernate.type.InstantType@35eee641
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@35eee641
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2a8f6e6
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2a8f6e6
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@27b337bb
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@27b337bb
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@65be88ae
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@65be88ae
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@63f40ca0
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@63f40ca0
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1ab14636
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1ab14636
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1f10fec6
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1f10fec6
Adding type registration date -> org.hibernate.type.DateType@4a70d302
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4a70d302
Adding type registration time -> org.hibernate.type.TimeType@1f78d415
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1f78d415
Adding type registration timestamp -> org.hibernate.type.TimestampType@6ee88e21
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6ee88e21
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6ee88e21
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1f536481
Adding type registration calendar -> org.hibernate.type.CalendarType@237add
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@237add
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@237add
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@d653e41
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1625789b
Adding type registration locale -> org.hibernate.type.LocaleType@79d7035
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79d7035
Adding type registration currency -> org.hibernate.type.CurrencyType@11c78080
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@11c78080
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7f5fcfe9
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7f5fcfe9
Adding type registration class -> org.hibernate.type.ClassType@5bb911c1
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5bb911c1
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@195113de
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@195113de
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5aa781f2
Adding type registration binary -> org.hibernate.type.BinaryType@44b940a2
Adding type registration byte[] -> org.hibernate.type.BinaryType@44b940a2
Adding type registration [B -> org.hibernate.type.BinaryType@44b940a2
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4052b19f
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4052b19f
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4052b19f
Adding type registration row_version -> org.hibernate.type.RowVersionType@37af24cb
Adding type registration image -> org.hibernate.type.ImageType@670342a2
Adding type registration characters -> org.hibernate.type.CharArrayType@1129829c
Adding type registration char[] -> org.hibernate.type.CharArrayType@1129829c
Adding type registration [C -> org.hibernate.type.CharArrayType@1129829c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@790d8fdd
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@790d8fdd
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@790d8fdd
Adding type registration text -> org.hibernate.type.TextType@26d5a317
Adding type registration ntext -> org.hibernate.type.NTextType@18709cb2
Adding type registration blob -> org.hibernate.type.BlobType@36ad229b
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@36ad229b
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@60bf494c
Adding type registration clob -> org.hibernate.type.ClobType@57bd6a8f
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@57bd6a8f
Adding type registration nclob -> org.hibernate.type.NClobType@29013ef2
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@29013ef2
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@19f02280
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@c412556
Adding type registration serializable -> org.hibernate.type.SerializableType@339f3a55
Adding type registration object -> org.hibernate.type.ObjectType@11df2829
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@11df2829
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@39e53bef
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@14b275bd
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4ed18798
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4b03cbad
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5b29ab61
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5c313224
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e1e837d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4b957db0
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@57f725b8
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@57f725b8
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@195113de
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6b899971] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@453a30f8]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@50f13494, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@73c09a98, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@58516c91, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6b899971] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6fdd3382]
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7c6fc278
Registering SessionFactory: fc94d3e4-7ab9-47f2-bb2a-f53a13677b60 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2e590b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@2bb62414
Adding type registration yes_no -> org.hibernate.type.YesNoType@30bbcf91
Adding type registration byte -> org.hibernate.type.ByteType@eed890d
Adding type registration byte -> org.hibernate.type.ByteType@eed890d
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@eed890d
Adding type registration character -> org.hibernate.type.CharacterType@553d2579
Adding type registration char -> org.hibernate.type.CharacterType@553d2579
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@553d2579
Adding type registration short -> org.hibernate.type.ShortType@2f054f70
Adding type registration short -> org.hibernate.type.ShortType@2f054f70
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2f054f70
Adding type registration integer -> org.hibernate.type.IntegerType@3b97907c
Adding type registration int -> org.hibernate.type.IntegerType@3b97907c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3b97907c
Adding type registration long -> org.hibernate.type.LongType@738a5848
Adding type registration long -> org.hibernate.type.LongType@738a5848
Adding type registration java.lang.Long -> org.hibernate.type.LongType@738a5848
Adding type registration float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration double -> org.hibernate.type.DoubleType@437bd805
Adding type registration double -> org.hibernate.type.DoubleType@437bd805
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@437bd805
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@33a8c9c9
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@33a8c9c9
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4f363abd
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4f363abd
Adding type registration string -> org.hibernate.type.StringType@7c5df615
Adding type registration java.lang.String -> org.hibernate.type.StringType@7c5df615
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@241fbec
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@622d7e4
Adding type registration url -> org.hibernate.type.UrlType@2199e845
Adding type registration java.net.URL -> org.hibernate.type.UrlType@2199e845
Adding type registration Duration -> org.hibernate.type.DurationType@5e50df2e
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5e50df2e
Adding type registration Instant -> org.hibernate.type.InstantType@27960b1e
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@27960b1e
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@dbddbe3
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@dbddbe3
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4bf03fee
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4bf03fee
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7675c171
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7675c171
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28ee0a3c
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28ee0a3c
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7cf63b9a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7cf63b9a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@634ca3e7
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@634ca3e7
Adding type registration date -> org.hibernate.type.DateType@13866329
Adding type registration java.sql.Date -> org.hibernate.type.DateType@13866329
Adding type registration time -> org.hibernate.type.TimeType@552fee7a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@552fee7a
Adding type registration timestamp -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@e91af20
Adding type registration calendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@d5e575c
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1129829c
Adding type registration locale -> org.hibernate.type.LocaleType@3dbd7107
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3dbd7107
Adding type registration currency -> org.hibernate.type.CurrencyType@89caf47
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@89caf47
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2df65a56
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2df65a56
Adding type registration class -> org.hibernate.type.ClassType@224c7de4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@224c7de4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2afdf6b7
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2afdf6b7
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@35bd8bc9
Adding type registration binary -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration byte[] -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration [B -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration row_version -> org.hibernate.type.RowVersionType@2dd63e3
Adding type registration image -> org.hibernate.type.ImageType@1e00bfe2
Adding type registration characters -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration char[] -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration [C -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration text -> org.hibernate.type.TextType@4b03cbad
Adding type registration ntext -> org.hibernate.type.NTextType@5d71b500
Adding type registration blob -> org.hibernate.type.BlobType@6b162ecc
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b162ecc
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@56a4abd0
Adding type registration clob -> org.hibernate.type.ClobType@26457986
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26457986
Adding type registration nclob -> org.hibernate.type.NClobType@2bebd114
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2bebd114
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5a14e60d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@79ecc507
Adding type registration serializable -> org.hibernate.type.SerializableType@5a05dd30
Adding type registration object -> org.hibernate.type.ObjectType@5ec88f9e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5ec88f9e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@689faf79
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@582e9152
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7a31ca20
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@349c4d1c
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@21edd891
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@de579ff
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7971c2a9
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2fd39436
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@f08f8a9
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@f08f8a9
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2afdf6b7
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2bf4fa1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27210a3b]
Binding entity from annotated class: model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity model.Label on table label_table
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2e590b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@2bb62414
Adding type registration yes_no -> org.hibernate.type.YesNoType@30bbcf91
Adding type registration byte -> org.hibernate.type.ByteType@eed890d
Adding type registration byte -> org.hibernate.type.ByteType@eed890d
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@eed890d
Adding type registration character -> org.hibernate.type.CharacterType@553d2579
Adding type registration char -> org.hibernate.type.CharacterType@553d2579
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@553d2579
Adding type registration short -> org.hibernate.type.ShortType@2f054f70
Adding type registration short -> org.hibernate.type.ShortType@2f054f70
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2f054f70
Adding type registration integer -> org.hibernate.type.IntegerType@3b97907c
Adding type registration int -> org.hibernate.type.IntegerType@3b97907c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3b97907c
Adding type registration long -> org.hibernate.type.LongType@738a5848
Adding type registration long -> org.hibernate.type.LongType@738a5848
Adding type registration java.lang.Long -> org.hibernate.type.LongType@738a5848
Adding type registration float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration double -> org.hibernate.type.DoubleType@437bd805
Adding type registration double -> org.hibernate.type.DoubleType@437bd805
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@437bd805
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@33a8c9c9
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@33a8c9c9
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4f363abd
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4f363abd
Adding type registration string -> org.hibernate.type.StringType@7c5df615
Adding type registration java.lang.String -> org.hibernate.type.StringType@7c5df615
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@241fbec
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@622d7e4
Adding type registration url -> org.hibernate.type.UrlType@2199e845
Adding type registration java.net.URL -> org.hibernate.type.UrlType@2199e845
Adding type registration Duration -> org.hibernate.type.DurationType@5e50df2e
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5e50df2e
Adding type registration Instant -> org.hibernate.type.InstantType@27960b1e
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@27960b1e
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@dbddbe3
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@dbddbe3
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4bf03fee
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4bf03fee
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7675c171
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7675c171
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28ee0a3c
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28ee0a3c
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7cf63b9a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7cf63b9a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@634ca3e7
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@634ca3e7
Adding type registration date -> org.hibernate.type.DateType@13866329
Adding type registration java.sql.Date -> org.hibernate.type.DateType@13866329
Adding type registration time -> org.hibernate.type.TimeType@552fee7a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@552fee7a
Adding type registration timestamp -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@e91af20
Adding type registration calendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@d5e575c
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1129829c
Adding type registration locale -> org.hibernate.type.LocaleType@3dbd7107
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3dbd7107
Adding type registration currency -> org.hibernate.type.CurrencyType@89caf47
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@89caf47
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2df65a56
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2df65a56
Adding type registration class -> org.hibernate.type.ClassType@224c7de4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@224c7de4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2afdf6b7
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2afdf6b7
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@35bd8bc9
Adding type registration binary -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration byte[] -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration [B -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration row_version -> org.hibernate.type.RowVersionType@2dd63e3
Adding type registration image -> org.hibernate.type.ImageType@1e00bfe2
Adding type registration characters -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration char[] -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration [C -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration text -> org.hibernate.type.TextType@4b03cbad
Adding type registration ntext -> org.hibernate.type.NTextType@5d71b500
Adding type registration blob -> org.hibernate.type.BlobType@6b162ecc
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b162ecc
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@56a4abd0
Adding type registration clob -> org.hibernate.type.ClobType@26457986
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26457986
Adding type registration nclob -> org.hibernate.type.NClobType@2bebd114
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2bebd114
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5a14e60d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@79ecc507
Adding type registration serializable -> org.hibernate.type.SerializableType@5a05dd30
Adding type registration object -> org.hibernate.type.ObjectType@5ec88f9e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5ec88f9e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@689faf79
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@582e9152
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7a31ca20
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@349c4d1c
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@21edd891
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@de579ff
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7971c2a9
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2fd39436
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@f08f8a9
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@f08f8a9
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2afdf6b7
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2bf4fa1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27210a3b]
Binding entity from annotated class: model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity model.Label on table label_table
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2e590b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@2bb62414
Adding type registration yes_no -> org.hibernate.type.YesNoType@30bbcf91
Adding type registration byte -> org.hibernate.type.ByteType@eed890d
Adding type registration byte -> org.hibernate.type.ByteType@eed890d
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@eed890d
Adding type registration character -> org.hibernate.type.CharacterType@553d2579
Adding type registration char -> org.hibernate.type.CharacterType@553d2579
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@553d2579
Adding type registration short -> org.hibernate.type.ShortType@2f054f70
Adding type registration short -> org.hibernate.type.ShortType@2f054f70
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2f054f70
Adding type registration integer -> org.hibernate.type.IntegerType@3b97907c
Adding type registration int -> org.hibernate.type.IntegerType@3b97907c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3b97907c
Adding type registration long -> org.hibernate.type.LongType@738a5848
Adding type registration long -> org.hibernate.type.LongType@738a5848
Adding type registration java.lang.Long -> org.hibernate.type.LongType@738a5848
Adding type registration float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration double -> org.hibernate.type.DoubleType@437bd805
Adding type registration double -> org.hibernate.type.DoubleType@437bd805
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@437bd805
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@33a8c9c9
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@33a8c9c9
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4f363abd
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4f363abd
Adding type registration string -> org.hibernate.type.StringType@7c5df615
Adding type registration java.lang.String -> org.hibernate.type.StringType@7c5df615
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@241fbec
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@622d7e4
Adding type registration url -> org.hibernate.type.UrlType@2199e845
Adding type registration java.net.URL -> org.hibernate.type.UrlType@2199e845
Adding type registration Duration -> org.hibernate.type.DurationType@5e50df2e
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5e50df2e
Adding type registration Instant -> org.hibernate.type.InstantType@27960b1e
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@27960b1e
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@dbddbe3
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@dbddbe3
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4bf03fee
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4bf03fee
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7675c171
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7675c171
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28ee0a3c
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28ee0a3c
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7cf63b9a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7cf63b9a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@634ca3e7
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@634ca3e7
Adding type registration date -> org.hibernate.type.DateType@13866329
Adding type registration java.sql.Date -> org.hibernate.type.DateType@13866329
Adding type registration time -> org.hibernate.type.TimeType@552fee7a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@552fee7a
Adding type registration timestamp -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@e91af20
Adding type registration calendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@d5e575c
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1129829c
Adding type registration locale -> org.hibernate.type.LocaleType@3dbd7107
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3dbd7107
Adding type registration currency -> org.hibernate.type.CurrencyType@89caf47
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@89caf47
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2df65a56
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2df65a56
Adding type registration class -> org.hibernate.type.ClassType@224c7de4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@224c7de4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2afdf6b7
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2afdf6b7
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@35bd8bc9
Adding type registration binary -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration byte[] -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration [B -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration row_version -> org.hibernate.type.RowVersionType@2dd63e3
Adding type registration image -> org.hibernate.type.ImageType@1e00bfe2
Adding type registration characters -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration char[] -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration [C -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration text -> org.hibernate.type.TextType@4b03cbad
Adding type registration ntext -> org.hibernate.type.NTextType@5d71b500
Adding type registration blob -> org.hibernate.type.BlobType@6b162ecc
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b162ecc
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@56a4abd0
Adding type registration clob -> org.hibernate.type.ClobType@26457986
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26457986
Adding type registration nclob -> org.hibernate.type.NClobType@2bebd114
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2bebd114
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5a14e60d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@79ecc507
Adding type registration serializable -> org.hibernate.type.SerializableType@5a05dd30
Adding type registration object -> org.hibernate.type.ObjectType@5ec88f9e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5ec88f9e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@689faf79
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@582e9152
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7a31ca20
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@349c4d1c
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@21edd891
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@de579ff
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7971c2a9
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2fd39436
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@f08f8a9
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@f08f8a9
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2afdf6b7
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2bf4fa1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27210a3b]
Binding entity from annotated class: model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity model.Label on table label_table
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2e590b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@2bb62414
Adding type registration yes_no -> org.hibernate.type.YesNoType@30bbcf91
Adding type registration byte -> org.hibernate.type.ByteType@eed890d
Adding type registration byte -> org.hibernate.type.ByteType@eed890d
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@eed890d
Adding type registration character -> org.hibernate.type.CharacterType@553d2579
Adding type registration char -> org.hibernate.type.CharacterType@553d2579
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@553d2579
Adding type registration short -> org.hibernate.type.ShortType@2f054f70
Adding type registration short -> org.hibernate.type.ShortType@2f054f70
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2f054f70
Adding type registration integer -> org.hibernate.type.IntegerType@3b97907c
Adding type registration int -> org.hibernate.type.IntegerType@3b97907c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3b97907c
Adding type registration long -> org.hibernate.type.LongType@738a5848
Adding type registration long -> org.hibernate.type.LongType@738a5848
Adding type registration java.lang.Long -> org.hibernate.type.LongType@738a5848
Adding type registration float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration double -> org.hibernate.type.DoubleType@437bd805
Adding type registration double -> org.hibernate.type.DoubleType@437bd805
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@437bd805
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@33a8c9c9
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@33a8c9c9
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4f363abd
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4f363abd
Adding type registration string -> org.hibernate.type.StringType@7c5df615
Adding type registration java.lang.String -> org.hibernate.type.StringType@7c5df615
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@241fbec
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@622d7e4
Adding type registration url -> org.hibernate.type.UrlType@2199e845
Adding type registration java.net.URL -> org.hibernate.type.UrlType@2199e845
Adding type registration Duration -> org.hibernate.type.DurationType@5e50df2e
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5e50df2e
Adding type registration Instant -> org.hibernate.type.InstantType@27960b1e
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@27960b1e
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@dbddbe3
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@dbddbe3
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4bf03fee
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4bf03fee
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7675c171
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7675c171
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28ee0a3c
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28ee0a3c
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7cf63b9a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7cf63b9a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@634ca3e7
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@634ca3e7
Adding type registration date -> org.hibernate.type.DateType@13866329
Adding type registration java.sql.Date -> org.hibernate.type.DateType@13866329
Adding type registration time -> org.hibernate.type.TimeType@552fee7a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@552fee7a
Adding type registration timestamp -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@e91af20
Adding type registration calendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@d5e575c
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1129829c
Adding type registration locale -> org.hibernate.type.LocaleType@3dbd7107
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3dbd7107
Adding type registration currency -> org.hibernate.type.CurrencyType@89caf47
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@89caf47
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2df65a56
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2df65a56
Adding type registration class -> org.hibernate.type.ClassType@224c7de4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@224c7de4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2afdf6b7
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2afdf6b7
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@35bd8bc9
Adding type registration binary -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration byte[] -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration [B -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration row_version -> org.hibernate.type.RowVersionType@2dd63e3
Adding type registration image -> org.hibernate.type.ImageType@1e00bfe2
Adding type registration characters -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration char[] -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration [C -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration text -> org.hibernate.type.TextType@4b03cbad
Adding type registration ntext -> org.hibernate.type.NTextType@5d71b500
Adding type registration blob -> org.hibernate.type.BlobType@6b162ecc
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b162ecc
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@56a4abd0
Adding type registration clob -> org.hibernate.type.ClobType@26457986
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26457986
Adding type registration nclob -> org.hibernate.type.NClobType@2bebd114
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2bebd114
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5a14e60d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@79ecc507
Adding type registration serializable -> org.hibernate.type.SerializableType@5a05dd30
Adding type registration object -> org.hibernate.type.ObjectType@5ec88f9e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5ec88f9e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@689faf79
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@582e9152
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7a31ca20
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@349c4d1c
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@21edd891
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@de579ff
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7971c2a9
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2fd39436
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@f08f8a9
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@f08f8a9
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2afdf6b7
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2bf4fa1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27210a3b]
Binding entity from annotated class: model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity model.Label on table label_table
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2e590b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@2bb62414
Adding type registration yes_no -> org.hibernate.type.YesNoType@30bbcf91
Adding type registration byte -> org.hibernate.type.ByteType@eed890d
Adding type registration byte -> org.hibernate.type.ByteType@eed890d
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@eed890d
Adding type registration character -> org.hibernate.type.CharacterType@553d2579
Adding type registration char -> org.hibernate.type.CharacterType@553d2579
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@553d2579
Adding type registration short -> org.hibernate.type.ShortType@2f054f70
Adding type registration short -> org.hibernate.type.ShortType@2f054f70
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2f054f70
Adding type registration integer -> org.hibernate.type.IntegerType@3b97907c
Adding type registration int -> org.hibernate.type.IntegerType@3b97907c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3b97907c
Adding type registration long -> org.hibernate.type.LongType@738a5848
Adding type registration long -> org.hibernate.type.LongType@738a5848
Adding type registration java.lang.Long -> org.hibernate.type.LongType@738a5848
Adding type registration float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration double -> org.hibernate.type.DoubleType@437bd805
Adding type registration double -> org.hibernate.type.DoubleType@437bd805
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@437bd805
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@33a8c9c9
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@33a8c9c9
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4f363abd
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4f363abd
Adding type registration string -> org.hibernate.type.StringType@7c5df615
Adding type registration java.lang.String -> org.hibernate.type.StringType@7c5df615
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@241fbec
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@622d7e4
Adding type registration url -> org.hibernate.type.UrlType@2199e845
Adding type registration java.net.URL -> org.hibernate.type.UrlType@2199e845
Adding type registration Duration -> org.hibernate.type.DurationType@5e50df2e
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5e50df2e
Adding type registration Instant -> org.hibernate.type.InstantType@27960b1e
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@27960b1e
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@dbddbe3
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@dbddbe3
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4bf03fee
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4bf03fee
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7675c171
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7675c171
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28ee0a3c
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28ee0a3c
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7cf63b9a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7cf63b9a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@634ca3e7
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@634ca3e7
Adding type registration date -> org.hibernate.type.DateType@13866329
Adding type registration java.sql.Date -> org.hibernate.type.DateType@13866329
Adding type registration time -> org.hibernate.type.TimeType@552fee7a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@552fee7a
Adding type registration timestamp -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@e91af20
Adding type registration calendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@d5e575c
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1129829c
Adding type registration locale -> org.hibernate.type.LocaleType@3dbd7107
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3dbd7107
Adding type registration currency -> org.hibernate.type.CurrencyType@89caf47
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@89caf47
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2df65a56
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2df65a56
Adding type registration class -> org.hibernate.type.ClassType@224c7de4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@224c7de4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2afdf6b7
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2afdf6b7
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@35bd8bc9
Adding type registration binary -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration byte[] -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration [B -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration row_version -> org.hibernate.type.RowVersionType@2dd63e3
Adding type registration image -> org.hibernate.type.ImageType@1e00bfe2
Adding type registration characters -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration char[] -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration [C -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration text -> org.hibernate.type.TextType@4b03cbad
Adding type registration ntext -> org.hibernate.type.NTextType@5d71b500
Adding type registration blob -> org.hibernate.type.BlobType@6b162ecc
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b162ecc
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@56a4abd0
Adding type registration clob -> org.hibernate.type.ClobType@26457986
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26457986
Adding type registration nclob -> org.hibernate.type.NClobType@2bebd114
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2bebd114
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5a14e60d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@79ecc507
Adding type registration serializable -> org.hibernate.type.SerializableType@5a05dd30
Adding type registration object -> org.hibernate.type.ObjectType@5ec88f9e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5ec88f9e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@689faf79
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@582e9152
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7a31ca20
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@349c4d1c
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@21edd891
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@de579ff
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7971c2a9
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2fd39436
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@f08f8a9
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@f08f8a9
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2afdf6b7
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2bf4fa1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27210a3b]
Binding entity from annotated class: model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity model.Task on table task_table
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2e590b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@2bb62414
Adding type registration yes_no -> org.hibernate.type.YesNoType@30bbcf91
Adding type registration byte -> org.hibernate.type.ByteType@eed890d
Adding type registration byte -> org.hibernate.type.ByteType@eed890d
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@eed890d
Adding type registration character -> org.hibernate.type.CharacterType@553d2579
Adding type registration char -> org.hibernate.type.CharacterType@553d2579
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@553d2579
Adding type registration short -> org.hibernate.type.ShortType@2f054f70
Adding type registration short -> org.hibernate.type.ShortType@2f054f70
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2f054f70
Adding type registration integer -> org.hibernate.type.IntegerType@3b97907c
Adding type registration int -> org.hibernate.type.IntegerType@3b97907c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3b97907c
Adding type registration long -> org.hibernate.type.LongType@738a5848
Adding type registration long -> org.hibernate.type.LongType@738a5848
Adding type registration java.lang.Long -> org.hibernate.type.LongType@738a5848
Adding type registration float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration double -> org.hibernate.type.DoubleType@437bd805
Adding type registration double -> org.hibernate.type.DoubleType@437bd805
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@437bd805
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@33a8c9c9
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@33a8c9c9
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4f363abd
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4f363abd
Adding type registration string -> org.hibernate.type.StringType@7c5df615
Adding type registration java.lang.String -> org.hibernate.type.StringType@7c5df615
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@241fbec
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@622d7e4
Adding type registration url -> org.hibernate.type.UrlType@2199e845
Adding type registration java.net.URL -> org.hibernate.type.UrlType@2199e845
Adding type registration Duration -> org.hibernate.type.DurationType@5e50df2e
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5e50df2e
Adding type registration Instant -> org.hibernate.type.InstantType@27960b1e
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@27960b1e
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@dbddbe3
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@dbddbe3
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4bf03fee
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4bf03fee
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7675c171
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7675c171
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28ee0a3c
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28ee0a3c
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7cf63b9a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7cf63b9a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@634ca3e7
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@634ca3e7
Adding type registration date -> org.hibernate.type.DateType@13866329
Adding type registration java.sql.Date -> org.hibernate.type.DateType@13866329
Adding type registration time -> org.hibernate.type.TimeType@552fee7a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@552fee7a
Adding type registration timestamp -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@e91af20
Adding type registration calendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@d5e575c
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1129829c
Adding type registration locale -> org.hibernate.type.LocaleType@3dbd7107
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3dbd7107
Adding type registration currency -> org.hibernate.type.CurrencyType@89caf47
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@89caf47
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2df65a56
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2df65a56
Adding type registration class -> org.hibernate.type.ClassType@224c7de4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@224c7de4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2afdf6b7
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2afdf6b7
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@35bd8bc9
Adding type registration binary -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration byte[] -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration [B -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration row_version -> org.hibernate.type.RowVersionType@2dd63e3
Adding type registration image -> org.hibernate.type.ImageType@1e00bfe2
Adding type registration characters -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration char[] -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration [C -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration text -> org.hibernate.type.TextType@4b03cbad
Adding type registration ntext -> org.hibernate.type.NTextType@5d71b500
Adding type registration blob -> org.hibernate.type.BlobType@6b162ecc
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b162ecc
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@56a4abd0
Adding type registration clob -> org.hibernate.type.ClobType@26457986
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26457986
Adding type registration nclob -> org.hibernate.type.NClobType@2bebd114
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2bebd114
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5a14e60d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@79ecc507
Adding type registration serializable -> org.hibernate.type.SerializableType@5a05dd30
Adding type registration object -> org.hibernate.type.ObjectType@5ec88f9e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5ec88f9e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@689faf79
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@582e9152
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7a31ca20
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@349c4d1c
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@21edd891
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@de579ff
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7971c2a9
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2fd39436
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@f08f8a9
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@f08f8a9
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2afdf6b7
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2bf4fa1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27210a3b]
Binding entity from annotated class: model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Task:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
MetadataSourceProcessor property firstName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:firstName]
building SimpleValue for firstName
Building property firstName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(firstName)]), firstName, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for firstName
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [id] to be non-null as it is part of the primary key for table [task_table]
Forcing column [firstname] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@4e25282d, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3b29d36c, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@58516c91, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2bf4fa1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6a7ab205]
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
Static SQL for entity: model.User
 Version select: select firstName from user_table where firstName =?
 Snapshot select: select user_.firstName, user_.lastName as lastname2_2_ from user_table user_ where user_.firstName=?
 Insert 0: insert into user_table (lastName, firstName) values (?, ?)
 Update 0: update user_table set lastName=? where firstName=?
 Delete 0: delete from user_table where firstName=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b312863]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {firstnam1_2_0_}

Static select for entity model.User [NONE]: select user0_.firstName as firstnam1_2_0_, user0_.lastName as lastname2_2_0_ from user_table user0_ where user0_.firstName=?
Static SQL for entity: model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@732fa176]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Label)
    - Returns
       - EntityReturnImpl(entity=model.Label, querySpaceUid=<gen:0>, path=model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: model.Task
 Version select: select id from task_table where id =?
 Snapshot select: select task_.id, task_.name as name2_1_ from task_table task_ where task_.id=?
 Insert 0: insert into task_table (name, id) values (?, ?)
 Update 0: update task_table set name=? where id=?
 Delete 0: delete from task_table where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c7b4a31]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Task)
    - Returns
       - EntityReturnImpl(entity=model.Task, querySpaceUid=<gen:0>, path=model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity model.Task [NONE]: select task0_.id as id1_1_0_, task0_.name as name2_1_0_ from task_table task0_ where task0_.id=?
drop table if exists label_table cascade
SQL Warning
org.postgresql.util.PSQLWarning: table "label_table" does not exist, skipping
	at org.postgresql.core.v3.QueryExecutorImpl.receiveNoticeResponse(QueryExecutorImpl.java:2529)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2275)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:311)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:447)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:368)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:309)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:295)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:272)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:267)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:241)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:318)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:468)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:616)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:925)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85)
	at Main.<clinit>(Main.java:15)
SQL Warning Code: 0, SQLState: 00000
table "label_table" does not exist, skipping
drop table if exists task_table cascade
SQL Warning
org.postgresql.util.PSQLWarning: table "task_table" does not exist, skipping
	at org.postgresql.core.v3.QueryExecutorImpl.receiveNoticeResponse(QueryExecutorImpl.java:2529)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2275)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:311)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:447)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:368)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:309)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:295)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:272)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:267)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:241)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:318)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:468)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:616)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:925)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85)
	at Main.<clinit>(Main.java:15)
SQL Warning Code: 0, SQLState: 00000
table "task_table" does not exist, skipping
drop table if exists user_table cascade
SQL Warning
org.postgresql.util.PSQLWarning: table "user_table" does not exist, skipping
	at org.postgresql.core.v3.QueryExecutorImpl.receiveNoticeResponse(QueryExecutorImpl.java:2529)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2275)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:311)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:447)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:368)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:309)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:295)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:272)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:267)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:241)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:318)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:468)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:616)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:925)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85)
	at Main.<clinit>(Main.java:15)
SQL Warning Code: 0, SQLState: 00000
table "user_table" does not exist, skipping
create table label_table (amount float8 not null, primary key (amount))
create table task_table (id int4 not null, name varchar(255), primary key (id))
create table user_table (firstName varchar(255) not null, lastName varchar(255), primary key (firstName))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@79392584
Registering SessionFactory: deadfe20-1e3f-4cda-a2e0-c260194a2901 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2e590b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@2bb62414
Adding type registration yes_no -> org.hibernate.type.YesNoType@30bbcf91
Adding type registration byte -> org.hibernate.type.ByteType@eed890d
Adding type registration byte -> org.hibernate.type.ByteType@eed890d
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@eed890d
Adding type registration character -> org.hibernate.type.CharacterType@553d2579
Adding type registration char -> org.hibernate.type.CharacterType@553d2579
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@553d2579
Adding type registration short -> org.hibernate.type.ShortType@2f054f70
Adding type registration short -> org.hibernate.type.ShortType@2f054f70
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2f054f70
Adding type registration integer -> org.hibernate.type.IntegerType@3b97907c
Adding type registration int -> org.hibernate.type.IntegerType@3b97907c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3b97907c
Adding type registration long -> org.hibernate.type.LongType@738a5848
Adding type registration long -> org.hibernate.type.LongType@738a5848
Adding type registration java.lang.Long -> org.hibernate.type.LongType@738a5848
Adding type registration float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration double -> org.hibernate.type.DoubleType@437bd805
Adding type registration double -> org.hibernate.type.DoubleType@437bd805
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@437bd805
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@33a8c9c9
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@33a8c9c9
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4f363abd
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4f363abd
Adding type registration string -> org.hibernate.type.StringType@7c5df615
Adding type registration java.lang.String -> org.hibernate.type.StringType@7c5df615
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@241fbec
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@622d7e4
Adding type registration url -> org.hibernate.type.UrlType@2199e845
Adding type registration java.net.URL -> org.hibernate.type.UrlType@2199e845
Adding type registration Duration -> org.hibernate.type.DurationType@5e50df2e
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5e50df2e
Adding type registration Instant -> org.hibernate.type.InstantType@27960b1e
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@27960b1e
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@dbddbe3
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@dbddbe3
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4bf03fee
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4bf03fee
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7675c171
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7675c171
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28ee0a3c
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28ee0a3c
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7cf63b9a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7cf63b9a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@634ca3e7
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@634ca3e7
Adding type registration date -> org.hibernate.type.DateType@13866329
Adding type registration java.sql.Date -> org.hibernate.type.DateType@13866329
Adding type registration time -> org.hibernate.type.TimeType@552fee7a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@552fee7a
Adding type registration timestamp -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@e91af20
Adding type registration calendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@d5e575c
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1129829c
Adding type registration locale -> org.hibernate.type.LocaleType@3dbd7107
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3dbd7107
Adding type registration currency -> org.hibernate.type.CurrencyType@89caf47
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@89caf47
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2df65a56
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2df65a56
Adding type registration class -> org.hibernate.type.ClassType@224c7de4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@224c7de4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2afdf6b7
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2afdf6b7
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@35bd8bc9
Adding type registration binary -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration byte[] -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration [B -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration row_version -> org.hibernate.type.RowVersionType@2dd63e3
Adding type registration image -> org.hibernate.type.ImageType@1e00bfe2
Adding type registration characters -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration char[] -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration [C -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration text -> org.hibernate.type.TextType@4b03cbad
Adding type registration ntext -> org.hibernate.type.NTextType@5d71b500
Adding type registration blob -> org.hibernate.type.BlobType@6b162ecc
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b162ecc
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@56a4abd0
Adding type registration clob -> org.hibernate.type.ClobType@26457986
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26457986
Adding type registration nclob -> org.hibernate.type.NClobType@2bebd114
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2bebd114
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5a14e60d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@79ecc507
Adding type registration serializable -> org.hibernate.type.SerializableType@5a05dd30
Adding type registration object -> org.hibernate.type.ObjectType@5ec88f9e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5ec88f9e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@689faf79
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@582e9152
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7a31ca20
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@349c4d1c
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@21edd891
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@de579ff
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7971c2a9
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2fd39436
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@595184d8
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@595184d8
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2afdf6b7
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@720ffab4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2e62e227]
Binding entity from annotated class: model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Task:name]
building SimpleValue for name
Building property name
Binding entity from annotated class: model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
MetadataSourceProcessor property firstName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:firstName]
building SimpleValue for firstName
Building property firstName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(firstName)]), firstName, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for name
Starting fillSimpleValue for firstName
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [id] to be non-null as it is part of the primary key for table [task_table]
Forcing column [firstname] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@5ce41f1f, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@56820446, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@58516c91, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@720ffab4] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@453e1bba]
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
Static SQL for entity: model.User
 Version select: select firstName from user_table where firstName =?
 Snapshot select: select user_.firstName, user_.lastName as lastname2_2_ from user_table user_ where user_.firstName=?
 Insert 0: insert into user_table (lastName, firstName) values (?, ?)
 Update 0: update user_table set lastName=? where firstName=?
 Delete 0: delete from user_table where firstName=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ec258f1]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {firstnam1_2_0_}

Static select for entity model.User [NONE]: select user0_.firstName as firstnam1_2_0_, user0_.lastName as lastname2_2_0_ from user_table user0_ where user0_.firstName=?
Static SQL for entity: model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f83616]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Label)
    - Returns
       - EntityReturnImpl(entity=model.Label, querySpaceUid=<gen:0>, path=model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: model.Task
 Version select: select id from task_table where id =?
 Snapshot select: select task_.id, task_.name as name2_1_ from task_table task_ where task_.id=?
 Insert 0: insert into task_table (name, id) values (?, ?)
 Update 0: update task_table set name=? where id=?
 Delete 0: delete from task_table where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f0bf0ed]
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Task)
    - Returns
       - EntityReturnImpl(entity=model.Task, querySpaceUid=<gen:0>, path=model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

Static select for entity model.Task [NONE]: select task0_.id as id1_1_0_, task0_.name as name2_1_0_ from task_table task0_ where task0_.id=?
drop table if exists label_table cascade
drop table if exists task_table cascade
drop table if exists user_table cascade
create table label_table (amount float8 not null, primary key (amount))
create table task_table (id int4 not null, name varchar(255), primary key (id))
create table user_table (firstName varchar(255) not null, lastName varchar(255), primary key (firstName))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@519e14f6
Registering SessionFactory: 8efba848-f000-450a-a7b8-4e84a20c814c (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c412556
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6d0290d8
Adding type registration yes_no -> org.hibernate.type.YesNoType@2dd63e3
Adding type registration byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration character -> org.hibernate.type.CharacterType@49580ca8
Adding type registration char -> org.hibernate.type.CharacterType@49580ca8
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@49580ca8
Adding type registration short -> org.hibernate.type.ShortType@764fffa0
Adding type registration short -> org.hibernate.type.ShortType@764fffa0
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@764fffa0
Adding type registration integer -> org.hibernate.type.IntegerType@14b275bd
Adding type registration int -> org.hibernate.type.IntegerType@14b275bd
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@14b275bd
Adding type registration long -> org.hibernate.type.LongType@626b639e
Adding type registration long -> org.hibernate.type.LongType@626b639e
Adding type registration java.lang.Long -> org.hibernate.type.LongType@626b639e
Adding type registration float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@551be9f6
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@551be9f6
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1f129467
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1f129467
Adding type registration string -> org.hibernate.type.StringType@53a50b0a
Adding type registration java.lang.String -> org.hibernate.type.StringType@53a50b0a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@65eb3597
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5a14e60d
Adding type registration url -> org.hibernate.type.UrlType@4966bab1
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4966bab1
Adding type registration Duration -> org.hibernate.type.DurationType@17c0274c
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@17c0274c
Adding type registration Instant -> org.hibernate.type.InstantType@69796bd0
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@69796bd0
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@756b2d90
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@756b2d90
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@bb3ecfe
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@bb3ecfe
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@21edd891
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@21edd891
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@251d7fdd
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@251d7fdd
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@76cdafa3
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@76cdafa3
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@46b2dcc5
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@46b2dcc5
Adding type registration date -> org.hibernate.type.DateType@6986f93e
Adding type registration java.sql.Date -> org.hibernate.type.DateType@6986f93e
Adding type registration time -> org.hibernate.type.TimeType@1511d157
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1511d157
Adding type registration timestamp -> org.hibernate.type.TimestampType@634f58d2
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@634f58d2
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@634f58d2
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5b02a984
Adding type registration calendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7c588adc
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3d104c9b
Adding type registration locale -> org.hibernate.type.LocaleType@7b96de8d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b96de8d
Adding type registration currency -> org.hibernate.type.CurrencyType@6d0e45a5
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d0e45a5
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5a9840f3
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5a9840f3
Adding type registration class -> org.hibernate.type.ClassType@67b61834
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@67b61834
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c8d58ed
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c8d58ed
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6de7778f
Adding type registration binary -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration byte[] -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration [B -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration row_version -> org.hibernate.type.RowVersionType@74f280bd
Adding type registration image -> org.hibernate.type.ImageType@37c7766e
Adding type registration characters -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration char[] -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration [C -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration text -> org.hibernate.type.TextType@37d28938
Adding type registration ntext -> org.hibernate.type.NTextType@53314f76
Adding type registration blob -> org.hibernate.type.BlobType@342ee097
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@342ee097
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b70d1fb
Adding type registration clob -> org.hibernate.type.ClobType@55361f03
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@55361f03
Adding type registration nclob -> org.hibernate.type.NClobType@51888019
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51888019
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@23bd0c81
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26da1ba2
Adding type registration serializable -> org.hibernate.type.SerializableType@5d850a25
Adding type registration object -> org.hibernate.type.ObjectType@5bb8e6fc
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5bb8e6fc
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@66e341e9
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5b48f0f4
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@546ed2a0
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5bfc79cb
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@27ec8754
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3bbf1c0d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@19662208
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@216c22ce
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@8585cdd
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@8585cdd
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5c8d58ed
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c6b300a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4247093b]
Binding entity from annotated class: model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
MetadataSourceProcessor property firstName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:firstName]
building SimpleValue for firstName
Building property firstName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(firstName)]), firstName, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for firstName
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [firstname] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@2ad6aeb8, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4e35a219, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@3b1ed14b, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c6b300a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@78ab63b5]
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
Static SQL for entity: model.User
 Version select: select firstName from user_table where firstName =?
 Snapshot select: select user_.firstName, user_.lastName as lastname2_2_ from user_table user_ where user_.firstName=?
 Insert 0: insert into user_table (lastName, firstName) values (?, ?)
 Update 0: update user_table set lastName=? where firstName=?
 Delete 0: delete from user_table where firstName=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63e81ac6]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {firstnam1_2_0_}

Static select for entity model.User [NONE]: select user0_.firstName as firstnam1_2_0_, user0_.lastName as lastname2_2_0_ from user_table user0_ where user0_.firstName=?
Static SQL for entity: model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ae6119b]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Label)
    - Returns
       - EntityReturnImpl(entity=model.Label, querySpaceUid=<gen:0>, path=model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3abd7b20]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Task)
    - Returns
       - EntityReturnImpl(entity=model.Task, querySpaceUid=<gen:0>, path=model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
drop table if exists label_table cascade
drop table if exists task_table cascade
drop table if exists user_table cascade
create table label_table (amount float8 not null, primary key (amount))
create table task_table (name int4 not null, primary key (name))
create table user_table (firstName varchar(255) not null, lastName varchar(255), primary key (firstName))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@17adbecf
Registering SessionFactory: 155a0223-6695-45de-9ba8-b80a20de1777 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@1e30db85
Adding type registration boolean -> org.hibernate.type.BooleanType@1e30db85
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1e30db85
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6f930e0
Adding type registration true_false -> org.hibernate.type.TrueFalseType@32507479
Adding type registration yes_no -> org.hibernate.type.YesNoType@7d1c164a
Adding type registration byte -> org.hibernate.type.ByteType@3e28d779
Adding type registration byte -> org.hibernate.type.ByteType@3e28d779
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e28d779
Adding type registration character -> org.hibernate.type.CharacterType@525647f3
Adding type registration char -> org.hibernate.type.CharacterType@525647f3
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@525647f3
Adding type registration short -> org.hibernate.type.ShortType@35145874
Adding type registration short -> org.hibernate.type.ShortType@35145874
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@35145874
Adding type registration integer -> org.hibernate.type.IntegerType@4ed18798
Adding type registration int -> org.hibernate.type.IntegerType@4ed18798
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4ed18798
Adding type registration long -> org.hibernate.type.LongType@273fa9e
Adding type registration long -> org.hibernate.type.LongType@273fa9e
Adding type registration java.lang.Long -> org.hibernate.type.LongType@273fa9e
Adding type registration float -> org.hibernate.type.FloatType@6f85ee02
Adding type registration float -> org.hibernate.type.FloatType@6f85ee02
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6f85ee02
Adding type registration double -> org.hibernate.type.DoubleType@58a765ce
Adding type registration double -> org.hibernate.type.DoubleType@58a765ce
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@58a765ce
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@269222ae
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@269222ae
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@646cd766
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@646cd766
Adding type registration string -> org.hibernate.type.StringType@74ba6ff5
Adding type registration java.lang.String -> org.hibernate.type.StringType@74ba6ff5
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3c7279a5
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f882465
Adding type registration url -> org.hibernate.type.UrlType@7f0f84d4
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7f0f84d4
Adding type registration Duration -> org.hibernate.type.DurationType@7abeabe9
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7abeabe9
Adding type registration Instant -> org.hibernate.type.InstantType@40df6090
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@40df6090
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3520958b
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3520958b
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5ec88f9e
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5ec88f9e
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@de579ff
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@de579ff
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78e68401
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78e68401
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6b27b2d0
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6b27b2d0
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@240f350a
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@240f350a
Adding type registration date -> org.hibernate.type.DateType@6bce313
Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bce313
Adding type registration time -> org.hibernate.type.TimeType@418f890f
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@418f890f
Adding type registration timestamp -> org.hibernate.type.TimestampType@585513a8
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@585513a8
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@585513a8
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@57186526
Adding type registration calendar -> org.hibernate.type.CalendarType@2a8dd942
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2a8dd942
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2a8dd942
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@33ec2c0c
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6544899b
Adding type registration locale -> org.hibernate.type.LocaleType@7ccd611e
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7ccd611e
Adding type registration currency -> org.hibernate.type.CurrencyType@7e7740a5
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7e7740a5
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7d30007d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7d30007d
Adding type registration class -> org.hibernate.type.ClassType@3b0d3a63
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3b0d3a63
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6a567f7b
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6a567f7b
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@367d34c0
Adding type registration binary -> org.hibernate.type.BinaryType@3815146b
Adding type registration byte[] -> org.hibernate.type.BinaryType@3815146b
Adding type registration [B -> org.hibernate.type.BinaryType@3815146b
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@20349058
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@20349058
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@20349058
Adding type registration row_version -> org.hibernate.type.RowVersionType@675b18ff
Adding type registration image -> org.hibernate.type.ImageType@3fb450d7
Adding type registration characters -> org.hibernate.type.CharArrayType@69a40b3c
Adding type registration char[] -> org.hibernate.type.CharArrayType@69a40b3c
Adding type registration [C -> org.hibernate.type.CharArrayType@69a40b3c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@50bc3219
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@50bc3219
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@50bc3219
Adding type registration text -> org.hibernate.type.TextType@7d0cd23c
Adding type registration ntext -> org.hibernate.type.NTextType@62a6674f
Adding type registration blob -> org.hibernate.type.BlobType@6ac45c0c
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6ac45c0c
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3002e397
Adding type registration clob -> org.hibernate.type.ClobType@581c9bb7
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@581c9bb7
Adding type registration nclob -> org.hibernate.type.NClobType@6f50d55c
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6f50d55c
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1332dec4
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3820cfe
Adding type registration serializable -> org.hibernate.type.SerializableType@b022551
Adding type registration object -> org.hibernate.type.ObjectType@2726a511
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2726a511
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5b48f0f4
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@546ed2a0
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5bfc79cb
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@27ec8754
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3bbf1c0d
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@19662208
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@216c22ce
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@62f9c790
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1325f967
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@1325f967
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6a567f7b
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4247093b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7074da1d]
Binding entity from annotated class: model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
MetadataSourceProcessor property firstName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:firstName]
building SimpleValue for firstName
Building property firstName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(firstName)]), firstName, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for firstName
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [firstname] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@4e35a219, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7772ec28, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@690bc15e, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4247093b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2b9370cc]
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
Static SQL for entity: model.User
 Version select: select firstName from user_table where firstName =?
 Snapshot select: select user_.firstName, user_.lastName as lastname2_2_ from user_table user_ where user_.firstName=?
 Insert 0: insert into user_table (lastName, firstName) values (?, ?)
 Update 0: update user_table set lastName=? where firstName=?
 Delete 0: delete from user_table where firstName=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45775a15]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {firstnam1_2_0_}

Static select for entity model.User [NONE]: select user0_.firstName as firstnam1_2_0_, user0_.lastName as lastname2_2_0_ from user_table user0_ where user0_.firstName=?
Static SQL for entity: model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31b6eec8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Label)
    - Returns
       - EntityReturnImpl(entity=model.Label, querySpaceUid=<gen:0>, path=model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@329a27ae]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Task)
    - Returns
       - EntityReturnImpl(entity=model.Task, querySpaceUid=<gen:0>, path=model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
drop table if exists label_table cascade
drop table if exists task_table cascade
drop table if exists user_table cascade
create table label_table (amount float8 not null, primary key (amount))
create table task_table (name int4 not null, primary key (name))
create table user_table (firstName varchar(255) not null, lastName varchar(255), primary key (firstName))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@59eb987a
Registering SessionFactory: bc6ec6c8-30d9-4810-be98-ca2436c9b1a5 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@1e30db85
Adding type registration boolean -> org.hibernate.type.BooleanType@1e30db85
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1e30db85
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6f930e0
Adding type registration true_false -> org.hibernate.type.TrueFalseType@32507479
Adding type registration yes_no -> org.hibernate.type.YesNoType@7d1c164a
Adding type registration byte -> org.hibernate.type.ByteType@3e28d779
Adding type registration byte -> org.hibernate.type.ByteType@3e28d779
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e28d779
Adding type registration character -> org.hibernate.type.CharacterType@525647f3
Adding type registration char -> org.hibernate.type.CharacterType@525647f3
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@525647f3
Adding type registration short -> org.hibernate.type.ShortType@35145874
Adding type registration short -> org.hibernate.type.ShortType@35145874
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@35145874
Adding type registration integer -> org.hibernate.type.IntegerType@4ed18798
Adding type registration int -> org.hibernate.type.IntegerType@4ed18798
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4ed18798
Adding type registration long -> org.hibernate.type.LongType@273fa9e
Adding type registration long -> org.hibernate.type.LongType@273fa9e
Adding type registration java.lang.Long -> org.hibernate.type.LongType@273fa9e
Adding type registration float -> org.hibernate.type.FloatType@6f85ee02
Adding type registration float -> org.hibernate.type.FloatType@6f85ee02
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6f85ee02
Adding type registration double -> org.hibernate.type.DoubleType@58a765ce
Adding type registration double -> org.hibernate.type.DoubleType@58a765ce
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@58a765ce
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@269222ae
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@269222ae
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@646cd766
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@646cd766
Adding type registration string -> org.hibernate.type.StringType@74ba6ff5
Adding type registration java.lang.String -> org.hibernate.type.StringType@74ba6ff5
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3c7279a5
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f882465
Adding type registration url -> org.hibernate.type.UrlType@7f0f84d4
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7f0f84d4
Adding type registration Duration -> org.hibernate.type.DurationType@7abeabe9
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7abeabe9
Adding type registration Instant -> org.hibernate.type.InstantType@40df6090
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@40df6090
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3520958b
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3520958b
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5ec88f9e
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5ec88f9e
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@de579ff
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@de579ff
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78e68401
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78e68401
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6b27b2d0
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6b27b2d0
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@240f350a
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@240f350a
Adding type registration date -> org.hibernate.type.DateType@6bce313
Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bce313
Adding type registration time -> org.hibernate.type.TimeType@418f890f
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@418f890f
Adding type registration timestamp -> org.hibernate.type.TimestampType@585513a8
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@585513a8
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@585513a8
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@57186526
Adding type registration calendar -> org.hibernate.type.CalendarType@2a8dd942
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2a8dd942
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2a8dd942
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@33ec2c0c
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6544899b
Adding type registration locale -> org.hibernate.type.LocaleType@7ccd611e
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7ccd611e
Adding type registration currency -> org.hibernate.type.CurrencyType@7e7740a5
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7e7740a5
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7d30007d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7d30007d
Adding type registration class -> org.hibernate.type.ClassType@3b0d3a63
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3b0d3a63
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6a567f7b
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6a567f7b
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@367d34c0
Adding type registration binary -> org.hibernate.type.BinaryType@3815146b
Adding type registration byte[] -> org.hibernate.type.BinaryType@3815146b
Adding type registration [B -> org.hibernate.type.BinaryType@3815146b
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@20349058
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@20349058
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@20349058
Adding type registration row_version -> org.hibernate.type.RowVersionType@675b18ff
Adding type registration image -> org.hibernate.type.ImageType@3fb450d7
Adding type registration characters -> org.hibernate.type.CharArrayType@69a40b3c
Adding type registration char[] -> org.hibernate.type.CharArrayType@69a40b3c
Adding type registration [C -> org.hibernate.type.CharArrayType@69a40b3c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@50bc3219
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@50bc3219
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@50bc3219
Adding type registration text -> org.hibernate.type.TextType@7d0cd23c
Adding type registration ntext -> org.hibernate.type.NTextType@62a6674f
Adding type registration blob -> org.hibernate.type.BlobType@6ac45c0c
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6ac45c0c
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3002e397
Adding type registration clob -> org.hibernate.type.ClobType@581c9bb7
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@581c9bb7
Adding type registration nclob -> org.hibernate.type.NClobType@6f50d55c
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6f50d55c
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1332dec4
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3820cfe
Adding type registration serializable -> org.hibernate.type.SerializableType@b022551
Adding type registration object -> org.hibernate.type.ObjectType@2726a511
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2726a511
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5b48f0f4
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@546ed2a0
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5bfc79cb
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@27ec8754
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3bbf1c0d
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@19662208
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@216c22ce
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@62f9c790
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1325f967
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@1325f967
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6a567f7b
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4247093b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7074da1d]
Binding entity from annotated class: model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
MetadataSourceProcessor property firstName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:firstName]
building SimpleValue for firstName
Building property firstName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(firstName)]), firstName, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for firstName
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [firstname] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@4e35a219, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7772ec28, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@690bc15e, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4247093b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2b9370cc]
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
Static SQL for entity: model.User
 Version select: select firstName from user_table where firstName =?
 Snapshot select: select user_.firstName, user_.lastName as lastname2_2_ from user_table user_ where user_.firstName=?
 Insert 0: insert into user_table (lastName, firstName) values (?, ?)
 Update 0: update user_table set lastName=? where firstName=?
 Delete 0: delete from user_table where firstName=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45775a15]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {firstnam1_2_0_}

Static select for entity model.User [NONE]: select user0_.firstName as firstnam1_2_0_, user0_.lastName as lastname2_2_0_ from user_table user0_ where user0_.firstName=?
Static SQL for entity: model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31b6eec8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Label)
    - Returns
       - EntityReturnImpl(entity=model.Label, querySpaceUid=<gen:0>, path=model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@329a27ae]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Task)
    - Returns
       - EntityReturnImpl(entity=model.Task, querySpaceUid=<gen:0>, path=model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
drop table if exists label_table cascade
drop table if exists task_table cascade
drop table if exists user_table cascade
create table label_table (amount float8 not null, primary key (amount))
create table task_table (name int4 not null, primary key (name))
create table user_table (firstName varchar(255) not null, lastName varchar(255), primary key (firstName))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@59eb987a
Registering SessionFactory: b6cea317-2453-45dd-ae9f-fd691e0609c1 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c412556
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6d0290d8
Adding type registration yes_no -> org.hibernate.type.YesNoType@2dd63e3
Adding type registration byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration character -> org.hibernate.type.CharacterType@49580ca8
Adding type registration char -> org.hibernate.type.CharacterType@49580ca8
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@49580ca8
Adding type registration short -> org.hibernate.type.ShortType@764fffa0
Adding type registration short -> org.hibernate.type.ShortType@764fffa0
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@764fffa0
Adding type registration integer -> org.hibernate.type.IntegerType@14b275bd
Adding type registration int -> org.hibernate.type.IntegerType@14b275bd
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@14b275bd
Adding type registration long -> org.hibernate.type.LongType@626b639e
Adding type registration long -> org.hibernate.type.LongType@626b639e
Adding type registration java.lang.Long -> org.hibernate.type.LongType@626b639e
Adding type registration float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@551be9f6
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@551be9f6
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1f129467
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1f129467
Adding type registration string -> org.hibernate.type.StringType@53a50b0a
Adding type registration java.lang.String -> org.hibernate.type.StringType@53a50b0a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@65eb3597
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5a14e60d
Adding type registration url -> org.hibernate.type.UrlType@4966bab1
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4966bab1
Adding type registration Duration -> org.hibernate.type.DurationType@17c0274c
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@17c0274c
Adding type registration Instant -> org.hibernate.type.InstantType@69796bd0
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@69796bd0
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@756b2d90
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@756b2d90
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@bb3ecfe
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@bb3ecfe
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@21edd891
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@21edd891
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@251d7fdd
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@251d7fdd
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@76cdafa3
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@76cdafa3
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@46b2dcc5
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@46b2dcc5
Adding type registration date -> org.hibernate.type.DateType@6986f93e
Adding type registration java.sql.Date -> org.hibernate.type.DateType@6986f93e
Adding type registration time -> org.hibernate.type.TimeType@1511d157
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1511d157
Adding type registration timestamp -> org.hibernate.type.TimestampType@634f58d2
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@634f58d2
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@634f58d2
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5b02a984
Adding type registration calendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7c588adc
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3d104c9b
Adding type registration locale -> org.hibernate.type.LocaleType@7b96de8d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b96de8d
Adding type registration currency -> org.hibernate.type.CurrencyType@6d0e45a5
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d0e45a5
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5a9840f3
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5a9840f3
Adding type registration class -> org.hibernate.type.ClassType@67b61834
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@67b61834
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c8d58ed
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c8d58ed
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6de7778f
Adding type registration binary -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration byte[] -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration [B -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration row_version -> org.hibernate.type.RowVersionType@74f280bd
Adding type registration image -> org.hibernate.type.ImageType@37c7766e
Adding type registration characters -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration char[] -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration [C -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration text -> org.hibernate.type.TextType@37d28938
Adding type registration ntext -> org.hibernate.type.NTextType@53314f76
Adding type registration blob -> org.hibernate.type.BlobType@342ee097
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@342ee097
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b70d1fb
Adding type registration clob -> org.hibernate.type.ClobType@55361f03
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@55361f03
Adding type registration nclob -> org.hibernate.type.NClobType@51888019
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51888019
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@23bd0c81
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26da1ba2
Adding type registration serializable -> org.hibernate.type.SerializableType@5d850a25
Adding type registration object -> org.hibernate.type.ObjectType@5bb8e6fc
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5bb8e6fc
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@66e341e9
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5b48f0f4
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@546ed2a0
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5bfc79cb
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@27ec8754
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3bbf1c0d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@19662208
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@216c22ce
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@8585cdd
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@8585cdd
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5c8d58ed
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c6b300a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4247093b]
Binding entity from annotated class: model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
MetadataSourceProcessor property firstName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:firstName]
building SimpleValue for firstName
Building property firstName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(firstName)]), firstName, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for firstName
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [firstname] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@2ad6aeb8, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4e35a219, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@3b1ed14b, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c6b300a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@78ab63b5]
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
Static SQL for entity: model.User
 Version select: select firstName from user_table where firstName =?
 Snapshot select: select user_.firstName, user_.lastName as lastname2_2_ from user_table user_ where user_.firstName=?
 Insert 0: insert into user_table (lastName, firstName) values (?, ?)
 Update 0: update user_table set lastName=? where firstName=?
 Delete 0: delete from user_table where firstName=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63e81ac6]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {firstnam1_2_0_}

Static select for entity model.User [NONE]: select user0_.firstName as firstnam1_2_0_, user0_.lastName as lastname2_2_0_ from user_table user0_ where user0_.firstName=?
Static SQL for entity: model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ae6119b]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Label)
    - Returns
       - EntityReturnImpl(entity=model.Label, querySpaceUid=<gen:0>, path=model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3abd7b20]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Task)
    - Returns
       - EntityReturnImpl(entity=model.Task, querySpaceUid=<gen:0>, path=model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
drop table if exists label_table cascade
drop table if exists task_table cascade
drop table if exists user_table cascade
create table label_table (amount float8 not null, primary key (amount))
create table task_table (name int4 not null, primary key (name))
create table user_table (firstName varchar(255) not null, lastName varchar(255), primary key (firstName))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@17adbecf
Registering SessionFactory: 8e8d907a-a8cc-42a2-955f-7d63c4558ede (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c412556
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6d0290d8
Adding type registration yes_no -> org.hibernate.type.YesNoType@2dd63e3
Adding type registration byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration character -> org.hibernate.type.CharacterType@49580ca8
Adding type registration char -> org.hibernate.type.CharacterType@49580ca8
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@49580ca8
Adding type registration short -> org.hibernate.type.ShortType@764fffa0
Adding type registration short -> org.hibernate.type.ShortType@764fffa0
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@764fffa0
Adding type registration integer -> org.hibernate.type.IntegerType@14b275bd
Adding type registration int -> org.hibernate.type.IntegerType@14b275bd
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@14b275bd
Adding type registration long -> org.hibernate.type.LongType@626b639e
Adding type registration long -> org.hibernate.type.LongType@626b639e
Adding type registration java.lang.Long -> org.hibernate.type.LongType@626b639e
Adding type registration float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@551be9f6
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@551be9f6
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1f129467
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1f129467
Adding type registration string -> org.hibernate.type.StringType@53a50b0a
Adding type registration java.lang.String -> org.hibernate.type.StringType@53a50b0a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@65eb3597
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5a14e60d
Adding type registration url -> org.hibernate.type.UrlType@4966bab1
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4966bab1
Adding type registration Duration -> org.hibernate.type.DurationType@17c0274c
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@17c0274c
Adding type registration Instant -> org.hibernate.type.InstantType@69796bd0
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@69796bd0
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@756b2d90
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@756b2d90
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@bb3ecfe
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@bb3ecfe
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@21edd891
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@21edd891
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@251d7fdd
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@251d7fdd
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@76cdafa3
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@76cdafa3
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@46b2dcc5
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@46b2dcc5
Adding type registration date -> org.hibernate.type.DateType@6986f93e
Adding type registration java.sql.Date -> org.hibernate.type.DateType@6986f93e
Adding type registration time -> org.hibernate.type.TimeType@1511d157
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1511d157
Adding type registration timestamp -> org.hibernate.type.TimestampType@634f58d2
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@634f58d2
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@634f58d2
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5b02a984
Adding type registration calendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7c588adc
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3d104c9b
Adding type registration locale -> org.hibernate.type.LocaleType@7b96de8d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b96de8d
Adding type registration currency -> org.hibernate.type.CurrencyType@6d0e45a5
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d0e45a5
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5a9840f3
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5a9840f3
Adding type registration class -> org.hibernate.type.ClassType@67b61834
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@67b61834
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c8d58ed
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c8d58ed
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6de7778f
Adding type registration binary -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration byte[] -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration [B -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration row_version -> org.hibernate.type.RowVersionType@74f280bd
Adding type registration image -> org.hibernate.type.ImageType@37c7766e
Adding type registration characters -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration char[] -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration [C -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration text -> org.hibernate.type.TextType@37d28938
Adding type registration ntext -> org.hibernate.type.NTextType@53314f76
Adding type registration blob -> org.hibernate.type.BlobType@342ee097
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@342ee097
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b70d1fb
Adding type registration clob -> org.hibernate.type.ClobType@55361f03
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@55361f03
Adding type registration nclob -> org.hibernate.type.NClobType@51888019
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51888019
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@23bd0c81
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26da1ba2
Adding type registration serializable -> org.hibernate.type.SerializableType@5d850a25
Adding type registration object -> org.hibernate.type.ObjectType@5bb8e6fc
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5bb8e6fc
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@66e341e9
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5b48f0f4
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@546ed2a0
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5bfc79cb
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@27ec8754
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3bbf1c0d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@19662208
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@216c22ce
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@8585cdd
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@8585cdd
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5c8d58ed
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c6b300a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4247093b]
Binding entity from annotated class: model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
MetadataSourceProcessor property firstName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:firstName]
building SimpleValue for firstName
Building property firstName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(firstName)]), firstName, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for firstName
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [firstname] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@2ad6aeb8, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4e35a219, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@690bc15e, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c6b300a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@78ab63b5]
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
Static SQL for entity: model.User
 Version select: select firstName from user_table where firstName =?
 Snapshot select: select user_.firstName, user_.lastName as lastname2_2_ from user_table user_ where user_.firstName=?
 Insert 0: insert into user_table (lastName, firstName) values (?, ?)
 Update 0: update user_table set lastName=? where firstName=?
 Delete 0: delete from user_table where firstName=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63e81ac6]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {firstnam1_2_0_}

Static select for entity model.User [NONE]: select user0_.firstName as firstnam1_2_0_, user0_.lastName as lastname2_2_0_ from user_table user0_ where user0_.firstName=?
Static SQL for entity: model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ae6119b]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Label)
    - Returns
       - EntityReturnImpl(entity=model.Label, querySpaceUid=<gen:0>, path=model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3abd7b20]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Task)
    - Returns
       - EntityReturnImpl(entity=model.Task, querySpaceUid=<gen:0>, path=model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
drop table if exists label_table cascade
drop table if exists task_table cascade
drop table if exists user_table cascade
create table label_table (amount float8 not null, primary key (amount))
create table task_table (name int4 not null, primary key (name))
create table user_table (firstName varchar(255) not null, lastName varchar(255), primary key (firstName))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@17adbecf
Registering SessionFactory: cf6b696d-f0fa-4d2c-93bd-1586b1d9fb50 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c412556
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6d0290d8
Adding type registration yes_no -> org.hibernate.type.YesNoType@2dd63e3
Adding type registration byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration character -> org.hibernate.type.CharacterType@49580ca8
Adding type registration char -> org.hibernate.type.CharacterType@49580ca8
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@49580ca8
Adding type registration short -> org.hibernate.type.ShortType@764fffa0
Adding type registration short -> org.hibernate.type.ShortType@764fffa0
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@764fffa0
Adding type registration integer -> org.hibernate.type.IntegerType@14b275bd
Adding type registration int -> org.hibernate.type.IntegerType@14b275bd
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@14b275bd
Adding type registration long -> org.hibernate.type.LongType@626b639e
Adding type registration long -> org.hibernate.type.LongType@626b639e
Adding type registration java.lang.Long -> org.hibernate.type.LongType@626b639e
Adding type registration float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@551be9f6
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@551be9f6
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1f129467
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1f129467
Adding type registration string -> org.hibernate.type.StringType@53a50b0a
Adding type registration java.lang.String -> org.hibernate.type.StringType@53a50b0a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@65eb3597
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5a14e60d
Adding type registration url -> org.hibernate.type.UrlType@4966bab1
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4966bab1
Adding type registration Duration -> org.hibernate.type.DurationType@17c0274c
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@17c0274c
Adding type registration Instant -> org.hibernate.type.InstantType@69796bd0
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@69796bd0
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@756b2d90
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@756b2d90
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@bb3ecfe
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@bb3ecfe
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@21edd891
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@21edd891
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@251d7fdd
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@251d7fdd
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@76cdafa3
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@76cdafa3
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@46b2dcc5
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@46b2dcc5
Adding type registration date -> org.hibernate.type.DateType@6986f93e
Adding type registration java.sql.Date -> org.hibernate.type.DateType@6986f93e
Adding type registration time -> org.hibernate.type.TimeType@1511d157
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1511d157
Adding type registration timestamp -> org.hibernate.type.TimestampType@634f58d2
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@634f58d2
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@634f58d2
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5b02a984
Adding type registration calendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7c588adc
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3d104c9b
Adding type registration locale -> org.hibernate.type.LocaleType@7b96de8d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b96de8d
Adding type registration currency -> org.hibernate.type.CurrencyType@6d0e45a5
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d0e45a5
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5a9840f3
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5a9840f3
Adding type registration class -> org.hibernate.type.ClassType@67b61834
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@67b61834
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c8d58ed
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c8d58ed
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6de7778f
Adding type registration binary -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration byte[] -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration [B -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration row_version -> org.hibernate.type.RowVersionType@74f280bd
Adding type registration image -> org.hibernate.type.ImageType@37c7766e
Adding type registration characters -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration char[] -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration [C -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration text -> org.hibernate.type.TextType@37d28938
Adding type registration ntext -> org.hibernate.type.NTextType@53314f76
Adding type registration blob -> org.hibernate.type.BlobType@342ee097
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@342ee097
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b70d1fb
Adding type registration clob -> org.hibernate.type.ClobType@55361f03
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@55361f03
Adding type registration nclob -> org.hibernate.type.NClobType@51888019
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51888019
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@23bd0c81
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26da1ba2
Adding type registration serializable -> org.hibernate.type.SerializableType@5d850a25
Adding type registration object -> org.hibernate.type.ObjectType@5bb8e6fc
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5bb8e6fc
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@66e341e9
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5b48f0f4
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@546ed2a0
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5bfc79cb
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@27ec8754
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3bbf1c0d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@19662208
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@216c22ce
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@8585cdd
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@8585cdd
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5c8d58ed
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c6b300a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4247093b]
Binding entity from annotated class: model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
MetadataSourceProcessor property firstName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:firstName]
building SimpleValue for firstName
Building property firstName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(firstName)]), firstName, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for firstName
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [firstname] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@68feca3a, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@ad585fb, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@690bc15e, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c6b300a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7602c65d]
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
Static SQL for entity: model.User
 Version select: select firstName from user_table where firstName =?
 Snapshot select: select user_.firstName, user_.amount as amount2_2_ from user_table user_ where user_.firstName=?
 Insert 0: insert into user_table (amount, firstName) values (?, ?)
 Update 0: update user_table set amount=? where firstName=?
 Delete 0: delete from user_table where firstName=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4468ced2]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {firstnam1_2_0_}

Static select for entity model.User [NONE]: select user0_.firstName as firstnam1_2_0_, user0_.amount as amount2_2_0_ from user_table user0_ where user0_.firstName=?
Static SQL for entity: model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dedc8b8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Label)
    - Returns
       - EntityReturnImpl(entity=model.Label, querySpaceUid=<gen:0>, path=model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49b73e6c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Task)
    - Returns
       - EntityReturnImpl(entity=model.Task, querySpaceUid=<gen:0>, path=model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
drop table if exists label_table cascade
drop table if exists task_table cascade
drop table if exists user_table cascade
create table label_table (amount float8 not null, primary key (amount))
create table task_table (name int4 not null, primary key (name))
create table user_table (firstName varchar(255) not null, amount varchar(255), primary key (firstName))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4b98c80c
Registering SessionFactory: 395ce338-a093-4ae3-8ad5-5c6d4bfab10b (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c412556
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6d0290d8
Adding type registration yes_no -> org.hibernate.type.YesNoType@2dd63e3
Adding type registration byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration character -> org.hibernate.type.CharacterType@49580ca8
Adding type registration char -> org.hibernate.type.CharacterType@49580ca8
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@49580ca8
Adding type registration short -> org.hibernate.type.ShortType@764fffa0
Adding type registration short -> org.hibernate.type.ShortType@764fffa0
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@764fffa0
Adding type registration integer -> org.hibernate.type.IntegerType@14b275bd
Adding type registration int -> org.hibernate.type.IntegerType@14b275bd
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@14b275bd
Adding type registration long -> org.hibernate.type.LongType@626b639e
Adding type registration long -> org.hibernate.type.LongType@626b639e
Adding type registration java.lang.Long -> org.hibernate.type.LongType@626b639e
Adding type registration float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@551be9f6
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@551be9f6
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1f129467
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1f129467
Adding type registration string -> org.hibernate.type.StringType@53a50b0a
Adding type registration java.lang.String -> org.hibernate.type.StringType@53a50b0a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@65eb3597
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5a14e60d
Adding type registration url -> org.hibernate.type.UrlType@4966bab1
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4966bab1
Adding type registration Duration -> org.hibernate.type.DurationType@17c0274c
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@17c0274c
Adding type registration Instant -> org.hibernate.type.InstantType@69796bd0
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@69796bd0
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@756b2d90
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@756b2d90
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@bb3ecfe
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@bb3ecfe
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@21edd891
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@21edd891
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@251d7fdd
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@251d7fdd
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@76cdafa3
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@76cdafa3
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@46b2dcc5
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@46b2dcc5
Adding type registration date -> org.hibernate.type.DateType@6986f93e
Adding type registration java.sql.Date -> org.hibernate.type.DateType@6986f93e
Adding type registration time -> org.hibernate.type.TimeType@1511d157
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1511d157
Adding type registration timestamp -> org.hibernate.type.TimestampType@634f58d2
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@634f58d2
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@634f58d2
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5b02a984
Adding type registration calendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7c588adc
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3d104c9b
Adding type registration locale -> org.hibernate.type.LocaleType@7b96de8d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b96de8d
Adding type registration currency -> org.hibernate.type.CurrencyType@6d0e45a5
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d0e45a5
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5a9840f3
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5a9840f3
Adding type registration class -> org.hibernate.type.ClassType@67b61834
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@67b61834
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c8d58ed
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c8d58ed
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6de7778f
Adding type registration binary -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration byte[] -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration [B -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration row_version -> org.hibernate.type.RowVersionType@74f280bd
Adding type registration image -> org.hibernate.type.ImageType@37c7766e
Adding type registration characters -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration char[] -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration [C -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration text -> org.hibernate.type.TextType@37d28938
Adding type registration ntext -> org.hibernate.type.NTextType@53314f76
Adding type registration blob -> org.hibernate.type.BlobType@342ee097
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@342ee097
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b70d1fb
Adding type registration clob -> org.hibernate.type.ClobType@55361f03
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@55361f03
Adding type registration nclob -> org.hibernate.type.NClobType@51888019
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51888019
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@23bd0c81
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26da1ba2
Adding type registration serializable -> org.hibernate.type.SerializableType@5d850a25
Adding type registration object -> org.hibernate.type.ObjectType@5bb8e6fc
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5bb8e6fc
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@66e341e9
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5b48f0f4
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@546ed2a0
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5bfc79cb
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@27ec8754
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3bbf1c0d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@19662208
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@216c22ce
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@8585cdd
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@8585cdd
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5c8d58ed
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c6b300a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4247093b]
Binding entity from annotated class: model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
MetadataSourceProcessor property firstName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:firstName]
building SimpleValue for firstName
Building property firstName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(firstName)]), firstName, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for firstName
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [firstname] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@68feca3a, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@ad585fb, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@690bc15e, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c6b300a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7602c65d]
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
Static SQL for entity: model.User
 Version select: select firstName from user_table where firstName =?
 Snapshot select: select user_.firstName, user_.amount as amount2_2_ from user_table user_ where user_.firstName=?
 Insert 0: insert into user_table (amount, firstName) values (?, ?)
 Update 0: update user_table set amount=? where firstName=?
 Delete 0: delete from user_table where firstName=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4468ced2]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {firstnam1_2_0_}

Static select for entity model.User [NONE]: select user0_.firstName as firstnam1_2_0_, user0_.amount as amount2_2_0_ from user_table user0_ where user0_.firstName=?
Static SQL for entity: model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dedc8b8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Label)
    - Returns
       - EntityReturnImpl(entity=model.Label, querySpaceUid=<gen:0>, path=model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49b73e6c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Task)
    - Returns
       - EntityReturnImpl(entity=model.Task, querySpaceUid=<gen:0>, path=model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
drop table if exists label_table cascade
drop table if exists task_table cascade
drop table if exists user_table cascade
create table label_table (amount float8 not null, primary key (amount))
create table task_table (name int4 not null, primary key (name))
create table user_table (firstName varchar(255) not null, amount varchar(255), primary key (firstName))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4b98c80c
Registering SessionFactory: 92908bf4-f69b-407e-b4e3-4e385c8f4e4e (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2e590b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@2bb62414
Adding type registration yes_no -> org.hibernate.type.YesNoType@30bbcf91
Adding type registration byte -> org.hibernate.type.ByteType@eed890d
Adding type registration byte -> org.hibernate.type.ByteType@eed890d
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@eed890d
Adding type registration character -> org.hibernate.type.CharacterType@553d2579
Adding type registration char -> org.hibernate.type.CharacterType@553d2579
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@553d2579
Adding type registration short -> org.hibernate.type.ShortType@2f054f70
Adding type registration short -> org.hibernate.type.ShortType@2f054f70
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2f054f70
Adding type registration integer -> org.hibernate.type.IntegerType@3b97907c
Adding type registration int -> org.hibernate.type.IntegerType@3b97907c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3b97907c
Adding type registration long -> org.hibernate.type.LongType@738a5848
Adding type registration long -> org.hibernate.type.LongType@738a5848
Adding type registration java.lang.Long -> org.hibernate.type.LongType@738a5848
Adding type registration float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration double -> org.hibernate.type.DoubleType@437bd805
Adding type registration double -> org.hibernate.type.DoubleType@437bd805
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@437bd805
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@33a8c9c9
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@33a8c9c9
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4f363abd
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4f363abd
Adding type registration string -> org.hibernate.type.StringType@7c5df615
Adding type registration java.lang.String -> org.hibernate.type.StringType@7c5df615
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@241fbec
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@622d7e4
Adding type registration url -> org.hibernate.type.UrlType@2199e845
Adding type registration java.net.URL -> org.hibernate.type.UrlType@2199e845
Adding type registration Duration -> org.hibernate.type.DurationType@5e50df2e
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5e50df2e
Adding type registration Instant -> org.hibernate.type.InstantType@27960b1e
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@27960b1e
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@dbddbe3
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@dbddbe3
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4bf03fee
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4bf03fee
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7675c171
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7675c171
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28ee0a3c
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28ee0a3c
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7cf63b9a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7cf63b9a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@634ca3e7
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@634ca3e7
Adding type registration date -> org.hibernate.type.DateType@13866329
Adding type registration java.sql.Date -> org.hibernate.type.DateType@13866329
Adding type registration time -> org.hibernate.type.TimeType@552fee7a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@552fee7a
Adding type registration timestamp -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@e91af20
Adding type registration calendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@d5e575c
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1129829c
Adding type registration locale -> org.hibernate.type.LocaleType@3dbd7107
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3dbd7107
Adding type registration currency -> org.hibernate.type.CurrencyType@89caf47
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@89caf47
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2df65a56
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2df65a56
Adding type registration class -> org.hibernate.type.ClassType@224c7de4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@224c7de4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2afdf6b7
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2afdf6b7
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@35bd8bc9
Adding type registration binary -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration byte[] -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration [B -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration row_version -> org.hibernate.type.RowVersionType@2dd63e3
Adding type registration image -> org.hibernate.type.ImageType@1e00bfe2
Adding type registration characters -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration char[] -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration [C -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration text -> org.hibernate.type.TextType@4b03cbad
Adding type registration ntext -> org.hibernate.type.NTextType@5d71b500
Adding type registration blob -> org.hibernate.type.BlobType@6b162ecc
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b162ecc
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@56a4abd0
Adding type registration clob -> org.hibernate.type.ClobType@26457986
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26457986
Adding type registration nclob -> org.hibernate.type.NClobType@2bebd114
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2bebd114
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5a14e60d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@79ecc507
Adding type registration serializable -> org.hibernate.type.SerializableType@5a05dd30
Adding type registration object -> org.hibernate.type.ObjectType@5ec88f9e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5ec88f9e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@689faf79
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@582e9152
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7a31ca20
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@349c4d1c
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@21edd891
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@de579ff
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7971c2a9
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2fd39436
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@595184d8
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@595184d8
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2afdf6b7
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@720ffab4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2e62e227]
Binding entity from annotated class: model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
MetadataSourceProcessor property firstName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:firstName]
building SimpleValue for firstName
Building property firstName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(firstName)]), firstName, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for firstName
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [firstname] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@e2d9923, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@554e9509, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@58516c91, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@720ffab4] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@60251ddb]
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
Static SQL for entity: model.User
 Version select: select firstName from user_table where firstName =?
 Snapshot select: select user_.firstName, user_.amount as amount2_2_ from user_table user_ where user_.firstName=?
 Insert 0: insert into user_table (amount, firstName) values (?, ?)
 Update 0: update user_table set amount=? where firstName=?
 Delete 0: delete from user_table where firstName=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63df2eb8]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {firstnam1_2_0_}

Static select for entity model.User [NONE]: select user0_.firstName as firstnam1_2_0_, user0_.amount as amount2_2_0_ from user_table user0_ where user0_.firstName=?
Static SQL for entity: model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b30b25f]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Label)
    - Returns
       - EntityReturnImpl(entity=model.Label, querySpaceUid=<gen:0>, path=model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@195d4780]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Task)
    - Returns
       - EntityReturnImpl(entity=model.Task, querySpaceUid=<gen:0>, path=model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
drop table if exists label_table cascade
drop table if exists task_table cascade
drop table if exists user_table cascade
create table label_table (amount float8 not null, primary key (amount))
create table task_table (name int4 not null, primary key (name))
create table user_table (firstName varchar(255) not null, amount varchar(255), primary key (firstName))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@179f30b7
Registering SessionFactory: e59b55dc-4c3b-463f-af23-174224d254c2 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c412556
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6d0290d8
Adding type registration yes_no -> org.hibernate.type.YesNoType@2dd63e3
Adding type registration byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration character -> org.hibernate.type.CharacterType@49580ca8
Adding type registration char -> org.hibernate.type.CharacterType@49580ca8
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@49580ca8
Adding type registration short -> org.hibernate.type.ShortType@764fffa0
Adding type registration short -> org.hibernate.type.ShortType@764fffa0
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@764fffa0
Adding type registration integer -> org.hibernate.type.IntegerType@14b275bd
Adding type registration int -> org.hibernate.type.IntegerType@14b275bd
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@14b275bd
Adding type registration long -> org.hibernate.type.LongType@626b639e
Adding type registration long -> org.hibernate.type.LongType@626b639e
Adding type registration java.lang.Long -> org.hibernate.type.LongType@626b639e
Adding type registration float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@551be9f6
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@551be9f6
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1f129467
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1f129467
Adding type registration string -> org.hibernate.type.StringType@53a50b0a
Adding type registration java.lang.String -> org.hibernate.type.StringType@53a50b0a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@65eb3597
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5a14e60d
Adding type registration url -> org.hibernate.type.UrlType@4966bab1
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4966bab1
Adding type registration Duration -> org.hibernate.type.DurationType@17c0274c
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@17c0274c
Adding type registration Instant -> org.hibernate.type.InstantType@69796bd0
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@69796bd0
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@756b2d90
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@756b2d90
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@bb3ecfe
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@bb3ecfe
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@21edd891
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@21edd891
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@251d7fdd
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@251d7fdd
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@76cdafa3
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@76cdafa3
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@46b2dcc5
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@46b2dcc5
Adding type registration date -> org.hibernate.type.DateType@6986f93e
Adding type registration java.sql.Date -> org.hibernate.type.DateType@6986f93e
Adding type registration time -> org.hibernate.type.TimeType@1511d157
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1511d157
Adding type registration timestamp -> org.hibernate.type.TimestampType@634f58d2
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@634f58d2
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@634f58d2
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5b02a984
Adding type registration calendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7c588adc
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3d104c9b
Adding type registration locale -> org.hibernate.type.LocaleType@7b96de8d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b96de8d
Adding type registration currency -> org.hibernate.type.CurrencyType@6d0e45a5
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d0e45a5
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5a9840f3
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5a9840f3
Adding type registration class -> org.hibernate.type.ClassType@67b61834
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@67b61834
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c8d58ed
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c8d58ed
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6de7778f
Adding type registration binary -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration byte[] -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration [B -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration row_version -> org.hibernate.type.RowVersionType@74f280bd
Adding type registration image -> org.hibernate.type.ImageType@37c7766e
Adding type registration characters -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration char[] -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration [C -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration text -> org.hibernate.type.TextType@37d28938
Adding type registration ntext -> org.hibernate.type.NTextType@53314f76
Adding type registration blob -> org.hibernate.type.BlobType@342ee097
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@342ee097
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b70d1fb
Adding type registration clob -> org.hibernate.type.ClobType@55361f03
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@55361f03
Adding type registration nclob -> org.hibernate.type.NClobType@51888019
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51888019
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@23bd0c81
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26da1ba2
Adding type registration serializable -> org.hibernate.type.SerializableType@5d850a25
Adding type registration object -> org.hibernate.type.ObjectType@5bb8e6fc
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5bb8e6fc
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@66e341e9
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5b48f0f4
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@546ed2a0
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5bfc79cb
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@27ec8754
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3bbf1c0d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@19662208
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@216c22ce
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@8585cdd
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@8585cdd
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5c8d58ed
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c6b300a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4247093b]
Binding entity from annotated class: model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
MetadataSourceProcessor property firstName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:firstName]
building SimpleValue for firstName
Building property firstName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(firstName)]), firstName, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for firstName
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [firstname] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@68feca3a, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@ad585fb, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@690bc15e, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c6b300a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7602c65d]
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
Static SQL for entity: model.User
 Version select: select firstName from user_table where firstName =?
 Snapshot select: select user_.firstName, user_.amount as amount2_2_ from user_table user_ where user_.firstName=?
 Insert 0: insert into user_table (amount, firstName) values (?, ?)
 Update 0: update user_table set amount=? where firstName=?
 Delete 0: delete from user_table where firstName=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4468ced2]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {firstnam1_2_0_}

Static select for entity model.User [NONE]: select user0_.firstName as firstnam1_2_0_, user0_.amount as amount2_2_0_ from user_table user0_ where user0_.firstName=?
Static SQL for entity: model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dedc8b8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Label)
    - Returns
       - EntityReturnImpl(entity=model.Label, querySpaceUid=<gen:0>, path=model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49b73e6c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Task)
    - Returns
       - EntityReturnImpl(entity=model.Task, querySpaceUid=<gen:0>, path=model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
drop table if exists label_table cascade
drop table if exists task_table cascade
drop table if exists user_table cascade
create table label_table (amount float8 not null, primary key (amount))
create table task_table (name int4 not null, primary key (name))
create table user_table (firstName varchar(255) not null, amount varchar(255), primary key (firstName))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4b98c80c
Registering SessionFactory: 089b8d18-c5d0-4673-8b07-d83860df8f6d (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c412556
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6d0290d8
Adding type registration yes_no -> org.hibernate.type.YesNoType@2dd63e3
Adding type registration byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration character -> org.hibernate.type.CharacterType@49580ca8
Adding type registration char -> org.hibernate.type.CharacterType@49580ca8
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@49580ca8
Adding type registration short -> org.hibernate.type.ShortType@764fffa0
Adding type registration short -> org.hibernate.type.ShortType@764fffa0
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@764fffa0
Adding type registration integer -> org.hibernate.type.IntegerType@14b275bd
Adding type registration int -> org.hibernate.type.IntegerType@14b275bd
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@14b275bd
Adding type registration long -> org.hibernate.type.LongType@626b639e
Adding type registration long -> org.hibernate.type.LongType@626b639e
Adding type registration java.lang.Long -> org.hibernate.type.LongType@626b639e
Adding type registration float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@551be9f6
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@551be9f6
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1f129467
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1f129467
Adding type registration string -> org.hibernate.type.StringType@53a50b0a
Adding type registration java.lang.String -> org.hibernate.type.StringType@53a50b0a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@65eb3597
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5a14e60d
Adding type registration url -> org.hibernate.type.UrlType@4966bab1
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4966bab1
Adding type registration Duration -> org.hibernate.type.DurationType@17c0274c
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@17c0274c
Adding type registration Instant -> org.hibernate.type.InstantType@69796bd0
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@69796bd0
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@756b2d90
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@756b2d90
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@bb3ecfe
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@bb3ecfe
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@21edd891
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@21edd891
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@251d7fdd
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@251d7fdd
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@76cdafa3
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@76cdafa3
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@46b2dcc5
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@46b2dcc5
Adding type registration date -> org.hibernate.type.DateType@6986f93e
Adding type registration java.sql.Date -> org.hibernate.type.DateType@6986f93e
Adding type registration time -> org.hibernate.type.TimeType@1511d157
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1511d157
Adding type registration timestamp -> org.hibernate.type.TimestampType@634f58d2
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@634f58d2
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@634f58d2
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5b02a984
Adding type registration calendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7c588adc
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3d104c9b
Adding type registration locale -> org.hibernate.type.LocaleType@7b96de8d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b96de8d
Adding type registration currency -> org.hibernate.type.CurrencyType@6d0e45a5
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d0e45a5
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5a9840f3
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5a9840f3
Adding type registration class -> org.hibernate.type.ClassType@67b61834
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@67b61834
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c8d58ed
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c8d58ed
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6de7778f
Adding type registration binary -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration byte[] -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration [B -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration row_version -> org.hibernate.type.RowVersionType@74f280bd
Adding type registration image -> org.hibernate.type.ImageType@37c7766e
Adding type registration characters -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration char[] -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration [C -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration text -> org.hibernate.type.TextType@37d28938
Adding type registration ntext -> org.hibernate.type.NTextType@53314f76
Adding type registration blob -> org.hibernate.type.BlobType@342ee097
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@342ee097
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b70d1fb
Adding type registration clob -> org.hibernate.type.ClobType@55361f03
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@55361f03
Adding type registration nclob -> org.hibernate.type.NClobType@51888019
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51888019
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@23bd0c81
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26da1ba2
Adding type registration serializable -> org.hibernate.type.SerializableType@5d850a25
Adding type registration object -> org.hibernate.type.ObjectType@5bb8e6fc
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5bb8e6fc
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@66e341e9
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5b48f0f4
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@546ed2a0
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5bfc79cb
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@27ec8754
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3bbf1c0d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@19662208
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@216c22ce
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@8585cdd
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@8585cdd
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5c8d58ed
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c6b300a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4247093b]
Binding entity from annotated class: model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
MetadataSourceProcessor property firstName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:firstName]
building SimpleValue for firstName
Building property firstName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(firstName)]), firstName, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for firstName
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [firstname] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@68feca3a, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@ad585fb, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@3b1ed14b, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c6b300a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7602c65d]
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
Static SQL for entity: model.User
 Version select: select firstName from user_table where firstName =?
 Snapshot select: select user_.firstName, user_.amount as amount2_2_ from user_table user_ where user_.firstName=?
 Insert 0: insert into user_table (amount, firstName) values (?, ?)
 Update 0: update user_table set amount=? where firstName=?
 Delete 0: delete from user_table where firstName=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4468ced2]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {firstnam1_2_0_}

Static select for entity model.User [NONE]: select user0_.firstName as firstnam1_2_0_, user0_.amount as amount2_2_0_ from user_table user0_ where user0_.firstName=?
Static SQL for entity: model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dedc8b8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Label)
    - Returns
       - EntityReturnImpl(entity=model.Label, querySpaceUid=<gen:0>, path=model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49b73e6c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Task)
    - Returns
       - EntityReturnImpl(entity=model.Task, querySpaceUid=<gen:0>, path=model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
drop table if exists label_table cascade
drop table if exists task_table cascade
drop table if exists user_table cascade
create table label_table (amount float8 not null, primary key (amount))
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c412556
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6d0290d8
Adding type registration yes_no -> org.hibernate.type.YesNoType@2dd63e3
Adding type registration byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration character -> org.hibernate.type.CharacterType@49580ca8
Adding type registration char -> org.hibernate.type.CharacterType@49580ca8
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@49580ca8
Adding type registration short -> org.hibernate.type.ShortType@764fffa0
Adding type registration short -> org.hibernate.type.ShortType@764fffa0
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@764fffa0
Adding type registration integer -> org.hibernate.type.IntegerType@14b275bd
Adding type registration int -> org.hibernate.type.IntegerType@14b275bd
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@14b275bd
Adding type registration long -> org.hibernate.type.LongType@626b639e
Adding type registration long -> org.hibernate.type.LongType@626b639e
Adding type registration java.lang.Long -> org.hibernate.type.LongType@626b639e
Adding type registration float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@551be9f6
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@551be9f6
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1f129467
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1f129467
Adding type registration string -> org.hibernate.type.StringType@53a50b0a
Adding type registration java.lang.String -> org.hibernate.type.StringType@53a50b0a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@65eb3597
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5a14e60d
Adding type registration url -> org.hibernate.type.UrlType@4966bab1
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4966bab1
Adding type registration Duration -> org.hibernate.type.DurationType@17c0274c
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@17c0274c
Adding type registration Instant -> org.hibernate.type.InstantType@69796bd0
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@69796bd0
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@756b2d90
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@756b2d90
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@bb3ecfe
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@bb3ecfe
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@21edd891
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@21edd891
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@251d7fdd
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@251d7fdd
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@76cdafa3
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@76cdafa3
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@46b2dcc5
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@46b2dcc5
Adding type registration date -> org.hibernate.type.DateType@6986f93e
Adding type registration java.sql.Date -> org.hibernate.type.DateType@6986f93e
Adding type registration time -> org.hibernate.type.TimeType@1511d157
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1511d157
Adding type registration timestamp -> org.hibernate.type.TimestampType@634f58d2
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@634f58d2
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@634f58d2
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5b02a984
Adding type registration calendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7c588adc
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3d104c9b
Adding type registration locale -> org.hibernate.type.LocaleType@7b96de8d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b96de8d
Adding type registration currency -> org.hibernate.type.CurrencyType@6d0e45a5
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d0e45a5
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5a9840f3
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5a9840f3
Adding type registration class -> org.hibernate.type.ClassType@67b61834
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@67b61834
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c8d58ed
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c8d58ed
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6de7778f
Adding type registration binary -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration byte[] -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration [B -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration row_version -> org.hibernate.type.RowVersionType@74f280bd
Adding type registration image -> org.hibernate.type.ImageType@37c7766e
Adding type registration characters -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration char[] -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration [C -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration text -> org.hibernate.type.TextType@37d28938
Adding type registration ntext -> org.hibernate.type.NTextType@53314f76
Adding type registration blob -> org.hibernate.type.BlobType@342ee097
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@342ee097
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b70d1fb
Adding type registration clob -> org.hibernate.type.ClobType@55361f03
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@55361f03
Adding type registration nclob -> org.hibernate.type.NClobType@51888019
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51888019
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@23bd0c81
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26da1ba2
Adding type registration serializable -> org.hibernate.type.SerializableType@5d850a25
Adding type registration object -> org.hibernate.type.ObjectType@5bb8e6fc
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5bb8e6fc
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@66e341e9
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5b48f0f4
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@546ed2a0
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5bfc79cb
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@27ec8754
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3bbf1c0d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@19662208
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@216c22ce
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@666b91db
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@666b91db
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5c8d58ed
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7de2bdc7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@683ed81b]
Binding entity from annotated class: model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
MetadataSourceProcessor property firstName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:firstName]
building SimpleValue for firstName
Building property firstName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(firstName)]), firstName, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for firstName
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [firstname] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@5f2ad3d5, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@703eead0, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@3b1ed14b, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7de2bdc7] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2dd4a7a9]
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
Static SQL for entity: model.User
 Version select: select firstName from user_table where firstName =?
 Snapshot select: select user_.firstName, user_.amount as amount2_2_ from user_table user_ where user_.firstName=?
 Insert 0: insert into user_table (amount, firstName) values (?, ?)
 Update 0: update user_table set amount=? where firstName=?
 Delete 0: delete from user_table where firstName=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52c2d1e8]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {firstnam1_2_0_}

Static select for entity model.User [NONE]: select user0_.firstName as firstnam1_2_0_, user0_.amount as amount2_2_0_ from user_table user0_ where user0_.firstName=?
Static SQL for entity: model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@106c73ed]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Label)
    - Returns
       - EntityReturnImpl(entity=model.Label, querySpaceUid=<gen:0>, path=model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@122a6078]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Task)
    - Returns
       - EntityReturnImpl(entity=model.Task, querySpaceUid=<gen:0>, path=model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
drop table if exists label_table cascade
SQL Warning
org.postgresql.util.PSQLWarning: table "label_table" does not exist, skipping
	at org.postgresql.core.v3.QueryExecutorImpl.receiveNoticeResponse(QueryExecutorImpl.java:2529)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2275)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:311)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:447)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:368)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:309)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:295)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:272)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:267)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:241)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:318)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:468)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:616)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:925)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85)
	at Main.<clinit>(Main.java:17)
SQL Warning Code: 0, SQLState: 00000
table "label_table" does not exist, skipping
drop table if exists task_table cascade
SQL Warning
org.postgresql.util.PSQLWarning: table "task_table" does not exist, skipping
	at org.postgresql.core.v3.QueryExecutorImpl.receiveNoticeResponse(QueryExecutorImpl.java:2529)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2275)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:311)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:447)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:368)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:309)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:295)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:272)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:267)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:241)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:318)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:468)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:616)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:925)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85)
	at Main.<clinit>(Main.java:17)
SQL Warning Code: 0, SQLState: 00000
table "task_table" does not exist, skipping
drop table if exists user_table cascade
SQL Warning
org.postgresql.util.PSQLWarning: table "user_table" does not exist, skipping
	at org.postgresql.core.v3.QueryExecutorImpl.receiveNoticeResponse(QueryExecutorImpl.java:2529)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2275)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:311)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:447)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:368)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:309)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:295)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:272)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:267)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:241)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:318)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:468)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:616)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:925)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85)
	at Main.<clinit>(Main.java:17)
SQL Warning Code: 0, SQLState: 00000
table "user_table" does not exist, skipping
create table label_table (amount float8 not null, primary key (amount))
create table task_table (name int4 not null, primary key (name))
create table user_table (firstName varchar(255) not null, amount varchar(255), primary key (firstName))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@225b460a
Registering SessionFactory: 136c896c-67d2-4105-84cb-0c95036b7744 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c412556
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6d0290d8
Adding type registration yes_no -> org.hibernate.type.YesNoType@2dd63e3
Adding type registration byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration character -> org.hibernate.type.CharacterType@49580ca8
Adding type registration char -> org.hibernate.type.CharacterType@49580ca8
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@49580ca8
Adding type registration short -> org.hibernate.type.ShortType@764fffa0
Adding type registration short -> org.hibernate.type.ShortType@764fffa0
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@764fffa0
Adding type registration integer -> org.hibernate.type.IntegerType@14b275bd
Adding type registration int -> org.hibernate.type.IntegerType@14b275bd
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@14b275bd
Adding type registration long -> org.hibernate.type.LongType@626b639e
Adding type registration long -> org.hibernate.type.LongType@626b639e
Adding type registration java.lang.Long -> org.hibernate.type.LongType@626b639e
Adding type registration float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@551be9f6
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@551be9f6
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1f129467
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1f129467
Adding type registration string -> org.hibernate.type.StringType@53a50b0a
Adding type registration java.lang.String -> org.hibernate.type.StringType@53a50b0a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@65eb3597
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5a14e60d
Adding type registration url -> org.hibernate.type.UrlType@4966bab1
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4966bab1
Adding type registration Duration -> org.hibernate.type.DurationType@17c0274c
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@17c0274c
Adding type registration Instant -> org.hibernate.type.InstantType@69796bd0
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@69796bd0
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@756b2d90
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@756b2d90
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@bb3ecfe
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@bb3ecfe
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@21edd891
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@21edd891
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@251d7fdd
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@251d7fdd
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@76cdafa3
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@76cdafa3
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@46b2dcc5
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@46b2dcc5
Adding type registration date -> org.hibernate.type.DateType@6986f93e
Adding type registration java.sql.Date -> org.hibernate.type.DateType@6986f93e
Adding type registration time -> org.hibernate.type.TimeType@1511d157
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1511d157
Adding type registration timestamp -> org.hibernate.type.TimestampType@634f58d2
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@634f58d2
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@634f58d2
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5b02a984
Adding type registration calendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7c588adc
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3d104c9b
Adding type registration locale -> org.hibernate.type.LocaleType@7b96de8d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b96de8d
Adding type registration currency -> org.hibernate.type.CurrencyType@6d0e45a5
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d0e45a5
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5a9840f3
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5a9840f3
Adding type registration class -> org.hibernate.type.ClassType@67b61834
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@67b61834
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c8d58ed
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c8d58ed
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6de7778f
Adding type registration binary -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration byte[] -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration [B -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration row_version -> org.hibernate.type.RowVersionType@74f280bd
Adding type registration image -> org.hibernate.type.ImageType@37c7766e
Adding type registration characters -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration char[] -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration [C -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration text -> org.hibernate.type.TextType@37d28938
Adding type registration ntext -> org.hibernate.type.NTextType@53314f76
Adding type registration blob -> org.hibernate.type.BlobType@342ee097
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@342ee097
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b70d1fb
Adding type registration clob -> org.hibernate.type.ClobType@55361f03
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@55361f03
Adding type registration nclob -> org.hibernate.type.NClobType@51888019
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51888019
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@23bd0c81
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26da1ba2
Adding type registration serializable -> org.hibernate.type.SerializableType@5d850a25
Adding type registration object -> org.hibernate.type.ObjectType@5bb8e6fc
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5bb8e6fc
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@66e341e9
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5b48f0f4
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@546ed2a0
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5bfc79cb
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@27ec8754
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3bbf1c0d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@19662208
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@216c22ce
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@8585cdd
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@8585cdd
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5c8d58ed
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c6b300a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4247093b]
Binding entity from annotated class: model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
MetadataSourceProcessor property firstName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:firstName]
building SimpleValue for firstName
Building property firstName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(firstName)]), firstName, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for firstName
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [firstname] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@68feca3a, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@ad585fb, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@690bc15e, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c6b300a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7602c65d]
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
Static SQL for entity: model.User
 Version select: select firstName from user_table where firstName =?
 Snapshot select: select user_.firstName, user_.amount as amount2_2_ from user_table user_ where user_.firstName=?
 Insert 0: insert into user_table (amount, firstName) values (?, ?)
 Update 0: update user_table set amount=? where firstName=?
 Delete 0: delete from user_table where firstName=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4468ced2]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {firstnam1_2_0_}

Static select for entity model.User [NONE]: select user0_.firstName as firstnam1_2_0_, user0_.amount as amount2_2_0_ from user_table user0_ where user0_.firstName=?
Static SQL for entity: model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dedc8b8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Label)
    - Returns
       - EntityReturnImpl(entity=model.Label, querySpaceUid=<gen:0>, path=model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49b73e6c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Task)
    - Returns
       - EntityReturnImpl(entity=model.Task, querySpaceUid=<gen:0>, path=model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
drop table if exists label_table cascade
drop table if exists task_table cascade
drop table if exists user_table cascade
create table label_table (amount float8 not null, primary key (amount))
create table task_table (name int4 not null, primary key (name))
create table user_table (firstName varchar(255) not null, amount varchar(255), primary key (firstName))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4b98c80c
Registering SessionFactory: 0189b092-517b-4fe2-a127-80440ec712d2 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c412556
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6d0290d8
Adding type registration yes_no -> org.hibernate.type.YesNoType@2dd63e3
Adding type registration byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration character -> org.hibernate.type.CharacterType@49580ca8
Adding type registration char -> org.hibernate.type.CharacterType@49580ca8
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@49580ca8
Adding type registration short -> org.hibernate.type.ShortType@764fffa0
Adding type registration short -> org.hibernate.type.ShortType@764fffa0
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@764fffa0
Adding type registration integer -> org.hibernate.type.IntegerType@14b275bd
Adding type registration int -> org.hibernate.type.IntegerType@14b275bd
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@14b275bd
Adding type registration long -> org.hibernate.type.LongType@626b639e
Adding type registration long -> org.hibernate.type.LongType@626b639e
Adding type registration java.lang.Long -> org.hibernate.type.LongType@626b639e
Adding type registration float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@551be9f6
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@551be9f6
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1f129467
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1f129467
Adding type registration string -> org.hibernate.type.StringType@53a50b0a
Adding type registration java.lang.String -> org.hibernate.type.StringType@53a50b0a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@65eb3597
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5a14e60d
Adding type registration url -> org.hibernate.type.UrlType@4966bab1
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4966bab1
Adding type registration Duration -> org.hibernate.type.DurationType@17c0274c
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@17c0274c
Adding type registration Instant -> org.hibernate.type.InstantType@69796bd0
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@69796bd0
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@756b2d90
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@756b2d90
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@bb3ecfe
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@bb3ecfe
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@21edd891
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@21edd891
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@251d7fdd
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@251d7fdd
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@76cdafa3
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@76cdafa3
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@46b2dcc5
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@46b2dcc5
Adding type registration date -> org.hibernate.type.DateType@6986f93e
Adding type registration java.sql.Date -> org.hibernate.type.DateType@6986f93e
Adding type registration time -> org.hibernate.type.TimeType@1511d157
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1511d157
Adding type registration timestamp -> org.hibernate.type.TimestampType@634f58d2
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@634f58d2
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@634f58d2
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5b02a984
Adding type registration calendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7c588adc
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3d104c9b
Adding type registration locale -> org.hibernate.type.LocaleType@7b96de8d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b96de8d
Adding type registration currency -> org.hibernate.type.CurrencyType@6d0e45a5
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d0e45a5
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5a9840f3
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5a9840f3
Adding type registration class -> org.hibernate.type.ClassType@67b61834
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@67b61834
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c8d58ed
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c8d58ed
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6de7778f
Adding type registration binary -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration byte[] -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration [B -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration row_version -> org.hibernate.type.RowVersionType@74f280bd
Adding type registration image -> org.hibernate.type.ImageType@37c7766e
Adding type registration characters -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration char[] -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration [C -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration text -> org.hibernate.type.TextType@37d28938
Adding type registration ntext -> org.hibernate.type.NTextType@53314f76
Adding type registration blob -> org.hibernate.type.BlobType@342ee097
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@342ee097
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b70d1fb
Adding type registration clob -> org.hibernate.type.ClobType@55361f03
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@55361f03
Adding type registration nclob -> org.hibernate.type.NClobType@51888019
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51888019
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@23bd0c81
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26da1ba2
Adding type registration serializable -> org.hibernate.type.SerializableType@5d850a25
Adding type registration object -> org.hibernate.type.ObjectType@5bb8e6fc
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5bb8e6fc
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@66e341e9
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5b48f0f4
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@546ed2a0
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5bfc79cb
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@27ec8754
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3bbf1c0d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@19662208
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@216c22ce
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@8585cdd
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@8585cdd
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5c8d58ed
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c6b300a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4247093b]
Binding entity from annotated class: model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
MetadataSourceProcessor property firstName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:firstName]
building SimpleValue for firstName
Building property firstName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(firstName)]), firstName, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for firstName
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [firstname] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@68feca3a, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@ad585fb, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@690bc15e, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c6b300a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7602c65d]
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
Static SQL for entity: model.User
 Version select: select firstName from user_table where firstName =?
 Snapshot select: select user_.firstName, user_.amount as amount2_2_ from user_table user_ where user_.firstName=?
 Insert 0: insert into user_table (amount, firstName) values (?, ?)
 Update 0: update user_table set amount=? where firstName=?
 Delete 0: delete from user_table where firstName=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4468ced2]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {firstnam1_2_0_}

Static select for entity model.User [NONE]: select user0_.firstName as firstnam1_2_0_, user0_.amount as amount2_2_0_ from user_table user0_ where user0_.firstName=?
Static SQL for entity: model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dedc8b8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Label)
    - Returns
       - EntityReturnImpl(entity=model.Label, querySpaceUid=<gen:0>, path=model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49b73e6c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Task)
    - Returns
       - EntityReturnImpl(entity=model.Task, querySpaceUid=<gen:0>, path=model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
drop table if exists label_table cascade
drop table if exists task_table cascade
drop table if exists user_table cascade
create table label_table (amount float8 not null, primary key (amount))
create table task_table (name int4 not null, primary key (name))
create table user_table (firstName varchar(255) not null, amount varchar(255), primary key (firstName))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4b98c80c
Registering SessionFactory: 6b490038-d037-4a38-bed7-121c39fedc2f (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@19f02280
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c412556
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6d0290d8
Adding type registration yes_no -> org.hibernate.type.YesNoType@2dd63e3
Adding type registration byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3830b06c
Adding type registration character -> org.hibernate.type.CharacterType@49580ca8
Adding type registration char -> org.hibernate.type.CharacterType@49580ca8
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@49580ca8
Adding type registration short -> org.hibernate.type.ShortType@764fffa0
Adding type registration short -> org.hibernate.type.ShortType@764fffa0
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@764fffa0
Adding type registration integer -> org.hibernate.type.IntegerType@14b275bd
Adding type registration int -> org.hibernate.type.IntegerType@14b275bd
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@14b275bd
Adding type registration long -> org.hibernate.type.LongType@626b639e
Adding type registration long -> org.hibernate.type.LongType@626b639e
Adding type registration java.lang.Long -> org.hibernate.type.LongType@626b639e
Adding type registration float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f8a9454
Adding type registration double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@361cd35c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@551be9f6
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@551be9f6
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1f129467
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1f129467
Adding type registration string -> org.hibernate.type.StringType@53a50b0a
Adding type registration java.lang.String -> org.hibernate.type.StringType@53a50b0a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@65eb3597
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5a14e60d
Adding type registration url -> org.hibernate.type.UrlType@4966bab1
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4966bab1
Adding type registration Duration -> org.hibernate.type.DurationType@17c0274c
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@17c0274c
Adding type registration Instant -> org.hibernate.type.InstantType@69796bd0
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@69796bd0
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@756b2d90
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@756b2d90
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@bb3ecfe
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@bb3ecfe
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@21edd891
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@21edd891
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@251d7fdd
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@251d7fdd
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@76cdafa3
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@76cdafa3
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@46b2dcc5
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@46b2dcc5
Adding type registration date -> org.hibernate.type.DateType@6986f93e
Adding type registration java.sql.Date -> org.hibernate.type.DateType@6986f93e
Adding type registration time -> org.hibernate.type.TimeType@1511d157
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1511d157
Adding type registration timestamp -> org.hibernate.type.TimestampType@634f58d2
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@634f58d2
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@634f58d2
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5b02a984
Adding type registration calendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1e226bcd
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7c588adc
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3d104c9b
Adding type registration locale -> org.hibernate.type.LocaleType@7b96de8d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b96de8d
Adding type registration currency -> org.hibernate.type.CurrencyType@6d0e45a5
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d0e45a5
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5a9840f3
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5a9840f3
Adding type registration class -> org.hibernate.type.ClassType@67b61834
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@67b61834
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c8d58ed
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c8d58ed
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6de7778f
Adding type registration binary -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration byte[] -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration [B -> org.hibernate.type.BinaryType@3dfd6220
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1595d2b2
Adding type registration row_version -> org.hibernate.type.RowVersionType@74f280bd
Adding type registration image -> org.hibernate.type.ImageType@37c7766e
Adding type registration characters -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration char[] -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration [C -> org.hibernate.type.CharArrayType@3caee3a8
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2801827a
Adding type registration text -> org.hibernate.type.TextType@37d28938
Adding type registration ntext -> org.hibernate.type.NTextType@53314f76
Adding type registration blob -> org.hibernate.type.BlobType@342ee097
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@342ee097
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b70d1fb
Adding type registration clob -> org.hibernate.type.ClobType@55361f03
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@55361f03
Adding type registration nclob -> org.hibernate.type.NClobType@51888019
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51888019
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@23bd0c81
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26da1ba2
Adding type registration serializable -> org.hibernate.type.SerializableType@5d850a25
Adding type registration object -> org.hibernate.type.ObjectType@5bb8e6fc
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5bb8e6fc
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@66e341e9
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5b48f0f4
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@546ed2a0
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5bfc79cb
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@27ec8754
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3bbf1c0d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@19662208
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@216c22ce
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@8585cdd
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@8585cdd
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5c8d58ed
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c6b300a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4247093b]
Binding entity from annotated class: model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
MetadataSourceProcessor property firstName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:firstName]
building SimpleValue for firstName
Building property firstName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(firstName)]), firstName, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for firstName
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [firstname] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@68feca3a, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@ad585fb, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@690bc15e, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c6b300a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7602c65d]
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
Static SQL for entity: model.User
 Version select: select firstName from user_table where firstName =?
 Snapshot select: select user_.firstName, user_.amount as amount2_2_ from user_table user_ where user_.firstName=?
 Insert 0: insert into user_table (amount, firstName) values (?, ?)
 Update 0: update user_table set amount=? where firstName=?
 Delete 0: delete from user_table where firstName=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4468ced2]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {firstnam1_2_0_}

Static select for entity model.User [NONE]: select user0_.firstName as firstnam1_2_0_, user0_.amount as amount2_2_0_ from user_table user0_ where user0_.firstName=?
Static SQL for entity: model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dedc8b8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Label)
    - Returns
       - EntityReturnImpl(entity=model.Label, querySpaceUid=<gen:0>, path=model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49b73e6c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Task)
    - Returns
       - EntityReturnImpl(entity=model.Task, querySpaceUid=<gen:0>, path=model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
drop table if exists label_table cascade
drop table if exists task_table cascade
drop table if exists user_table cascade
create table label_table (amount float8 not null, primary key (amount))
create table task_table (name int4 not null, primary key (name))
create table user_table (firstName varchar(255) not null, amount varchar(255), primary key (firstName))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4b98c80c
Registering SessionFactory: 3c15dde3-d616-4abd-95b5-5057746a5f49 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@34d480b9
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2e590b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@2bb62414
Adding type registration yes_no -> org.hibernate.type.YesNoType@30bbcf91
Adding type registration byte -> org.hibernate.type.ByteType@eed890d
Adding type registration byte -> org.hibernate.type.ByteType@eed890d
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@eed890d
Adding type registration character -> org.hibernate.type.CharacterType@553d2579
Adding type registration char -> org.hibernate.type.CharacterType@553d2579
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@553d2579
Adding type registration short -> org.hibernate.type.ShortType@2f054f70
Adding type registration short -> org.hibernate.type.ShortType@2f054f70
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2f054f70
Adding type registration integer -> org.hibernate.type.IntegerType@3b97907c
Adding type registration int -> org.hibernate.type.IntegerType@3b97907c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3b97907c
Adding type registration long -> org.hibernate.type.LongType@738a5848
Adding type registration long -> org.hibernate.type.LongType@738a5848
Adding type registration java.lang.Long -> org.hibernate.type.LongType@738a5848
Adding type registration float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ee5f485
Adding type registration double -> org.hibernate.type.DoubleType@437bd805
Adding type registration double -> org.hibernate.type.DoubleType@437bd805
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@437bd805
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@33a8c9c9
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@33a8c9c9
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4f363abd
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4f363abd
Adding type registration string -> org.hibernate.type.StringType@7c5df615
Adding type registration java.lang.String -> org.hibernate.type.StringType@7c5df615
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@241fbec
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@622d7e4
Adding type registration url -> org.hibernate.type.UrlType@2199e845
Adding type registration java.net.URL -> org.hibernate.type.UrlType@2199e845
Adding type registration Duration -> org.hibernate.type.DurationType@5e50df2e
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5e50df2e
Adding type registration Instant -> org.hibernate.type.InstantType@27960b1e
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@27960b1e
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@dbddbe3
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@dbddbe3
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4bf03fee
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4bf03fee
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7675c171
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7675c171
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28ee0a3c
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28ee0a3c
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7cf63b9a
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7cf63b9a
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@634ca3e7
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@634ca3e7
Adding type registration date -> org.hibernate.type.DateType@13866329
Adding type registration java.sql.Date -> org.hibernate.type.DateType@13866329
Adding type registration time -> org.hibernate.type.TimeType@552fee7a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@552fee7a
Adding type registration timestamp -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5e1a5f
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@e91af20
Adding type registration calendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d124d29
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@d5e575c
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1129829c
Adding type registration locale -> org.hibernate.type.LocaleType@3dbd7107
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3dbd7107
Adding type registration currency -> org.hibernate.type.CurrencyType@89caf47
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@89caf47
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2df65a56
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2df65a56
Adding type registration class -> org.hibernate.type.ClassType@224c7de4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@224c7de4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2afdf6b7
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2afdf6b7
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@35bd8bc9
Adding type registration binary -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration byte[] -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration [B -> org.hibernate.type.BinaryType@16a3cc88
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@450f0235
Adding type registration row_version -> org.hibernate.type.RowVersionType@2dd63e3
Adding type registration image -> org.hibernate.type.ImageType@1e00bfe2
Adding type registration characters -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration char[] -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration [C -> org.hibernate.type.CharArrayType@3a3b10f4
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6af609ea
Adding type registration text -> org.hibernate.type.TextType@4b03cbad
Adding type registration ntext -> org.hibernate.type.NTextType@5d71b500
Adding type registration blob -> org.hibernate.type.BlobType@6b162ecc
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b162ecc
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@56a4abd0
Adding type registration clob -> org.hibernate.type.ClobType@26457986
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26457986
Adding type registration nclob -> org.hibernate.type.NClobType@2bebd114
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2bebd114
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5a14e60d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@79ecc507
Adding type registration serializable -> org.hibernate.type.SerializableType@5a05dd30
Adding type registration object -> org.hibernate.type.ObjectType@5ec88f9e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5ec88f9e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@689faf79
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@582e9152
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7a31ca20
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@349c4d1c
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@21edd891
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@de579ff
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7971c2a9
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2fd39436
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@595184d8
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@595184d8
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2afdf6b7
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@720ffab4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2e62e227]
Binding entity from annotated class: model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
MetadataSourceProcessor property firstName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:firstName]
building SimpleValue for firstName
Building property firstName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(firstName)]), firstName, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for firstName
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [firstname] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@e2d9923, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@554e9509, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@58516c91, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@720ffab4] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@60251ddb]
Not known whether passed class name [model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.User
Not known whether passed class name [model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Label
Not known whether passed class name [model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
Static SQL for entity: model.User
 Version select: select firstName from user_table where firstName =?
 Snapshot select: select user_.firstName, user_.amount as amount2_2_ from user_table user_ where user_.firstName=?
 Insert 0: insert into user_table (amount, firstName) values (?, ?)
 Update 0: update user_table set amount=? where firstName=?
 Delete 0: delete from user_table where firstName=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63df2eb8]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {firstnam1_2_0_}

Static select for entity model.User [NONE]: select user0_.firstName as firstnam1_2_0_, user0_.amount as amount2_2_0_ from user_table user0_ where user0_.firstName=?
Static SQL for entity: model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b30b25f]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Label)
    - Returns
       - EntityReturnImpl(entity=model.Label, querySpaceUid=<gen:0>, path=model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@195d4780]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=model.Task)
    - Returns
       - EntityReturnImpl(entity=model.Task, querySpaceUid=<gen:0>, path=model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
drop table if exists label_table cascade
drop table if exists task_table cascade
drop table if exists user_table cascade
create table label_table (amount float8 not null, primary key (amount))
create table task_table (name int4 not null, primary key (name))
create table user_table (firstName varchar(255) not null, amount varchar(255), primary key (firstName))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@179f30b7
Registering SessionFactory: 80e419ac-bf81-4992-b8bb-e664df5209f5 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@5b29ab61
Adding type registration boolean -> org.hibernate.type.BooleanType@5b29ab61
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5b29ab61
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@8840c98
Adding type registration true_false -> org.hibernate.type.TrueFalseType@47044f7d
Adding type registration yes_no -> org.hibernate.type.YesNoType@361cd35c
Adding type registration byte -> org.hibernate.type.ByteType@5600a5da
Adding type registration byte -> org.hibernate.type.ByteType@5600a5da
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5600a5da
Adding type registration character -> org.hibernate.type.CharacterType@1f129467
Adding type registration char -> org.hibernate.type.CharacterType@1f129467
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f129467
Adding type registration short -> org.hibernate.type.ShortType@764a3e5d
Adding type registration short -> org.hibernate.type.ShortType@764a3e5d
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@764a3e5d
Adding type registration integer -> org.hibernate.type.IntegerType@65eb3597
Adding type registration int -> org.hibernate.type.IntegerType@65eb3597
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@65eb3597
Adding type registration long -> org.hibernate.type.LongType@72ecbcb3
Adding type registration long -> org.hibernate.type.LongType@72ecbcb3
Adding type registration java.lang.Long -> org.hibernate.type.LongType@72ecbcb3
Adding type registration float -> org.hibernate.type.FloatType@39832280
Adding type registration float -> org.hibernate.type.FloatType@39832280
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@39832280
Adding type registration double -> org.hibernate.type.DoubleType@251c8145
Adding type registration double -> org.hibernate.type.DoubleType@251c8145
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@251c8145
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@34045582
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@34045582
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1d289d3f
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1d289d3f
Adding type registration string -> org.hibernate.type.StringType@11c88cca
Adding type registration java.lang.String -> org.hibernate.type.StringType@11c88cca
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3b11620a
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@21edd891
Adding type registration url -> org.hibernate.type.UrlType@391515c7
Adding type registration java.net.URL -> org.hibernate.type.UrlType@391515c7
Adding type registration Duration -> org.hibernate.type.DurationType@6b27b2d0
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6b27b2d0
Adding type registration Instant -> org.hibernate.type.InstantType@111c229c
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@111c229c
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4aed311e
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4aed311e
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@20440c6c
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@20440c6c
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@b768a65
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@b768a65
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@15e8f9b2
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@15e8f9b2
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@14efa279
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@14efa279
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2c2c3947
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2c2c3947
Adding type registration date -> org.hibernate.type.DateType@36224f93
Adding type registration java.sql.Date -> org.hibernate.type.DateType@36224f93
Adding type registration time -> org.hibernate.type.TimeType@3b088163
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b088163
Adding type registration timestamp -> org.hibernate.type.TimestampType@42c0a16e
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@42c0a16e
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@42c0a16e
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@62cbc478
Adding type registration calendar -> org.hibernate.type.CalendarType@2ca54da9
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2ca54da9
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2ca54da9
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@437ed416
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6a09484c
Adding type registration locale -> org.hibernate.type.LocaleType@27a9f025
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@27a9f025
Adding type registration currency -> org.hibernate.type.CurrencyType@2313db84
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2313db84
Adding type registration timezone -> org.hibernate.type.TimeZoneType@37606fee
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@37606fee
Adding type registration class -> org.hibernate.type.ClassType@252ec02e
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@252ec02e
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4b7ed03e
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4b7ed03e
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6094de13
Adding type registration binary -> org.hibernate.type.BinaryType@2dfa02c1
Adding type registration byte[] -> org.hibernate.type.BinaryType@2dfa02c1
Adding type registration [B -> org.hibernate.type.BinaryType@2dfa02c1
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@703fa45
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@703fa45
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@703fa45
Adding type registration row_version -> org.hibernate.type.RowVersionType@7ac48e10
Adding type registration image -> org.hibernate.type.ImageType@12192604
Adding type registration characters -> org.hibernate.type.CharArrayType@2eb0cefe
Adding type registration char[] -> org.hibernate.type.CharArrayType@2eb0cefe
Adding type registration [C -> org.hibernate.type.CharArrayType@2eb0cefe
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3a4a5f3c
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3a4a5f3c
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3a4a5f3c
Adding type registration text -> org.hibernate.type.TextType@51888019
Adding type registration ntext -> org.hibernate.type.NTextType@23bd0c81
Adding type registration blob -> org.hibernate.type.BlobType@5d850a25
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d850a25
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@31ab1e67
Adding type registration clob -> org.hibernate.type.ClobType@75e80a97
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@75e80a97
Adding type registration nclob -> org.hibernate.type.NClobType@747f6c5a
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@747f6c5a
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@27ec8754
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@21e5f0b6
Adding type registration serializable -> org.hibernate.type.SerializableType@52ecc989
Adding type registration object -> org.hibernate.type.ObjectType@785ed99c
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@785ed99c
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2cccf134
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3c18942
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@743c3520
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6842c101
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@234cd86c
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2c48cede
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39c87b42
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@47fcefb3
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5e2b512b
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5e2b512b
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4b7ed03e
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@113c4ad6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7be859de]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7b92ea9d, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=com.revature.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6b3bc1f6, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@7eae3764, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@113c4ad6] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2cd2c764]
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1165a952
Registering SessionFactory: 132f25b4-1461-4534-8407-515154250da0 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@19b75b2b
Adding type registration boolean -> org.hibernate.type.BooleanType@19b75b2b
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@19b75b2b
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@30f28b5
Adding type registration true_false -> org.hibernate.type.TrueFalseType@57186526
Adding type registration yes_no -> org.hibernate.type.YesNoType@6d69a0d3
Adding type registration byte -> org.hibernate.type.ByteType@1e226bcd
Adding type registration byte -> org.hibernate.type.ByteType@1e226bcd
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1e226bcd
Adding type registration character -> org.hibernate.type.CharacterType@7c588adc
Adding type registration char -> org.hibernate.type.CharacterType@7c588adc
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c588adc
Adding type registration short -> org.hibernate.type.ShortType@6ddd1c51
Adding type registration short -> org.hibernate.type.ShortType@6ddd1c51
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6ddd1c51
Adding type registration integer -> org.hibernate.type.IntegerType@1bd8afc8
Adding type registration int -> org.hibernate.type.IntegerType@1bd8afc8
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bd8afc8
Adding type registration long -> org.hibernate.type.LongType@2ca3d826
Adding type registration long -> org.hibernate.type.LongType@2ca3d826
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ca3d826
Adding type registration float -> org.hibernate.type.FloatType@5c3d4f05
Adding type registration float -> org.hibernate.type.FloatType@5c3d4f05
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5c3d4f05
Adding type registration double -> org.hibernate.type.DoubleType@7aa01bd9
Adding type registration double -> org.hibernate.type.DoubleType@7aa01bd9
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7aa01bd9
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@34a20f16
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@34a20f16
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@437ed416
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@437ed416
Adding type registration string -> org.hibernate.type.StringType@4ce25e47
Adding type registration java.lang.String -> org.hibernate.type.StringType@4ce25e47
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@8b13d91
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5657967b
Adding type registration url -> org.hibernate.type.UrlType@45037e16
Adding type registration java.net.URL -> org.hibernate.type.UrlType@45037e16
Adding type registration Duration -> org.hibernate.type.DurationType@12abcd1e
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@12abcd1e
Adding type registration Instant -> org.hibernate.type.InstantType@5a592c70
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5a592c70
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4b7ed03e
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4b7ed03e
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@30abf79c
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@30abf79c
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6870cfac
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6870cfac
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2801827a
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2801827a
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@53314f76
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@53314f76
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@43d76a92
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@43d76a92
Adding type registration date -> org.hibernate.type.DateType@448462f0
Adding type registration java.sql.Date -> org.hibernate.type.DateType@448462f0
Adding type registration time -> org.hibernate.type.TimeType@7739aac4
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7739aac4
Adding type registration timestamp -> org.hibernate.type.TimestampType@5bb8e6fc
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5bb8e6fc
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5bb8e6fc
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4981d95b
Adding type registration calendar -> org.hibernate.type.CalendarType@52ecc989
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52ecc989
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52ecc989
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63d677f5
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@75793f17
Adding type registration locale -> org.hibernate.type.LocaleType@2c48cede
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c48cede
Adding type registration currency -> org.hibernate.type.CurrencyType@571a663c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@571a663c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7b6141f0
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7b6141f0
Adding type registration class -> org.hibernate.type.ClassType@60591e1b
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@60591e1b
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4f2ac7e0
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4f2ac7e0
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5333f08f
Adding type registration binary -> org.hibernate.type.BinaryType@13278a41
Adding type registration byte[] -> org.hibernate.type.BinaryType@13278a41
Adding type registration [B -> org.hibernate.type.BinaryType@13278a41
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@33eb0d4
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@33eb0d4
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@33eb0d4
Adding type registration row_version -> org.hibernate.type.RowVersionType@7741ae1b
Adding type registration image -> org.hibernate.type.ImageType@10817f46
Adding type registration characters -> org.hibernate.type.CharArrayType@6aea99e7
Adding type registration char[] -> org.hibernate.type.CharArrayType@6aea99e7
Adding type registration [C -> org.hibernate.type.CharArrayType@6aea99e7
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7ceb6c45
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7ceb6c45
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7ceb6c45
Adding type registration text -> org.hibernate.type.TextType@34c76167
Adding type registration ntext -> org.hibernate.type.NTextType@404ced67
Adding type registration blob -> org.hibernate.type.BlobType@54f6b629
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@54f6b629
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@70c29356
Adding type registration clob -> org.hibernate.type.ClobType@3f048c86
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3f048c86
Adding type registration nclob -> org.hibernate.type.NClobType@26b3c9a2
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@26b3c9a2
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@13192275
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@19a5b637
Adding type registration serializable -> org.hibernate.type.SerializableType@6cdee57
Adding type registration object -> org.hibernate.type.ObjectType@73a845cb
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@73a845cb
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5175d9ad
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@b06d46d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@25a5c8e
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@656c5c3
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7911cc15
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4409cae6
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@14e750c5
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@242ff747
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5c0ece6d
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5c0ece6d
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4f2ac7e0
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18209303] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@57df09a7]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@206b959c, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=com.revature.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@74026b18, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@e57e5d6, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18209303] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@263e512e]
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@294bb6ae
Registering SessionFactory: 20c31425-e93f-4e33-9750-7321497582f0 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@19b75b2b
Adding type registration boolean -> org.hibernate.type.BooleanType@19b75b2b
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@19b75b2b
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@30f28b5
Adding type registration true_false -> org.hibernate.type.TrueFalseType@57186526
Adding type registration yes_no -> org.hibernate.type.YesNoType@6d69a0d3
Adding type registration byte -> org.hibernate.type.ByteType@1e226bcd
Adding type registration byte -> org.hibernate.type.ByteType@1e226bcd
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1e226bcd
Adding type registration character -> org.hibernate.type.CharacterType@7c588adc
Adding type registration char -> org.hibernate.type.CharacterType@7c588adc
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c588adc
Adding type registration short -> org.hibernate.type.ShortType@6ddd1c51
Adding type registration short -> org.hibernate.type.ShortType@6ddd1c51
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6ddd1c51
Adding type registration integer -> org.hibernate.type.IntegerType@1bd8afc8
Adding type registration int -> org.hibernate.type.IntegerType@1bd8afc8
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bd8afc8
Adding type registration long -> org.hibernate.type.LongType@2ca3d826
Adding type registration long -> org.hibernate.type.LongType@2ca3d826
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ca3d826
Adding type registration float -> org.hibernate.type.FloatType@5c3d4f05
Adding type registration float -> org.hibernate.type.FloatType@5c3d4f05
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5c3d4f05
Adding type registration double -> org.hibernate.type.DoubleType@7aa01bd9
Adding type registration double -> org.hibernate.type.DoubleType@7aa01bd9
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7aa01bd9
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@34a20f16
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@34a20f16
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@437ed416
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@437ed416
Adding type registration string -> org.hibernate.type.StringType@4ce25e47
Adding type registration java.lang.String -> org.hibernate.type.StringType@4ce25e47
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@8b13d91
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5657967b
Adding type registration url -> org.hibernate.type.UrlType@45037e16
Adding type registration java.net.URL -> org.hibernate.type.UrlType@45037e16
Adding type registration Duration -> org.hibernate.type.DurationType@12abcd1e
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@12abcd1e
Adding type registration Instant -> org.hibernate.type.InstantType@5a592c70
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5a592c70
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4b7ed03e
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4b7ed03e
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@30abf79c
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@30abf79c
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6870cfac
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6870cfac
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2801827a
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2801827a
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@53314f76
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@53314f76
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@43d76a92
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@43d76a92
Adding type registration date -> org.hibernate.type.DateType@448462f0
Adding type registration java.sql.Date -> org.hibernate.type.DateType@448462f0
Adding type registration time -> org.hibernate.type.TimeType@7739aac4
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7739aac4
Adding type registration timestamp -> org.hibernate.type.TimestampType@5bb8e6fc
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5bb8e6fc
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5bb8e6fc
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4981d95b
Adding type registration calendar -> org.hibernate.type.CalendarType@52ecc989
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52ecc989
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52ecc989
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63d677f5
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@75793f17
Adding type registration locale -> org.hibernate.type.LocaleType@2c48cede
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c48cede
Adding type registration currency -> org.hibernate.type.CurrencyType@571a663c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@571a663c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7b6141f0
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7b6141f0
Adding type registration class -> org.hibernate.type.ClassType@60591e1b
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@60591e1b
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4f2ac7e0
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4f2ac7e0
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5333f08f
Adding type registration binary -> org.hibernate.type.BinaryType@13278a41
Adding type registration byte[] -> org.hibernate.type.BinaryType@13278a41
Adding type registration [B -> org.hibernate.type.BinaryType@13278a41
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@33eb0d4
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@33eb0d4
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@33eb0d4
Adding type registration row_version -> org.hibernate.type.RowVersionType@7741ae1b
Adding type registration image -> org.hibernate.type.ImageType@10817f46
Adding type registration characters -> org.hibernate.type.CharArrayType@6aea99e7
Adding type registration char[] -> org.hibernate.type.CharArrayType@6aea99e7
Adding type registration [C -> org.hibernate.type.CharArrayType@6aea99e7
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7ceb6c45
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7ceb6c45
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7ceb6c45
Adding type registration text -> org.hibernate.type.TextType@34c76167
Adding type registration ntext -> org.hibernate.type.NTextType@404ced67
Adding type registration blob -> org.hibernate.type.BlobType@54f6b629
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@54f6b629
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@70c29356
Adding type registration clob -> org.hibernate.type.ClobType@3f048c86
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3f048c86
Adding type registration nclob -> org.hibernate.type.NClobType@26b3c9a2
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@26b3c9a2
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@13192275
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@19a5b637
Adding type registration serializable -> org.hibernate.type.SerializableType@6cdee57
Adding type registration object -> org.hibernate.type.ObjectType@73a845cb
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@73a845cb
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5175d9ad
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@b06d46d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@25a5c8e
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@656c5c3
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7911cc15
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4409cae6
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@14e750c5
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@242ff747
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5c0ece6d
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5c0ece6d
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4f2ac7e0
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18209303] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@57df09a7]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@206b959c, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=com.revature.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@74026b18, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@e57e5d6, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18209303] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@263e512e]
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@294bb6ae
Registering SessionFactory: a13a3b1b-bf75-44f2-bf82-5602d31427dc (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@19b75b2b
Adding type registration boolean -> org.hibernate.type.BooleanType@19b75b2b
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@19b75b2b
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@30f28b5
Adding type registration true_false -> org.hibernate.type.TrueFalseType@57186526
Adding type registration yes_no -> org.hibernate.type.YesNoType@6d69a0d3
Adding type registration byte -> org.hibernate.type.ByteType@1e226bcd
Adding type registration byte -> org.hibernate.type.ByteType@1e226bcd
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1e226bcd
Adding type registration character -> org.hibernate.type.CharacterType@7c588adc
Adding type registration char -> org.hibernate.type.CharacterType@7c588adc
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c588adc
Adding type registration short -> org.hibernate.type.ShortType@6ddd1c51
Adding type registration short -> org.hibernate.type.ShortType@6ddd1c51
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6ddd1c51
Adding type registration integer -> org.hibernate.type.IntegerType@1bd8afc8
Adding type registration int -> org.hibernate.type.IntegerType@1bd8afc8
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bd8afc8
Adding type registration long -> org.hibernate.type.LongType@2ca3d826
Adding type registration long -> org.hibernate.type.LongType@2ca3d826
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ca3d826
Adding type registration float -> org.hibernate.type.FloatType@5c3d4f05
Adding type registration float -> org.hibernate.type.FloatType@5c3d4f05
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5c3d4f05
Adding type registration double -> org.hibernate.type.DoubleType@7aa01bd9
Adding type registration double -> org.hibernate.type.DoubleType@7aa01bd9
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7aa01bd9
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@34a20f16
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@34a20f16
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@437ed416
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@437ed416
Adding type registration string -> org.hibernate.type.StringType@4ce25e47
Adding type registration java.lang.String -> org.hibernate.type.StringType@4ce25e47
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@8b13d91
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5657967b
Adding type registration url -> org.hibernate.type.UrlType@45037e16
Adding type registration java.net.URL -> org.hibernate.type.UrlType@45037e16
Adding type registration Duration -> org.hibernate.type.DurationType@12abcd1e
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@12abcd1e
Adding type registration Instant -> org.hibernate.type.InstantType@5a592c70
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5a592c70
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4b7ed03e
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4b7ed03e
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@30abf79c
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@30abf79c
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6870cfac
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6870cfac
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2801827a
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2801827a
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@53314f76
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@53314f76
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@43d76a92
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@43d76a92
Adding type registration date -> org.hibernate.type.DateType@448462f0
Adding type registration java.sql.Date -> org.hibernate.type.DateType@448462f0
Adding type registration time -> org.hibernate.type.TimeType@7739aac4
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7739aac4
Adding type registration timestamp -> org.hibernate.type.TimestampType@5bb8e6fc
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5bb8e6fc
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5bb8e6fc
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4981d95b
Adding type registration calendar -> org.hibernate.type.CalendarType@52ecc989
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52ecc989
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52ecc989
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63d677f5
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@75793f17
Adding type registration locale -> org.hibernate.type.LocaleType@2c48cede
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c48cede
Adding type registration currency -> org.hibernate.type.CurrencyType@571a663c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@571a663c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7b6141f0
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7b6141f0
Adding type registration class -> org.hibernate.type.ClassType@60591e1b
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@60591e1b
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4f2ac7e0
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4f2ac7e0
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5333f08f
Adding type registration binary -> org.hibernate.type.BinaryType@13278a41
Adding type registration byte[] -> org.hibernate.type.BinaryType@13278a41
Adding type registration [B -> org.hibernate.type.BinaryType@13278a41
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@33eb0d4
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@33eb0d4
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@33eb0d4
Adding type registration row_version -> org.hibernate.type.RowVersionType@7741ae1b
Adding type registration image -> org.hibernate.type.ImageType@10817f46
Adding type registration characters -> org.hibernate.type.CharArrayType@6aea99e7
Adding type registration char[] -> org.hibernate.type.CharArrayType@6aea99e7
Adding type registration [C -> org.hibernate.type.CharArrayType@6aea99e7
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7ceb6c45
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7ceb6c45
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7ceb6c45
Adding type registration text -> org.hibernate.type.TextType@34c76167
Adding type registration ntext -> org.hibernate.type.NTextType@404ced67
Adding type registration blob -> org.hibernate.type.BlobType@54f6b629
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@54f6b629
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@70c29356
Adding type registration clob -> org.hibernate.type.ClobType@3f048c86
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3f048c86
Adding type registration nclob -> org.hibernate.type.NClobType@26b3c9a2
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@26b3c9a2
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@13192275
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@19a5b637
Adding type registration serializable -> org.hibernate.type.SerializableType@6cdee57
Adding type registration object -> org.hibernate.type.ObjectType@73a845cb
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@73a845cb
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5175d9ad
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@b06d46d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@25a5c8e
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@656c5c3
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7911cc15
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4409cae6
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@14e750c5
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@242ff747
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5c0ece6d
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5c0ece6d
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4f2ac7e0
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18209303] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@57df09a7]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@206b959c, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=com.revature.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@74026b18, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@e57e5d6, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18209303] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@263e512e]
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@294bb6ae
Registering SessionFactory: 9f5ec265-0c97-49f0-8b97-6d97987eeb92 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@19b75b2b
Adding type registration boolean -> org.hibernate.type.BooleanType@19b75b2b
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@19b75b2b
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@30f28b5
Adding type registration true_false -> org.hibernate.type.TrueFalseType@57186526
Adding type registration yes_no -> org.hibernate.type.YesNoType@6d69a0d3
Adding type registration byte -> org.hibernate.type.ByteType@1e226bcd
Adding type registration byte -> org.hibernate.type.ByteType@1e226bcd
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1e226bcd
Adding type registration character -> org.hibernate.type.CharacterType@7c588adc
Adding type registration char -> org.hibernate.type.CharacterType@7c588adc
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c588adc
Adding type registration short -> org.hibernate.type.ShortType@6ddd1c51
Adding type registration short -> org.hibernate.type.ShortType@6ddd1c51
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6ddd1c51
Adding type registration integer -> org.hibernate.type.IntegerType@1bd8afc8
Adding type registration int -> org.hibernate.type.IntegerType@1bd8afc8
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bd8afc8
Adding type registration long -> org.hibernate.type.LongType@2ca3d826
Adding type registration long -> org.hibernate.type.LongType@2ca3d826
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ca3d826
Adding type registration float -> org.hibernate.type.FloatType@5c3d4f05
Adding type registration float -> org.hibernate.type.FloatType@5c3d4f05
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5c3d4f05
Adding type registration double -> org.hibernate.type.DoubleType@7aa01bd9
Adding type registration double -> org.hibernate.type.DoubleType@7aa01bd9
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7aa01bd9
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@34a20f16
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@34a20f16
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@437ed416
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@437ed416
Adding type registration string -> org.hibernate.type.StringType@4ce25e47
Adding type registration java.lang.String -> org.hibernate.type.StringType@4ce25e47
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@8b13d91
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5657967b
Adding type registration url -> org.hibernate.type.UrlType@45037e16
Adding type registration java.net.URL -> org.hibernate.type.UrlType@45037e16
Adding type registration Duration -> org.hibernate.type.DurationType@12abcd1e
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@12abcd1e
Adding type registration Instant -> org.hibernate.type.InstantType@5a592c70
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5a592c70
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4b7ed03e
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4b7ed03e
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@30abf79c
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@30abf79c
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6870cfac
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6870cfac
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2801827a
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2801827a
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@53314f76
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@53314f76
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@43d76a92
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@43d76a92
Adding type registration date -> org.hibernate.type.DateType@448462f0
Adding type registration java.sql.Date -> org.hibernate.type.DateType@448462f0
Adding type registration time -> org.hibernate.type.TimeType@7739aac4
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7739aac4
Adding type registration timestamp -> org.hibernate.type.TimestampType@5bb8e6fc
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5bb8e6fc
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5bb8e6fc
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4981d95b
Adding type registration calendar -> org.hibernate.type.CalendarType@52ecc989
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52ecc989
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52ecc989
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63d677f5
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@75793f17
Adding type registration locale -> org.hibernate.type.LocaleType@2c48cede
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c48cede
Adding type registration currency -> org.hibernate.type.CurrencyType@571a663c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@571a663c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7b6141f0
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7b6141f0
Adding type registration class -> org.hibernate.type.ClassType@60591e1b
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@60591e1b
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4f2ac7e0
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4f2ac7e0
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5333f08f
Adding type registration binary -> org.hibernate.type.BinaryType@13278a41
Adding type registration byte[] -> org.hibernate.type.BinaryType@13278a41
Adding type registration [B -> org.hibernate.type.BinaryType@13278a41
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@33eb0d4
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@33eb0d4
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@33eb0d4
Adding type registration row_version -> org.hibernate.type.RowVersionType@7741ae1b
Adding type registration image -> org.hibernate.type.ImageType@10817f46
Adding type registration characters -> org.hibernate.type.CharArrayType@6aea99e7
Adding type registration char[] -> org.hibernate.type.CharArrayType@6aea99e7
Adding type registration [C -> org.hibernate.type.CharArrayType@6aea99e7
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7ceb6c45
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7ceb6c45
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7ceb6c45
Adding type registration text -> org.hibernate.type.TextType@34c76167
Adding type registration ntext -> org.hibernate.type.NTextType@404ced67
Adding type registration blob -> org.hibernate.type.BlobType@54f6b629
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@54f6b629
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@70c29356
Adding type registration clob -> org.hibernate.type.ClobType@3f048c86
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3f048c86
Adding type registration nclob -> org.hibernate.type.NClobType@26b3c9a2
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@26b3c9a2
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@13192275
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@19a5b637
Adding type registration serializable -> org.hibernate.type.SerializableType@6cdee57
Adding type registration object -> org.hibernate.type.ObjectType@73a845cb
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@73a845cb
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5175d9ad
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@b06d46d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@25a5c8e
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@656c5c3
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7911cc15
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4409cae6
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@14e750c5
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@242ff747
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5c0ece6d
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5c0ece6d
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4f2ac7e0
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18209303] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@57df09a7]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@206b959c, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=com.revature.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@74026b18, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@e57e5d6, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18209303] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@263e512e]
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@294bb6ae
Registering SessionFactory: 5ad59bad-be75-4607-8019-79b68c2cfe67 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@9b367c8
Adding type registration boolean -> org.hibernate.type.BooleanType@9b367c8
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@9b367c8
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@99a8de3
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6f3bd37f
Adding type registration yes_no -> org.hibernate.type.YesNoType@458031da
Adding type registration byte -> org.hibernate.type.ByteType@22a4ca4a
Adding type registration byte -> org.hibernate.type.ByteType@22a4ca4a
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@22a4ca4a
Adding type registration character -> org.hibernate.type.CharacterType@13f40d71
Adding type registration char -> org.hibernate.type.CharacterType@13f40d71
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@13f40d71
Adding type registration short -> org.hibernate.type.ShortType@656c5c3
Adding type registration short -> org.hibernate.type.ShortType@656c5c3
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@656c5c3
Adding type registration integer -> org.hibernate.type.IntegerType@307cf964
Adding type registration int -> org.hibernate.type.IntegerType@307cf964
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@307cf964
Adding type registration long -> org.hibernate.type.LongType@1c7f9861
Adding type registration long -> org.hibernate.type.LongType@1c7f9861
Adding type registration java.lang.Long -> org.hibernate.type.LongType@1c7f9861
Adding type registration float -> org.hibernate.type.FloatType@39449465
Adding type registration float -> org.hibernate.type.FloatType@39449465
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@39449465
Adding type registration double -> org.hibernate.type.DoubleType@6dd79214
Adding type registration double -> org.hibernate.type.DoubleType@6dd79214
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6dd79214
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4eb9ae4d
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4eb9ae4d
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@76a9a009
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@76a9a009
Adding type registration string -> org.hibernate.type.StringType@56cfe6be
Adding type registration java.lang.String -> org.hibernate.type.StringType@56cfe6be
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@781654f8
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65600fb3
Adding type registration url -> org.hibernate.type.UrlType@1a2e563e
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1a2e563e
Adding type registration Duration -> org.hibernate.type.DurationType@79add732
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@79add732
Adding type registration Instant -> org.hibernate.type.InstantType@700b9e6b
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@700b9e6b
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5fb5ad40
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5fb5ad40
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4d81e83a
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4d81e83a
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@35f7969d
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@35f7969d
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@736b21ee
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@736b21ee
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@787d1f9c
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@787d1f9c
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@36510e73
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@36510e73
Adding type registration date -> org.hibernate.type.DateType@4dd2ef54
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4dd2ef54
Adding type registration time -> org.hibernate.type.TimeType@74e497ae
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@74e497ae
Adding type registration timestamp -> org.hibernate.type.TimestampType@133aacbe
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@133aacbe
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@133aacbe
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68aec50
Adding type registration calendar -> org.hibernate.type.CalendarType@722531ab
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@722531ab
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@722531ab
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5882b202
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@73d62b5
Adding type registration locale -> org.hibernate.type.LocaleType@49b89425
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@49b89425
Adding type registration currency -> org.hibernate.type.CurrencyType@164d01ba
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@164d01ba
Adding type registration timezone -> org.hibernate.type.TimeZoneType@61a87366
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@61a87366
Adding type registration class -> org.hibernate.type.ClassType@2e362407
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2e362407
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5e9bf744
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5e9bf744
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54326e9
Adding type registration binary -> org.hibernate.type.BinaryType@2e4eda17
Adding type registration byte[] -> org.hibernate.type.BinaryType@2e4eda17
Adding type registration [B -> org.hibernate.type.BinaryType@2e4eda17
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11826398
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11826398
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11826398
Adding type registration row_version -> org.hibernate.type.RowVersionType@4f5c30b1
Adding type registration image -> org.hibernate.type.ImageType@5c234920
Adding type registration characters -> org.hibernate.type.CharArrayType@2a5abd3c
Adding type registration char[] -> org.hibernate.type.CharArrayType@2a5abd3c
Adding type registration [C -> org.hibernate.type.CharArrayType@2a5abd3c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@69b3886f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@69b3886f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@69b3886f
Adding type registration text -> org.hibernate.type.TextType@59e7564b
Adding type registration ntext -> org.hibernate.type.NTextType@633ddc0c
Adding type registration blob -> org.hibernate.type.BlobType@2a8f8555
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a8f8555
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4e8598d9
Adding type registration clob -> org.hibernate.type.ClobType@781dbe44
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@781dbe44
Adding type registration nclob -> org.hibernate.type.NClobType@3e38c472
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3e38c472
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7345f97d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@150d6eaf
Adding type registration serializable -> org.hibernate.type.SerializableType@57b9389f
Adding type registration object -> org.hibernate.type.ObjectType@6b5c134e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6b5c134e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1192c925
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@615b5480
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@24691c5
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7b91d9f
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6537ac
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3b218c74
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ddffa6c
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@42c54bad
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@14d298d6
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@14d298d6
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5e9bf744
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14eb96e9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@10b3ea72]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@440d2d64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=com.revature.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1a712f12, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@7f1ef916, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14eb96e9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6318ff9]
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@460df441
Registering SessionFactory: d76e4ca9-2740-450e-85ab-45adc3b2f02f (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
rolling back
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@27ab206
Adding type registration boolean -> org.hibernate.type.BooleanType@27ab206
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@27ab206
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6af87130
Adding type registration true_false -> org.hibernate.type.TrueFalseType@73a845cb
Adding type registration yes_no -> org.hibernate.type.YesNoType@5175d9ad
Adding type registration byte -> org.hibernate.type.ByteType@77324a58
Adding type registration byte -> org.hibernate.type.ByteType@77324a58
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@77324a58
Adding type registration character -> org.hibernate.type.CharacterType@7a36c83a
Adding type registration char -> org.hibernate.type.CharacterType@7a36c83a
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a36c83a
Adding type registration short -> org.hibernate.type.ShortType@6e3dd5ce
Adding type registration short -> org.hibernate.type.ShortType@6e3dd5ce
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6e3dd5ce
Adding type registration integer -> org.hibernate.type.IntegerType@ef86c72
Adding type registration int -> org.hibernate.type.IntegerType@ef86c72
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ef86c72
Adding type registration long -> org.hibernate.type.LongType@51f68849
Adding type registration long -> org.hibernate.type.LongType@51f68849
Adding type registration java.lang.Long -> org.hibernate.type.LongType@51f68849
Adding type registration float -> org.hibernate.type.FloatType@6ce26986
Adding type registration float -> org.hibernate.type.FloatType@6ce26986
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ce26986
Adding type registration double -> org.hibernate.type.DoubleType@7f2b584b
Adding type registration double -> org.hibernate.type.DoubleType@7f2b584b
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7f2b584b
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@39f0c343
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@39f0c343
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@19ad75e5
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@19ad75e5
Adding type registration string -> org.hibernate.type.StringType@47fb7ec9
Adding type registration java.lang.String -> org.hibernate.type.StringType@47fb7ec9
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@79add732
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@aa1bb14
Adding type registration url -> org.hibernate.type.UrlType@55d8c2c4
Adding type registration java.net.URL -> org.hibernate.type.UrlType@55d8c2c4
Adding type registration Duration -> org.hibernate.type.DurationType@632cf7d3
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@632cf7d3
Adding type registration Instant -> org.hibernate.type.InstantType@5bec3e0
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5bec3e0
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@73bb573d
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@73bb573d
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@341c6ac2
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@341c6ac2
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@79e10fb4
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@79e10fb4
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@26c7b1c6
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@26c7b1c6
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b28a7bf
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b28a7bf
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@77aea
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@77aea
Adding type registration date -> org.hibernate.type.DateType@25ad25f5
Adding type registration java.sql.Date -> org.hibernate.type.DateType@25ad25f5
Adding type registration time -> org.hibernate.type.TimeType@4ea1aa52
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4ea1aa52
Adding type registration timestamp -> org.hibernate.type.TimestampType@69d103f0
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@69d103f0
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@69d103f0
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5882b202
Adding type registration calendar -> org.hibernate.type.CalendarType@5e99e2cb
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5e99e2cb
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5e99e2cb
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@24197b13
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@164d01ba
Adding type registration locale -> org.hibernate.type.LocaleType@167a21b
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@167a21b
Adding type registration currency -> org.hibernate.type.CurrencyType@3b170235
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b170235
Adding type registration timezone -> org.hibernate.type.TimeZoneType@267891bf
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@267891bf
Adding type registration class -> org.hibernate.type.ClassType@6818fd48
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6818fd48
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@21d9cd04
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@21d9cd04
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7af1d072
Adding type registration binary -> org.hibernate.type.BinaryType@70b33256
Adding type registration byte[] -> org.hibernate.type.BinaryType@70b33256
Adding type registration [B -> org.hibernate.type.BinaryType@70b33256
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5d9d2119
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5d9d2119
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5d9d2119
Adding type registration row_version -> org.hibernate.type.RowVersionType@5c82031b
Adding type registration image -> org.hibernate.type.ImageType@3ffd4b12
Adding type registration characters -> org.hibernate.type.CharArrayType@1471b98d
Adding type registration char[] -> org.hibernate.type.CharArrayType@1471b98d
Adding type registration [C -> org.hibernate.type.CharArrayType@1471b98d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12567179
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12567179
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12567179
Adding type registration text -> org.hibernate.type.TextType@2a8f8555
Adding type registration ntext -> org.hibernate.type.NTextType@4e8598d9
Adding type registration blob -> org.hibernate.type.BlobType@7661e474
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7661e474
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@733f1395
Adding type registration clob -> org.hibernate.type.ClobType@63124022
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@63124022
Adding type registration nclob -> org.hibernate.type.NClobType@57b9389f
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@57b9389f
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1600a8a2
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3f0ce0d1
Adding type registration serializable -> org.hibernate.type.SerializableType@504497fa
Adding type registration object -> org.hibernate.type.ObjectType@55bf35e5
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@55bf35e5
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5da6b13d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3dc39459
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6b16de91
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71bb8b34
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@197ce367
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@383cdd4d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@65036e8d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@48ccbb32
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@481bae3f
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@481bae3f
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@21d9cd04
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@51da7b08] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@580154b3]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6f5288c5, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=com.revature.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5a9ef32e, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@3bd6ba24, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@51da7b08] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1bb78ae]
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4e68aede
Registering SessionFactory: a4562a50-e6b7-4a6f-b520-77992279f07e (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
rolling back
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@9b367c8
Adding type registration boolean -> org.hibernate.type.BooleanType@9b367c8
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@9b367c8
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@99a8de3
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6f3bd37f
Adding type registration yes_no -> org.hibernate.type.YesNoType@458031da
Adding type registration byte -> org.hibernate.type.ByteType@22a4ca4a
Adding type registration byte -> org.hibernate.type.ByteType@22a4ca4a
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@22a4ca4a
Adding type registration character -> org.hibernate.type.CharacterType@13f40d71
Adding type registration char -> org.hibernate.type.CharacterType@13f40d71
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@13f40d71
Adding type registration short -> org.hibernate.type.ShortType@656c5c3
Adding type registration short -> org.hibernate.type.ShortType@656c5c3
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@656c5c3
Adding type registration integer -> org.hibernate.type.IntegerType@307cf964
Adding type registration int -> org.hibernate.type.IntegerType@307cf964
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@307cf964
Adding type registration long -> org.hibernate.type.LongType@1c7f9861
Adding type registration long -> org.hibernate.type.LongType@1c7f9861
Adding type registration java.lang.Long -> org.hibernate.type.LongType@1c7f9861
Adding type registration float -> org.hibernate.type.FloatType@39449465
Adding type registration float -> org.hibernate.type.FloatType@39449465
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@39449465
Adding type registration double -> org.hibernate.type.DoubleType@6dd79214
Adding type registration double -> org.hibernate.type.DoubleType@6dd79214
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6dd79214
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4eb9ae4d
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4eb9ae4d
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@76a9a009
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@76a9a009
Adding type registration string -> org.hibernate.type.StringType@56cfe6be
Adding type registration java.lang.String -> org.hibernate.type.StringType@56cfe6be
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@781654f8
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65600fb3
Adding type registration url -> org.hibernate.type.UrlType@1a2e563e
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1a2e563e
Adding type registration Duration -> org.hibernate.type.DurationType@79add732
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@79add732
Adding type registration Instant -> org.hibernate.type.InstantType@700b9e6b
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@700b9e6b
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5fb5ad40
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5fb5ad40
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4d81e83a
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4d81e83a
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@35f7969d
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@35f7969d
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@736b21ee
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@736b21ee
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@787d1f9c
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@787d1f9c
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@36510e73
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@36510e73
Adding type registration date -> org.hibernate.type.DateType@4dd2ef54
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4dd2ef54
Adding type registration time -> org.hibernate.type.TimeType@74e497ae
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@74e497ae
Adding type registration timestamp -> org.hibernate.type.TimestampType@133aacbe
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@133aacbe
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@133aacbe
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68aec50
Adding type registration calendar -> org.hibernate.type.CalendarType@722531ab
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@722531ab
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@722531ab
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5882b202
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@73d62b5
Adding type registration locale -> org.hibernate.type.LocaleType@49b89425
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@49b89425
Adding type registration currency -> org.hibernate.type.CurrencyType@164d01ba
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@164d01ba
Adding type registration timezone -> org.hibernate.type.TimeZoneType@61a87366
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@61a87366
Adding type registration class -> org.hibernate.type.ClassType@2e362407
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2e362407
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5e9bf744
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5e9bf744
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54326e9
Adding type registration binary -> org.hibernate.type.BinaryType@2e4eda17
Adding type registration byte[] -> org.hibernate.type.BinaryType@2e4eda17
Adding type registration [B -> org.hibernate.type.BinaryType@2e4eda17
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11826398
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11826398
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11826398
Adding type registration row_version -> org.hibernate.type.RowVersionType@4f5c30b1
Adding type registration image -> org.hibernate.type.ImageType@5c234920
Adding type registration characters -> org.hibernate.type.CharArrayType@2a5abd3c
Adding type registration char[] -> org.hibernate.type.CharArrayType@2a5abd3c
Adding type registration [C -> org.hibernate.type.CharArrayType@2a5abd3c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@69b3886f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@69b3886f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@69b3886f
Adding type registration text -> org.hibernate.type.TextType@59e7564b
Adding type registration ntext -> org.hibernate.type.NTextType@633ddc0c
Adding type registration blob -> org.hibernate.type.BlobType@2a8f8555
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a8f8555
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4e8598d9
Adding type registration clob -> org.hibernate.type.ClobType@781dbe44
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@781dbe44
Adding type registration nclob -> org.hibernate.type.NClobType@3e38c472
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3e38c472
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7345f97d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@150d6eaf
Adding type registration serializable -> org.hibernate.type.SerializableType@57b9389f
Adding type registration object -> org.hibernate.type.ObjectType@6b5c134e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6b5c134e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1192c925
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@615b5480
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@24691c5
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7b91d9f
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6537ac
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3b218c74
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ddffa6c
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@42c54bad
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@14d298d6
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@14d298d6
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5e9bf744
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14eb96e9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@10b3ea72]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@440d2d64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=com.revature.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1a712f12, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@7f1ef916, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14eb96e9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6318ff9]
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@460df441
Registering SessionFactory: 127d0307-b621-41da-97ae-62daf8213c51 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
rolling back
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@9b367c8
Adding type registration boolean -> org.hibernate.type.BooleanType@9b367c8
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@9b367c8
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@99a8de3
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6f3bd37f
Adding type registration yes_no -> org.hibernate.type.YesNoType@458031da
Adding type registration byte -> org.hibernate.type.ByteType@22a4ca4a
Adding type registration byte -> org.hibernate.type.ByteType@22a4ca4a
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@22a4ca4a
Adding type registration character -> org.hibernate.type.CharacterType@13f40d71
Adding type registration char -> org.hibernate.type.CharacterType@13f40d71
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@13f40d71
Adding type registration short -> org.hibernate.type.ShortType@656c5c3
Adding type registration short -> org.hibernate.type.ShortType@656c5c3
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@656c5c3
Adding type registration integer -> org.hibernate.type.IntegerType@307cf964
Adding type registration int -> org.hibernate.type.IntegerType@307cf964
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@307cf964
Adding type registration long -> org.hibernate.type.LongType@1c7f9861
Adding type registration long -> org.hibernate.type.LongType@1c7f9861
Adding type registration java.lang.Long -> org.hibernate.type.LongType@1c7f9861
Adding type registration float -> org.hibernate.type.FloatType@39449465
Adding type registration float -> org.hibernate.type.FloatType@39449465
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@39449465
Adding type registration double -> org.hibernate.type.DoubleType@6dd79214
Adding type registration double -> org.hibernate.type.DoubleType@6dd79214
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6dd79214
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4eb9ae4d
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4eb9ae4d
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@76a9a009
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@76a9a009
Adding type registration string -> org.hibernate.type.StringType@56cfe6be
Adding type registration java.lang.String -> org.hibernate.type.StringType@56cfe6be
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@781654f8
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65600fb3
Adding type registration url -> org.hibernate.type.UrlType@1a2e563e
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1a2e563e
Adding type registration Duration -> org.hibernate.type.DurationType@79add732
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@79add732
Adding type registration Instant -> org.hibernate.type.InstantType@700b9e6b
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@700b9e6b
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5fb5ad40
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5fb5ad40
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4d81e83a
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4d81e83a
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@35f7969d
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@35f7969d
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@736b21ee
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@736b21ee
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@787d1f9c
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@787d1f9c
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@36510e73
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@36510e73
Adding type registration date -> org.hibernate.type.DateType@4dd2ef54
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4dd2ef54
Adding type registration time -> org.hibernate.type.TimeType@74e497ae
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@74e497ae
Adding type registration timestamp -> org.hibernate.type.TimestampType@133aacbe
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@133aacbe
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@133aacbe
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68aec50
Adding type registration calendar -> org.hibernate.type.CalendarType@722531ab
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@722531ab
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@722531ab
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5882b202
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@73d62b5
Adding type registration locale -> org.hibernate.type.LocaleType@49b89425
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@49b89425
Adding type registration currency -> org.hibernate.type.CurrencyType@164d01ba
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@164d01ba
Adding type registration timezone -> org.hibernate.type.TimeZoneType@61a87366
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@61a87366
Adding type registration class -> org.hibernate.type.ClassType@2e362407
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2e362407
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5e9bf744
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5e9bf744
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54326e9
Adding type registration binary -> org.hibernate.type.BinaryType@2e4eda17
Adding type registration byte[] -> org.hibernate.type.BinaryType@2e4eda17
Adding type registration [B -> org.hibernate.type.BinaryType@2e4eda17
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11826398
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11826398
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11826398
Adding type registration row_version -> org.hibernate.type.RowVersionType@4f5c30b1
Adding type registration image -> org.hibernate.type.ImageType@5c234920
Adding type registration characters -> org.hibernate.type.CharArrayType@2a5abd3c
Adding type registration char[] -> org.hibernate.type.CharArrayType@2a5abd3c
Adding type registration [C -> org.hibernate.type.CharArrayType@2a5abd3c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@69b3886f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@69b3886f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@69b3886f
Adding type registration text -> org.hibernate.type.TextType@59e7564b
Adding type registration ntext -> org.hibernate.type.NTextType@633ddc0c
Adding type registration blob -> org.hibernate.type.BlobType@2a8f8555
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a8f8555
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4e8598d9
Adding type registration clob -> org.hibernate.type.ClobType@781dbe44
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@781dbe44
Adding type registration nclob -> org.hibernate.type.NClobType@3e38c472
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3e38c472
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7345f97d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@150d6eaf
Adding type registration serializable -> org.hibernate.type.SerializableType@57b9389f
Adding type registration object -> org.hibernate.type.ObjectType@6b5c134e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6b5c134e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1192c925
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@615b5480
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@24691c5
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7b91d9f
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6537ac
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3b218c74
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ddffa6c
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@42c54bad
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@14d298d6
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@14d298d6
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5e9bf744
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14eb96e9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@10b3ea72]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@440d2d64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=com.revature.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1a712f12, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@7f1ef916, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14eb96e9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6318ff9]
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@460df441
Registering SessionFactory: 37128391-c154-4b18-b086-8e150c7b9052 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
rolling back
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@9b367c8
Adding type registration boolean -> org.hibernate.type.BooleanType@9b367c8
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@9b367c8
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@99a8de3
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6f3bd37f
Adding type registration yes_no -> org.hibernate.type.YesNoType@458031da
Adding type registration byte -> org.hibernate.type.ByteType@22a4ca4a
Adding type registration byte -> org.hibernate.type.ByteType@22a4ca4a
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@22a4ca4a
Adding type registration character -> org.hibernate.type.CharacterType@13f40d71
Adding type registration char -> org.hibernate.type.CharacterType@13f40d71
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@13f40d71
Adding type registration short -> org.hibernate.type.ShortType@656c5c3
Adding type registration short -> org.hibernate.type.ShortType@656c5c3
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@656c5c3
Adding type registration integer -> org.hibernate.type.IntegerType@307cf964
Adding type registration int -> org.hibernate.type.IntegerType@307cf964
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@307cf964
Adding type registration long -> org.hibernate.type.LongType@1c7f9861
Adding type registration long -> org.hibernate.type.LongType@1c7f9861
Adding type registration java.lang.Long -> org.hibernate.type.LongType@1c7f9861
Adding type registration float -> org.hibernate.type.FloatType@39449465
Adding type registration float -> org.hibernate.type.FloatType@39449465
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@39449465
Adding type registration double -> org.hibernate.type.DoubleType@6dd79214
Adding type registration double -> org.hibernate.type.DoubleType@6dd79214
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6dd79214
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4eb9ae4d
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4eb9ae4d
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@76a9a009
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@76a9a009
Adding type registration string -> org.hibernate.type.StringType@56cfe6be
Adding type registration java.lang.String -> org.hibernate.type.StringType@56cfe6be
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@781654f8
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65600fb3
Adding type registration url -> org.hibernate.type.UrlType@1a2e563e
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1a2e563e
Adding type registration Duration -> org.hibernate.type.DurationType@79add732
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@79add732
Adding type registration Instant -> org.hibernate.type.InstantType@700b9e6b
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@700b9e6b
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5fb5ad40
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5fb5ad40
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4d81e83a
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4d81e83a
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@35f7969d
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@35f7969d
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@736b21ee
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@736b21ee
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@787d1f9c
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@787d1f9c
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@36510e73
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@36510e73
Adding type registration date -> org.hibernate.type.DateType@4dd2ef54
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4dd2ef54
Adding type registration time -> org.hibernate.type.TimeType@74e497ae
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@74e497ae
Adding type registration timestamp -> org.hibernate.type.TimestampType@133aacbe
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@133aacbe
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@133aacbe
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68aec50
Adding type registration calendar -> org.hibernate.type.CalendarType@722531ab
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@722531ab
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@722531ab
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5882b202
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@73d62b5
Adding type registration locale -> org.hibernate.type.LocaleType@49b89425
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@49b89425
Adding type registration currency -> org.hibernate.type.CurrencyType@164d01ba
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@164d01ba
Adding type registration timezone -> org.hibernate.type.TimeZoneType@61a87366
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@61a87366
Adding type registration class -> org.hibernate.type.ClassType@2e362407
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2e362407
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5e9bf744
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5e9bf744
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54326e9
Adding type registration binary -> org.hibernate.type.BinaryType@2e4eda17
Adding type registration byte[] -> org.hibernate.type.BinaryType@2e4eda17
Adding type registration [B -> org.hibernate.type.BinaryType@2e4eda17
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11826398
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11826398
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11826398
Adding type registration row_version -> org.hibernate.type.RowVersionType@4f5c30b1
Adding type registration image -> org.hibernate.type.ImageType@5c234920
Adding type registration characters -> org.hibernate.type.CharArrayType@2a5abd3c
Adding type registration char[] -> org.hibernate.type.CharArrayType@2a5abd3c
Adding type registration [C -> org.hibernate.type.CharArrayType@2a5abd3c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@69b3886f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@69b3886f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@69b3886f
Adding type registration text -> org.hibernate.type.TextType@59e7564b
Adding type registration ntext -> org.hibernate.type.NTextType@633ddc0c
Adding type registration blob -> org.hibernate.type.BlobType@2a8f8555
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a8f8555
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4e8598d9
Adding type registration clob -> org.hibernate.type.ClobType@781dbe44
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@781dbe44
Adding type registration nclob -> org.hibernate.type.NClobType@3e38c472
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3e38c472
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7345f97d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@150d6eaf
Adding type registration serializable -> org.hibernate.type.SerializableType@57b9389f
Adding type registration object -> org.hibernate.type.ObjectType@6b5c134e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6b5c134e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1192c925
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@615b5480
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@24691c5
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7b91d9f
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6537ac
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3b218c74
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ddffa6c
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@42c54bad
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@14d298d6
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@14d298d6
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5e9bf744
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14eb96e9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@10b3ea72]
Binding entity from annotated class: com.revature.model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity com.revature.model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: com.revature.model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity com.revature.model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: com.revature.model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity com.revature.model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
MetadataSourceProcessor property employeeID with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:employeeID]
building SimpleValue for employeeID
Building property employeeID
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeID, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for employeeID
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [employee_id] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7a689979, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=com.revature.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@164db8f0, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@7f1ef916, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14eb96e9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@103033fe]
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
Static SQL for entity: com.revature.model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1134a934]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Label)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Label, querySpaceUid=<gen:0>, path=com.revature.model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity com.revature.model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: com.revature.model.User
 Version select: select employee_id from user_table where employee_id =?
 Snapshot select: select user_.employee_id, user_.amount as amount2_2_ from user_table user_ where user_.employee_id=?
 Insert 0: insert into user_table (amount, employee_id) values (?, ?)
 Update 0: update user_table set amount=? where employee_id=?
 Delete 0: delete from user_table where employee_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44f5259a]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.User, querySpaceUid=<gen:0>, path=com.revature.model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_2_0_}

Static select for entity com.revature.model.User [NONE]: select user0_.employee_id as employee1_2_0_, user0_.amount as amount2_2_0_ from user_table user0_ where user0_.employee_id=?
Static SQL for entity: com.revature.model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c2063e0]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Task)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Task, querySpaceUid=<gen:0>, path=com.revature.model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity com.revature.model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
drop table if exists label_table cascade
drop table if exists task_table cascade
drop table if exists user_table cascade
drop sequence if exists hibernate_sequence
SQL Warning
org.postgresql.util.PSQLWarning: sequence "hibernate_sequence" does not exist, skipping
	at org.postgresql.core.v3.QueryExecutorImpl.receiveNoticeResponse(QueryExecutorImpl.java:2529)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2275)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:311)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:447)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:368)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:309)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:295)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:272)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:267)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:249)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:318)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:468)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:616)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85)
	at com.revature.Main.<clinit>(Main.java:18)
SQL Warning Code: 0, SQLState: 00000
sequence "hibernate_sequence" does not exist, skipping
create sequence hibernate_sequence start 1 increment 1
create table label_table (amount float8 not null, primary key (amount))
create table task_table (name int4 not null, primary key (name))
create table user_table (employee_id int4 not null, amount varchar(255), primary key (employee_id))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@30b5f974
Registering SessionFactory: f387bca2-1580-4b67-b39c-65f335b7d90c (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
select nextval ('hibernate_sequence')
Sequence value obtained: 1
HHH000387: ResultSet's statement was not registered
Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.revature.model.User{lastName=null, employeeID=1}
insert into user_table (amount, employee_id) values (?, ?)
committing
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@9b367c8
Adding type registration boolean -> org.hibernate.type.BooleanType@9b367c8
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@9b367c8
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@99a8de3
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6f3bd37f
Adding type registration yes_no -> org.hibernate.type.YesNoType@458031da
Adding type registration byte -> org.hibernate.type.ByteType@22a4ca4a
Adding type registration byte -> org.hibernate.type.ByteType@22a4ca4a
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@22a4ca4a
Adding type registration character -> org.hibernate.type.CharacterType@13f40d71
Adding type registration char -> org.hibernate.type.CharacterType@13f40d71
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@13f40d71
Adding type registration short -> org.hibernate.type.ShortType@656c5c3
Adding type registration short -> org.hibernate.type.ShortType@656c5c3
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@656c5c3
Adding type registration integer -> org.hibernate.type.IntegerType@307cf964
Adding type registration int -> org.hibernate.type.IntegerType@307cf964
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@307cf964
Adding type registration long -> org.hibernate.type.LongType@1c7f9861
Adding type registration long -> org.hibernate.type.LongType@1c7f9861
Adding type registration java.lang.Long -> org.hibernate.type.LongType@1c7f9861
Adding type registration float -> org.hibernate.type.FloatType@39449465
Adding type registration float -> org.hibernate.type.FloatType@39449465
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@39449465
Adding type registration double -> org.hibernate.type.DoubleType@6dd79214
Adding type registration double -> org.hibernate.type.DoubleType@6dd79214
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6dd79214
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4eb9ae4d
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4eb9ae4d
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@76a9a009
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@76a9a009
Adding type registration string -> org.hibernate.type.StringType@56cfe6be
Adding type registration java.lang.String -> org.hibernate.type.StringType@56cfe6be
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@781654f8
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65600fb3
Adding type registration url -> org.hibernate.type.UrlType@1a2e563e
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1a2e563e
Adding type registration Duration -> org.hibernate.type.DurationType@79add732
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@79add732
Adding type registration Instant -> org.hibernate.type.InstantType@700b9e6b
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@700b9e6b
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5fb5ad40
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5fb5ad40
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4d81e83a
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4d81e83a
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@35f7969d
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@35f7969d
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@736b21ee
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@736b21ee
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@787d1f9c
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@787d1f9c
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@36510e73
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@36510e73
Adding type registration date -> org.hibernate.type.DateType@4dd2ef54
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4dd2ef54
Adding type registration time -> org.hibernate.type.TimeType@74e497ae
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@74e497ae
Adding type registration timestamp -> org.hibernate.type.TimestampType@133aacbe
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@133aacbe
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@133aacbe
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68aec50
Adding type registration calendar -> org.hibernate.type.CalendarType@722531ab
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@722531ab
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@722531ab
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5882b202
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@73d62b5
Adding type registration locale -> org.hibernate.type.LocaleType@49b89425
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@49b89425
Adding type registration currency -> org.hibernate.type.CurrencyType@164d01ba
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@164d01ba
Adding type registration timezone -> org.hibernate.type.TimeZoneType@61a87366
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@61a87366
Adding type registration class -> org.hibernate.type.ClassType@2e362407
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2e362407
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5e9bf744
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5e9bf744
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54326e9
Adding type registration binary -> org.hibernate.type.BinaryType@2e4eda17
Adding type registration byte[] -> org.hibernate.type.BinaryType@2e4eda17
Adding type registration [B -> org.hibernate.type.BinaryType@2e4eda17
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11826398
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11826398
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11826398
Adding type registration row_version -> org.hibernate.type.RowVersionType@4f5c30b1
Adding type registration image -> org.hibernate.type.ImageType@5c234920
Adding type registration characters -> org.hibernate.type.CharArrayType@2a5abd3c
Adding type registration char[] -> org.hibernate.type.CharArrayType@2a5abd3c
Adding type registration [C -> org.hibernate.type.CharArrayType@2a5abd3c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@69b3886f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@69b3886f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@69b3886f
Adding type registration text -> org.hibernate.type.TextType@59e7564b
Adding type registration ntext -> org.hibernate.type.NTextType@633ddc0c
Adding type registration blob -> org.hibernate.type.BlobType@2a8f8555
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a8f8555
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4e8598d9
Adding type registration clob -> org.hibernate.type.ClobType@781dbe44
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@781dbe44
Adding type registration nclob -> org.hibernate.type.NClobType@3e38c472
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3e38c472
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7345f97d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@150d6eaf
Adding type registration serializable -> org.hibernate.type.SerializableType@57b9389f
Adding type registration object -> org.hibernate.type.ObjectType@6b5c134e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6b5c134e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1192c925
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@615b5480
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@24691c5
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7b91d9f
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6537ac
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3b218c74
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ddffa6c
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@42c54bad
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@618fb1
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@618fb1
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5e9bf744
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7057dbda] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@36349e29]
Binding entity from annotated class: com.revature.model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity com.revature.model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: com.revature.model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity com.revature.model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: com.revature.model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity com.revature.model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
MetadataSourceProcessor property employeeID with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:employeeID]
building SimpleValue for employeeID
Building property employeeID
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeID, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for employeeID
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [employee_id] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@52667676, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=com.revature.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@75559cd9, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@7f1ef916, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7057dbda] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@21202507]
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
Static SQL for entity: com.revature.model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f08e6d3]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Label)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Label, querySpaceUid=<gen:0>, path=com.revature.model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity com.revature.model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: com.revature.model.User
 Version select: select employee_id from user_table where employee_id =?
 Snapshot select: select user_.employee_id, user_.amount as amount2_2_ from user_table user_ where user_.employee_id=?
 Insert 0: insert into user_table (amount, employee_id) values (?, ?)
 Update 0: update user_table set amount=? where employee_id=?
 Delete 0: delete from user_table where employee_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb7fc38]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.User, querySpaceUid=<gen:0>, path=com.revature.model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_2_0_}

Static select for entity com.revature.model.User [NONE]: select user0_.employee_id as employee1_2_0_, user0_.amount as amount2_2_0_ from user_table user0_ where user0_.employee_id=?
Static SQL for entity: com.revature.model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17e31657]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Task)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Task, querySpaceUid=<gen:0>, path=com.revature.model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity com.revature.model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
drop table if exists label_table cascade
drop table if exists task_table cascade
drop table if exists user_table cascade
drop sequence if exists hibernate_sequence
create sequence hibernate_sequence start 1 increment 1
create table label_table (amount float8 not null, primary key (amount))
create table task_table (name int4 not null, primary key (name))
create table user_table (employee_id int4 not null, amount varchar(255), primary key (employee_id))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@175c4ae5
Registering SessionFactory: e1c2dc6e-16b7-43ec-994d-8bd6fb62a768 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
select nextval ('hibernate_sequence')
Sequence value obtained: 1
HHH000387: ResultSet's statement was not registered
Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.revature.model.User{lastName=null, employeeID=1}
insert into user_table (amount, employee_id) values (?, ?)
committing
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@ca7e37f
Adding type registration boolean -> org.hibernate.type.BooleanType@ca7e37f
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ca7e37f
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3a6e9856
Adding type registration true_false -> org.hibernate.type.TrueFalseType@1ecf0ac6
Adding type registration yes_no -> org.hibernate.type.YesNoType@27ab206
Adding type registration byte -> org.hibernate.type.ByteType@33e3bd2e
Adding type registration byte -> org.hibernate.type.ByteType@33e3bd2e
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@33e3bd2e
Adding type registration character -> org.hibernate.type.CharacterType@34f7b44f
Adding type registration char -> org.hibernate.type.CharacterType@34f7b44f
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@34f7b44f
Adding type registration short -> org.hibernate.type.ShortType@242ff747
Adding type registration short -> org.hibernate.type.ShortType@242ff747
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@242ff747
Adding type registration integer -> org.hibernate.type.IntegerType@7d50f2a8
Adding type registration int -> org.hibernate.type.IntegerType@7d50f2a8
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7d50f2a8
Adding type registration long -> org.hibernate.type.LongType@1b7554d4
Adding type registration long -> org.hibernate.type.LongType@1b7554d4
Adding type registration java.lang.Long -> org.hibernate.type.LongType@1b7554d4
Adding type registration float -> org.hibernate.type.FloatType@53125718
Adding type registration float -> org.hibernate.type.FloatType@53125718
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@53125718
Adding type registration double -> org.hibernate.type.DoubleType@47058864
Adding type registration double -> org.hibernate.type.DoubleType@47058864
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@47058864
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4b3a01d8
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4b3a01d8
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4faf1f4
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4faf1f4
Adding type registration string -> org.hibernate.type.StringType@2a99ca99
Adding type registration java.lang.String -> org.hibernate.type.StringType@2a99ca99
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3bbb8c16
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7cd5fcf4
Adding type registration url -> org.hibernate.type.UrlType@2f8c4fae
Adding type registration java.net.URL -> org.hibernate.type.UrlType@2f8c4fae
Adding type registration Duration -> org.hibernate.type.DurationType@76e4212
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@76e4212
Adding type registration Instant -> org.hibernate.type.InstantType@798cf6d2
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@798cf6d2
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2315052d
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2315052d
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@204d9edf
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@204d9edf
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4b93dd6a
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4b93dd6a
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1b46392c
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1b46392c
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5c59a0f7
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5c59a0f7
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@65bd19bf
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@65bd19bf
Adding type registration date -> org.hibernate.type.DateType@5bf4764d
Adding type registration java.sql.Date -> org.hibernate.type.DateType@5bf4764d
Adding type registration time -> org.hibernate.type.TimeType@718989fa
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@718989fa
Adding type registration timestamp -> org.hibernate.type.TimestampType@19002b34
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@19002b34
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@19002b34
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@427308f8
Adding type registration calendar -> org.hibernate.type.CalendarType@3db6dd52
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3db6dd52
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3db6dd52
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@65f3e805
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@63917fe1
Adding type registration locale -> org.hibernate.type.LocaleType@4a1dda83
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4a1dda83
Adding type registration currency -> org.hibernate.type.CurrencyType@14457a95
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@14457a95
Adding type registration timezone -> org.hibernate.type.TimeZoneType@53feeac9
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@53feeac9
Adding type registration class -> org.hibernate.type.ClassType@8f2e3e6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@8f2e3e6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4ae8fb2a
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4ae8fb2a
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3a109ff7
Adding type registration binary -> org.hibernate.type.BinaryType@799f354a
Adding type registration byte[] -> org.hibernate.type.BinaryType@799f354a
Adding type registration [B -> org.hibernate.type.BinaryType@799f354a
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1894fa9f
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1894fa9f
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1894fa9f
Adding type registration row_version -> org.hibernate.type.RowVersionType@7caf1e5
Adding type registration image -> org.hibernate.type.ImageType@2eb1c615
Adding type registration characters -> org.hibernate.type.CharArrayType@7bf018dd
Adding type registration char[] -> org.hibernate.type.CharArrayType@7bf018dd
Adding type registration [C -> org.hibernate.type.CharArrayType@7bf018dd
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1216eb3f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1216eb3f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1216eb3f
Adding type registration text -> org.hibernate.type.TextType@76a6f045
Adding type registration ntext -> org.hibernate.type.NTextType@58c42c8c
Adding type registration blob -> org.hibernate.type.BlobType@54489296
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@54489296
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e26a3df
Adding type registration clob -> org.hibernate.type.ClobType@3a2546d6
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3a2546d6
Adding type registration nclob -> org.hibernate.type.NClobType@14b8a751
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@14b8a751
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6b832551
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@55421b8d
Adding type registration serializable -> org.hibernate.type.SerializableType@727986ad
Adding type registration object -> org.hibernate.type.ObjectType@6bcdd6e4
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bcdd6e4
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6537ac
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3b218c74
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@ddffa6c
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@42c54bad
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6bb4cc0e
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5cc1bf20
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2e3f324e
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@46cf8c07
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4cb773c5
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4cb773c5
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4ae8fb2a
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14293540] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6fe243a]
Binding entity from annotated class: com.revature.model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity com.revature.model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: com.revature.model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity com.revature.model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: com.revature.model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity com.revature.model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
MetadataSourceProcessor property employeeID with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:employeeID]
building SimpleValue for employeeID
Building property employeeID
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeID, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for employeeID
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [employee_id] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@626ff077, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=com.revature.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3b850bb7, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@17dd671f, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14293540] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2e27325d]
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
Static SQL for entity: com.revature.model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70736b19]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Label)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Label, querySpaceUid=<gen:0>, path=com.revature.model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity com.revature.model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: com.revature.model.User
 Version select: select employee_id from user_table where employee_id =?
 Snapshot select: select user_.employee_id, user_.amount as amount2_2_ from user_table user_ where user_.employee_id=?
 Insert 0: insert into user_table (amount, employee_id) values (?, ?)
 Update 0: update user_table set amount=? where employee_id=?
 Delete 0: delete from user_table where employee_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a8e35d1]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.User, querySpaceUid=<gen:0>, path=com.revature.model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_2_0_}

Static select for entity com.revature.model.User [NONE]: select user0_.employee_id as employee1_2_0_, user0_.amount as amount2_2_0_ from user_table user0_ where user0_.employee_id=?
Static SQL for entity: com.revature.model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1aade3c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Task)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Task, querySpaceUid=<gen:0>, path=com.revature.model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity com.revature.model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
drop table if exists label_table cascade
drop table if exists task_table cascade
drop table if exists user_table cascade
drop sequence if exists hibernate_sequence
create sequence hibernate_sequence start 1 increment 1
create table label_table (amount float8 not null, primary key (amount))
create table task_table (name int4 not null, primary key (name))
create table user_table (employee_id int4 not null, amount varchar(255), primary key (employee_id))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@79e3f444
Registering SessionFactory: db8d0c01-464f-4230-9977-f33da1d71792 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
select nextval ('hibernate_sequence')
Sequence value obtained: 1
HHH000387: ResultSet's statement was not registered
Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.revature.model.User{lastName=null, employeeID=1}
insert into user_table (amount, employee_id) values (?, ?)
committing
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@64c8fcfb
Adding type registration boolean -> org.hibernate.type.BooleanType@64c8fcfb
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@64c8fcfb
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7afe0e67
Adding type registration true_false -> org.hibernate.type.TrueFalseType@fe42a09
Adding type registration yes_no -> org.hibernate.type.YesNoType@37d0d373
Adding type registration byte -> org.hibernate.type.ByteType@64bba0eb
Adding type registration byte -> org.hibernate.type.ByteType@64bba0eb
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@64bba0eb
Adding type registration character -> org.hibernate.type.CharacterType@43588265
Adding type registration char -> org.hibernate.type.CharacterType@43588265
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@43588265
Adding type registration short -> org.hibernate.type.ShortType@61ab6521
Adding type registration short -> org.hibernate.type.ShortType@61ab6521
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@61ab6521
Adding type registration integer -> org.hibernate.type.IntegerType@54567b05
Adding type registration int -> org.hibernate.type.IntegerType@54567b05
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@54567b05
Adding type registration long -> org.hibernate.type.LongType@dd737ea
Adding type registration long -> org.hibernate.type.LongType@dd737ea
Adding type registration java.lang.Long -> org.hibernate.type.LongType@dd737ea
Adding type registration float -> org.hibernate.type.FloatType@6fef75c6
Adding type registration float -> org.hibernate.type.FloatType@6fef75c6
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6fef75c6
Adding type registration double -> org.hibernate.type.DoubleType@3d8d970e
Adding type registration double -> org.hibernate.type.DoubleType@3d8d970e
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3d8d970e
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6c96403e
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6c96403e
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6ce15112
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6ce15112
Adding type registration string -> org.hibernate.type.StringType@4d4df0f4
Adding type registration java.lang.String -> org.hibernate.type.StringType@4d4df0f4
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@892af0e
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@37b1149b
Adding type registration url -> org.hibernate.type.UrlType@bb6f3f7
Adding type registration java.net.URL -> org.hibernate.type.UrlType@bb6f3f7
Adding type registration Duration -> org.hibernate.type.DurationType@4d25f816
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4d25f816
Adding type registration Instant -> org.hibernate.type.InstantType@223967ea
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@223967ea
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@719c1faf
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@719c1faf
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2262f0d8
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2262f0d8
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@56e5c8fb
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@56e5c8fb
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@72b40f87
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@72b40f87
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@349f0ca4
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@349f0ca4
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@351e89fc
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@351e89fc
Adding type registration date -> org.hibernate.type.DateType@3e2d44f3
Adding type registration java.sql.Date -> org.hibernate.type.DateType@3e2d44f3
Adding type registration time -> org.hibernate.type.TimeType@47f2c722
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@47f2c722
Adding type registration timestamp -> org.hibernate.type.TimestampType@29b5533
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@29b5533
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@29b5533
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2ff498b0
Adding type registration calendar -> org.hibernate.type.CalendarType@141aba65
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@141aba65
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@141aba65
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@45e7bb79
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@506aa618
Adding type registration locale -> org.hibernate.type.LocaleType@be6d228
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@be6d228
Adding type registration currency -> org.hibernate.type.CurrencyType@3db1ce78
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3db1ce78
Adding type registration timezone -> org.hibernate.type.TimeZoneType@17884d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@17884d
Adding type registration class -> org.hibernate.type.ClassType@c262f2f
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@c262f2f
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@40f1aa95
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@40f1aa95
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@19dac2d6
Adding type registration binary -> org.hibernate.type.BinaryType@4276ad40
Adding type registration byte[] -> org.hibernate.type.BinaryType@4276ad40
Adding type registration [B -> org.hibernate.type.BinaryType@4276ad40
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@701d2b59
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@701d2b59
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@701d2b59
Adding type registration row_version -> org.hibernate.type.RowVersionType@30517a57
Adding type registration image -> org.hibernate.type.ImageType@721fc2e3
Adding type registration characters -> org.hibernate.type.CharArrayType@48cf8414
Adding type registration char[] -> org.hibernate.type.CharArrayType@48cf8414
Adding type registration [C -> org.hibernate.type.CharArrayType@48cf8414
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16e195cf
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16e195cf
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16e195cf
Adding type registration text -> org.hibernate.type.TextType@49631cfb
Adding type registration ntext -> org.hibernate.type.NTextType@3d033453
Adding type registration blob -> org.hibernate.type.BlobType@4abbe41c
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4abbe41c
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3ac0a14b
Adding type registration clob -> org.hibernate.type.ClobType@1d226f27
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1d226f27
Adding type registration nclob -> org.hibernate.type.NClobType@1669931a
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1669931a
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2499b971
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5a899811
Adding type registration serializable -> org.hibernate.type.SerializableType@4a9869a8
Adding type registration object -> org.hibernate.type.ObjectType@176333ee
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@176333ee
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1da745a2
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4597e6e3
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@41ece227
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5e3d2765
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7910f355
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@34ab26a
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@259195fe
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@12209826
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1ba3c03d
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@1ba3c03d
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@40f1aa95
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@402676e3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1a4ae53d]
Binding entity from annotated class: com.revature.model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity com.revature.model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: com.revature.model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity com.revature.model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: com.revature.model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity com.revature.model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
MetadataSourceProcessor property employeeID with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:employeeID]
building SimpleValue for employeeID
Building property employeeID
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeID, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for employeeID
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [employee_id] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@c7b100b, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=com.revature.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@99774ec, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@49469ffa, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@402676e3] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@372e972d]
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
Static SQL for entity: com.revature.model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ba32242]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Label)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Label, querySpaceUid=<gen:0>, path=com.revature.model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity com.revature.model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: com.revature.model.User
 Version select: select employee_id from user_table where employee_id =?
 Snapshot select: select user_.employee_id, user_.amount as amount2_2_ from user_table user_ where user_.employee_id=?
 Insert 0: insert into user_table (amount, employee_id) values (?, ?)
 Update 0: update user_table set amount=? where employee_id=?
 Delete 0: delete from user_table where employee_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31e5d408]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.User, querySpaceUid=<gen:0>, path=com.revature.model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_2_0_}

Static select for entity com.revature.model.User [NONE]: select user0_.employee_id as employee1_2_0_, user0_.amount as amount2_2_0_ from user_table user0_ where user0_.employee_id=?
Static SQL for entity: com.revature.model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@638b05fb]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Task)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Task, querySpaceUid=<gen:0>, path=com.revature.model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity com.revature.model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
drop table if exists label_table cascade
drop table if exists task_table cascade
drop table if exists user_table cascade
drop sequence if exists hibernate_sequence
create sequence hibernate_sequence start 1 increment 1
create table label_table (amount float8 not null, primary key (amount))
create table task_table (name int4 not null, primary key (name))
create table user_table (employee_id int4 not null, amount varchar(255), primary key (employee_id))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@57596d71
Registering SessionFactory: f95a3cd7-567f-4333-86d3-0299afbfcc13 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2bb717d7
Adding type registration true_false -> org.hibernate.type.TrueFalseType@3f357c9d
Adding type registration yes_no -> org.hibernate.type.YesNoType@25a290ee
Adding type registration byte -> org.hibernate.type.ByteType@632241f5
Adding type registration byte -> org.hibernate.type.ByteType@632241f5
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@632241f5
Adding type registration character -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration char -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration short -> org.hibernate.type.ShortType@643f6179
Adding type registration short -> org.hibernate.type.ShortType@643f6179
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@643f6179
Adding type registration integer -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration int -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration long -> org.hibernate.type.LongType@bfb93cf
Adding type registration long -> org.hibernate.type.LongType@bfb93cf
Adding type registration java.lang.Long -> org.hibernate.type.LongType@bfb93cf
Adding type registration float -> org.hibernate.type.FloatType@1247c72e
Adding type registration float -> org.hibernate.type.FloatType@1247c72e
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1247c72e
Adding type registration double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@68d6f48e
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@68d6f48e
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d0b814d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d0b814d
Adding type registration string -> org.hibernate.type.StringType@d969452
Adding type registration java.lang.String -> org.hibernate.type.StringType@d969452
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@14ed7ddf
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@356b6b5d
Adding type registration url -> org.hibernate.type.UrlType@3d0352
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3d0352
Adding type registration Duration -> org.hibernate.type.DurationType@2fee69a1
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2fee69a1
Adding type registration Instant -> org.hibernate.type.InstantType@734fbae3
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@734fbae3
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@559d19c
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@559d19c
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5c9e8a67
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5c9e8a67
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@451816fd
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@451816fd
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18d30e7
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18d30e7
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@41bb1f09
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@41bb1f09
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@baa227e
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@baa227e
Adding type registration date -> org.hibernate.type.DateType@2d74cbbd
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d74cbbd
Adding type registration time -> org.hibernate.type.TimeType@6598caab
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6598caab
Adding type registration timestamp -> org.hibernate.type.TimestampType@11abd6c
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@11abd6c
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@11abd6c
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@46ab4efc
Adding type registration calendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2ef041bb
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1b47b7f5
Adding type registration locale -> org.hibernate.type.LocaleType@1a17dd6f
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a17dd6f
Adding type registration currency -> org.hibernate.type.CurrencyType@3a16984c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3a16984c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@48c5698
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48c5698
Adding type registration class -> org.hibernate.type.ClassType@66298fe9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@66298fe9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@56835f2f
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@56835f2f
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15e08615
Adding type registration binary -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration byte[] -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration [B -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration row_version -> org.hibernate.type.RowVersionType@45d7495e
Adding type registration image -> org.hibernate.type.ImageType@3df77dfa
Adding type registration characters -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration char[] -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration [C -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration text -> org.hibernate.type.TextType@6d17914a
Adding type registration ntext -> org.hibernate.type.NTextType@612af486
Adding type registration blob -> org.hibernate.type.BlobType@5ab7ac02
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5ab7ac02
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1f45db49
Adding type registration clob -> org.hibernate.type.ClobType@30cafd13
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@30cafd13
Adding type registration nclob -> org.hibernate.type.NClobType@1b475663
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1b475663
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@699e0bf0
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58e03769
Adding type registration serializable -> org.hibernate.type.SerializableType@f849027
Adding type registration object -> org.hibernate.type.ObjectType@9c0d0bd
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@9c0d0bd
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@30d5e37c
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1da745a2
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4597e6e3
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@41ece227
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5e3d2765
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7910f355
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@34ab26a
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@259195fe
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@37a0fc8c
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@37a0fc8c
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@56835f2f
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4023d23f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@402676e3]
Binding entity from annotated class: com.revature.model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity com.revature.model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: com.revature.model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity com.revature.model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: com.revature.model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity com.revature.model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
MetadataSourceProcessor property employeeID with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:employeeID]
building SimpleValue for employeeID
Building property employeeID
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeID, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for employeeID
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [employee_id] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@386ea60f, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=com.revature.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c7b100b, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@58af5076, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4023d23f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@28ffa527]
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
Static SQL for entity: com.revature.model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bd67cf9]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Label)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Label, querySpaceUid=<gen:0>, path=com.revature.model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity com.revature.model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: com.revature.model.User
 Version select: select employee_id from user_table where employee_id =?
 Snapshot select: select user_.employee_id, user_.amount as amount2_2_ from user_table user_ where user_.employee_id=?
 Insert 0: insert into user_table (amount, employee_id) values (?, ?)
 Update 0: update user_table set amount=? where employee_id=?
 Delete 0: delete from user_table where employee_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@744c16fb]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.User, querySpaceUid=<gen:0>, path=com.revature.model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_2_0_}

Static select for entity com.revature.model.User [NONE]: select user0_.employee_id as employee1_2_0_, user0_.amount as amount2_2_0_ from user_table user0_ where user0_.employee_id=?
Static SQL for entity: com.revature.model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7aaf0f0a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Task)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Task, querySpaceUid=<gen:0>, path=com.revature.model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity com.revature.model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
drop table if exists label_table cascade
drop table if exists task_table cascade
drop table if exists user_table cascade
drop sequence if exists hibernate_sequence
create sequence hibernate_sequence start 1 increment 1
create table label_table (amount float8 not null, primary key (amount))
create table task_table (name int4 not null, primary key (name))
create table user_table (employee_id int4 not null, amount varchar(255), primary key (employee_id))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4b1ef6a
Registering SessionFactory: 83c7e54f-5f96-4bc2-9d4e-5b3193a762ac (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2bb717d7
Adding type registration true_false -> org.hibernate.type.TrueFalseType@3f357c9d
Adding type registration yes_no -> org.hibernate.type.YesNoType@25a290ee
Adding type registration byte -> org.hibernate.type.ByteType@632241f5
Adding type registration byte -> org.hibernate.type.ByteType@632241f5
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@632241f5
Adding type registration character -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration char -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration short -> org.hibernate.type.ShortType@643f6179
Adding type registration short -> org.hibernate.type.ShortType@643f6179
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@643f6179
Adding type registration integer -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration int -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration long -> org.hibernate.type.LongType@bfb93cf
Adding type registration long -> org.hibernate.type.LongType@bfb93cf
Adding type registration java.lang.Long -> org.hibernate.type.LongType@bfb93cf
Adding type registration float -> org.hibernate.type.FloatType@1247c72e
Adding type registration float -> org.hibernate.type.FloatType@1247c72e
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1247c72e
Adding type registration double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@68d6f48e
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@68d6f48e
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d0b814d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d0b814d
Adding type registration string -> org.hibernate.type.StringType@d969452
Adding type registration java.lang.String -> org.hibernate.type.StringType@d969452
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@14ed7ddf
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@356b6b5d
Adding type registration url -> org.hibernate.type.UrlType@3d0352
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3d0352
Adding type registration Duration -> org.hibernate.type.DurationType@2fee69a1
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2fee69a1
Adding type registration Instant -> org.hibernate.type.InstantType@734fbae3
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@734fbae3
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@559d19c
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@559d19c
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5c9e8a67
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5c9e8a67
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@451816fd
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@451816fd
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18d30e7
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18d30e7
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@41bb1f09
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@41bb1f09
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@baa227e
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@baa227e
Adding type registration date -> org.hibernate.type.DateType@2d74cbbd
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d74cbbd
Adding type registration time -> org.hibernate.type.TimeType@6598caab
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6598caab
Adding type registration timestamp -> org.hibernate.type.TimestampType@11abd6c
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@11abd6c
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@11abd6c
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@46ab4efc
Adding type registration calendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2ef041bb
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1b47b7f5
Adding type registration locale -> org.hibernate.type.LocaleType@1a17dd6f
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a17dd6f
Adding type registration currency -> org.hibernate.type.CurrencyType@3a16984c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3a16984c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@48c5698
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48c5698
Adding type registration class -> org.hibernate.type.ClassType@66298fe9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@66298fe9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@56835f2f
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@56835f2f
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15e08615
Adding type registration binary -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration byte[] -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration [B -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration row_version -> org.hibernate.type.RowVersionType@45d7495e
Adding type registration image -> org.hibernate.type.ImageType@3df77dfa
Adding type registration characters -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration char[] -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration [C -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration text -> org.hibernate.type.TextType@6d17914a
Adding type registration ntext -> org.hibernate.type.NTextType@612af486
Adding type registration blob -> org.hibernate.type.BlobType@5ab7ac02
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5ab7ac02
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1f45db49
Adding type registration clob -> org.hibernate.type.ClobType@30cafd13
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@30cafd13
Adding type registration nclob -> org.hibernate.type.NClobType@1b475663
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1b475663
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@699e0bf0
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58e03769
Adding type registration serializable -> org.hibernate.type.SerializableType@f849027
Adding type registration object -> org.hibernate.type.ObjectType@9c0d0bd
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@9c0d0bd
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@30d5e37c
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1da745a2
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4597e6e3
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@41ece227
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5e3d2765
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7910f355
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@34ab26a
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@259195fe
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@37a0fc8c
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@37a0fc8c
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@56835f2f
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4023d23f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@402676e3]
Binding entity from annotated class: com.revature.model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity com.revature.model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: com.revature.model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity com.revature.model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: com.revature.model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity com.revature.model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
MetadataSourceProcessor property employeeID with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:employeeID]
building SimpleValue for employeeID
Building property employeeID
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeID, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for employeeID
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [employee_id] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@386ea60f, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=com.revature.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c7b100b, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@58af5076, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4023d23f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@28ffa527]
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
Static SQL for entity: com.revature.model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bd67cf9]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Label)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Label, querySpaceUid=<gen:0>, path=com.revature.model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity com.revature.model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: com.revature.model.User
 Version select: select employee_id from user_table where employee_id =?
 Snapshot select: select user_.employee_id, user_.amount as amount2_2_ from user_table user_ where user_.employee_id=?
 Insert 0: insert into user_table (amount, employee_id) values (?, ?)
 Update 0: update user_table set amount=? where employee_id=?
 Delete 0: delete from user_table where employee_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@744c16fb]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.User, querySpaceUid=<gen:0>, path=com.revature.model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_2_0_}

Static select for entity com.revature.model.User [NONE]: select user0_.employee_id as employee1_2_0_, user0_.amount as amount2_2_0_ from user_table user0_ where user0_.employee_id=?
Static SQL for entity: com.revature.model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7aaf0f0a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Task)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Task, querySpaceUid=<gen:0>, path=com.revature.model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity com.revature.model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
drop table if exists label_table cascade
drop table if exists task_table cascade
drop table if exists user_table cascade
drop sequence if exists hibernate_sequence
create sequence hibernate_sequence start 1 increment 1
create table label_table (amount float8 not null, primary key (amount))
create table task_table (name int4 not null, primary key (name))
create table user_table (employee_id int4 not null, amount varchar(255), primary key (employee_id))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4b1ef6a
Registering SessionFactory: 25a660e8-7e64-46af-84c6-f90d05161956 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
select nextval ('hibernate_sequence')
Sequence value obtained: 1
HHH000387: ResultSet's statement was not registered
Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.revature.model.User{lastName=null, employeeID=1}
insert into user_table (amount, employee_id) values (?, ?)
committing
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2bb717d7
Adding type registration true_false -> org.hibernate.type.TrueFalseType@3f357c9d
Adding type registration yes_no -> org.hibernate.type.YesNoType@25a290ee
Adding type registration byte -> org.hibernate.type.ByteType@632241f5
Adding type registration byte -> org.hibernate.type.ByteType@632241f5
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@632241f5
Adding type registration character -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration char -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration short -> org.hibernate.type.ShortType@643f6179
Adding type registration short -> org.hibernate.type.ShortType@643f6179
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@643f6179
Adding type registration integer -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration int -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration long -> org.hibernate.type.LongType@bfb93cf
Adding type registration long -> org.hibernate.type.LongType@bfb93cf
Adding type registration java.lang.Long -> org.hibernate.type.LongType@bfb93cf
Adding type registration float -> org.hibernate.type.FloatType@1247c72e
Adding type registration float -> org.hibernate.type.FloatType@1247c72e
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1247c72e
Adding type registration double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@68d6f48e
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@68d6f48e
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d0b814d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d0b814d
Adding type registration string -> org.hibernate.type.StringType@d969452
Adding type registration java.lang.String -> org.hibernate.type.StringType@d969452
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@14ed7ddf
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@356b6b5d
Adding type registration url -> org.hibernate.type.UrlType@3d0352
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3d0352
Adding type registration Duration -> org.hibernate.type.DurationType@2fee69a1
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2fee69a1
Adding type registration Instant -> org.hibernate.type.InstantType@734fbae3
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@734fbae3
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@559d19c
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@559d19c
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5c9e8a67
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5c9e8a67
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@451816fd
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@451816fd
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18d30e7
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18d30e7
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@41bb1f09
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@41bb1f09
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@baa227e
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@baa227e
Adding type registration date -> org.hibernate.type.DateType@2d74cbbd
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d74cbbd
Adding type registration time -> org.hibernate.type.TimeType@6598caab
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6598caab
Adding type registration timestamp -> org.hibernate.type.TimestampType@11abd6c
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@11abd6c
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@11abd6c
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@46ab4efc
Adding type registration calendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2ef041bb
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1b47b7f5
Adding type registration locale -> org.hibernate.type.LocaleType@1a17dd6f
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a17dd6f
Adding type registration currency -> org.hibernate.type.CurrencyType@3a16984c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3a16984c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@48c5698
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48c5698
Adding type registration class -> org.hibernate.type.ClassType@66298fe9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@66298fe9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@56835f2f
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@56835f2f
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15e08615
Adding type registration binary -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration byte[] -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration [B -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration row_version -> org.hibernate.type.RowVersionType@45d7495e
Adding type registration image -> org.hibernate.type.ImageType@3df77dfa
Adding type registration characters -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration char[] -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration [C -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration text -> org.hibernate.type.TextType@6d17914a
Adding type registration ntext -> org.hibernate.type.NTextType@612af486
Adding type registration blob -> org.hibernate.type.BlobType@5ab7ac02
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5ab7ac02
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1f45db49
Adding type registration clob -> org.hibernate.type.ClobType@30cafd13
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@30cafd13
Adding type registration nclob -> org.hibernate.type.NClobType@1b475663
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1b475663
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@699e0bf0
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58e03769
Adding type registration serializable -> org.hibernate.type.SerializableType@f849027
Adding type registration object -> org.hibernate.type.ObjectType@9c0d0bd
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@9c0d0bd
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@30d5e37c
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1da745a2
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4597e6e3
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@41ece227
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5e3d2765
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7910f355
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@34ab26a
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@259195fe
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@37a0fc8c
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@37a0fc8c
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@56835f2f
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4023d23f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@402676e3]
Binding entity from annotated class: com.revature.model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity com.revature.model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: com.revature.model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity com.revature.model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: com.revature.model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity com.revature.model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
MetadataSourceProcessor property employeeID with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:employeeID]
building SimpleValue for employeeID
Building property employeeID
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeID, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for employeeID
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [employee_id] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@386ea60f, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=com.revature.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c7b100b, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@58af5076, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4023d23f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@28ffa527]
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
Static SQL for entity: com.revature.model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bd67cf9]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Label)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Label, querySpaceUid=<gen:0>, path=com.revature.model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity com.revature.model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: com.revature.model.User
 Version select: select employee_id from user_table where employee_id =?
 Snapshot select: select user_.employee_id, user_.amount as amount2_2_ from user_table user_ where user_.employee_id=?
 Insert 0: insert into user_table (amount, employee_id) values (?, ?)
 Update 0: update user_table set amount=? where employee_id=?
 Delete 0: delete from user_table where employee_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@744c16fb]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.User, querySpaceUid=<gen:0>, path=com.revature.model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_2_0_}

Static select for entity com.revature.model.User [NONE]: select user0_.employee_id as employee1_2_0_, user0_.amount as amount2_2_0_ from user_table user0_ where user0_.employee_id=?
Static SQL for entity: com.revature.model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7aaf0f0a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Task)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Task, querySpaceUid=<gen:0>, path=com.revature.model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity com.revature.model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
drop table if exists label_table cascade
drop table if exists task_table cascade
drop table if exists user_table cascade
drop sequence if exists hibernate_sequence
create sequence hibernate_sequence start 1 increment 1
create table label_table (amount float8 not null, primary key (amount))
create table task_table (name int4 not null, primary key (name))
create table user_table (employee_id int4 not null, amount varchar(255), primary key (employee_id))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4b1ef6a
Registering SessionFactory: c47f9ac1-52e8-497a-9333-f76b63f7eeba (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
select nextval ('hibernate_sequence')
Sequence value obtained: 1
HHH000387: ResultSet's statement was not registered
Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.revature.model.User{lastName=null, employeeID=1}
insert into user_table (amount, employee_id) values (?, ?)
committing
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2bb717d7
Adding type registration true_false -> org.hibernate.type.TrueFalseType@3f357c9d
Adding type registration yes_no -> org.hibernate.type.YesNoType@25a290ee
Adding type registration byte -> org.hibernate.type.ByteType@632241f5
Adding type registration byte -> org.hibernate.type.ByteType@632241f5
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@632241f5
Adding type registration character -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration char -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration short -> org.hibernate.type.ShortType@643f6179
Adding type registration short -> org.hibernate.type.ShortType@643f6179
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@643f6179
Adding type registration integer -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration int -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration long -> org.hibernate.type.LongType@bfb93cf
Adding type registration long -> org.hibernate.type.LongType@bfb93cf
Adding type registration java.lang.Long -> org.hibernate.type.LongType@bfb93cf
Adding type registration float -> org.hibernate.type.FloatType@1247c72e
Adding type registration float -> org.hibernate.type.FloatType@1247c72e
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1247c72e
Adding type registration double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@68d6f48e
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@68d6f48e
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d0b814d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d0b814d
Adding type registration string -> org.hibernate.type.StringType@d969452
Adding type registration java.lang.String -> org.hibernate.type.StringType@d969452
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@14ed7ddf
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@356b6b5d
Adding type registration url -> org.hibernate.type.UrlType@3d0352
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3d0352
Adding type registration Duration -> org.hibernate.type.DurationType@2fee69a1
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2fee69a1
Adding type registration Instant -> org.hibernate.type.InstantType@734fbae3
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@734fbae3
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@559d19c
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@559d19c
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5c9e8a67
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5c9e8a67
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@451816fd
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@451816fd
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18d30e7
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18d30e7
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@41bb1f09
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@41bb1f09
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@baa227e
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@baa227e
Adding type registration date -> org.hibernate.type.DateType@2d74cbbd
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d74cbbd
Adding type registration time -> org.hibernate.type.TimeType@6598caab
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6598caab
Adding type registration timestamp -> org.hibernate.type.TimestampType@11abd6c
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@11abd6c
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@11abd6c
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@46ab4efc
Adding type registration calendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2ef041bb
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1b47b7f5
Adding type registration locale -> org.hibernate.type.LocaleType@1a17dd6f
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a17dd6f
Adding type registration currency -> org.hibernate.type.CurrencyType@3a16984c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3a16984c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@48c5698
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48c5698
Adding type registration class -> org.hibernate.type.ClassType@66298fe9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@66298fe9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@56835f2f
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@56835f2f
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15e08615
Adding type registration binary -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration byte[] -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration [B -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration row_version -> org.hibernate.type.RowVersionType@45d7495e
Adding type registration image -> org.hibernate.type.ImageType@3df77dfa
Adding type registration characters -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration char[] -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration [C -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration text -> org.hibernate.type.TextType@6d17914a
Adding type registration ntext -> org.hibernate.type.NTextType@612af486
Adding type registration blob -> org.hibernate.type.BlobType@5ab7ac02
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5ab7ac02
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1f45db49
Adding type registration clob -> org.hibernate.type.ClobType@30cafd13
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@30cafd13
Adding type registration nclob -> org.hibernate.type.NClobType@1b475663
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1b475663
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@699e0bf0
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58e03769
Adding type registration serializable -> org.hibernate.type.SerializableType@f849027
Adding type registration object -> org.hibernate.type.ObjectType@9c0d0bd
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@9c0d0bd
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@30d5e37c
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1da745a2
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4597e6e3
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@41ece227
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5e3d2765
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7910f355
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@34ab26a
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@259195fe
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@37a0fc8c
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@37a0fc8c
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@56835f2f
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4023d23f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@402676e3]
Binding entity from annotated class: com.revature.model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity com.revature.model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: com.revature.model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity com.revature.model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: com.revature.model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity com.revature.model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
MetadataSourceProcessor property employeeID with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:employeeID]
building SimpleValue for employeeID
Building property employeeID
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeID, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for employeeID
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [employee_id] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@386ea60f, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=com.revature.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c7b100b, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@58af5076, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4023d23f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@28ffa527]
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
Static SQL for entity: com.revature.model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bd67cf9]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Label)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Label, querySpaceUid=<gen:0>, path=com.revature.model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity com.revature.model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: com.revature.model.User
 Version select: select employee_id from user_table where employee_id =?
 Snapshot select: select user_.employee_id, user_.amount as amount2_2_ from user_table user_ where user_.employee_id=?
 Insert 0: insert into user_table (amount, employee_id) values (?, ?)
 Update 0: update user_table set amount=? where employee_id=?
 Delete 0: delete from user_table where employee_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@744c16fb]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.User, querySpaceUid=<gen:0>, path=com.revature.model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_2_0_}

Static select for entity com.revature.model.User [NONE]: select user0_.employee_id as employee1_2_0_, user0_.amount as amount2_2_0_ from user_table user0_ where user0_.employee_id=?
Static SQL for entity: com.revature.model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7aaf0f0a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Task)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Task, querySpaceUid=<gen:0>, path=com.revature.model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity com.revature.model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
drop table if exists label_table cascade
drop table if exists task_table cascade
drop table if exists user_table cascade
drop sequence if exists hibernate_sequence
create sequence hibernate_sequence start 1 increment 1
create table label_table (amount float8 not null, primary key (amount))
create table task_table (name int4 not null, primary key (name))
create table user_table (employee_id int4 not null, amount varchar(255), primary key (employee_id))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4b1ef6a
Registering SessionFactory: 768badf9-968d-4bd5-ae70-a65b57fcf701 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
select nextval ('hibernate_sequence')
Sequence value obtained: 1
HHH000387: ResultSet's statement was not registered
Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.revature.model.User{lastName=null, employeeID=1}
insert into user_table (amount, employee_id) values (?, ?)
committing
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2bb717d7
Adding type registration true_false -> org.hibernate.type.TrueFalseType@3f357c9d
Adding type registration yes_no -> org.hibernate.type.YesNoType@25a290ee
Adding type registration byte -> org.hibernate.type.ByteType@632241f5
Adding type registration byte -> org.hibernate.type.ByteType@632241f5
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@632241f5
Adding type registration character -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration char -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration short -> org.hibernate.type.ShortType@643f6179
Adding type registration short -> org.hibernate.type.ShortType@643f6179
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@643f6179
Adding type registration integer -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration int -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration long -> org.hibernate.type.LongType@bfb93cf
Adding type registration long -> org.hibernate.type.LongType@bfb93cf
Adding type registration java.lang.Long -> org.hibernate.type.LongType@bfb93cf
Adding type registration float -> org.hibernate.type.FloatType@1247c72e
Adding type registration float -> org.hibernate.type.FloatType@1247c72e
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1247c72e
Adding type registration double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@68d6f48e
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@68d6f48e
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d0b814d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d0b814d
Adding type registration string -> org.hibernate.type.StringType@d969452
Adding type registration java.lang.String -> org.hibernate.type.StringType@d969452
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@14ed7ddf
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@356b6b5d
Adding type registration url -> org.hibernate.type.UrlType@3d0352
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3d0352
Adding type registration Duration -> org.hibernate.type.DurationType@2fee69a1
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2fee69a1
Adding type registration Instant -> org.hibernate.type.InstantType@734fbae3
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@734fbae3
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@559d19c
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@559d19c
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5c9e8a67
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5c9e8a67
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@451816fd
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@451816fd
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18d30e7
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18d30e7
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@41bb1f09
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@41bb1f09
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@baa227e
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@baa227e
Adding type registration date -> org.hibernate.type.DateType@2d74cbbd
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d74cbbd
Adding type registration time -> org.hibernate.type.TimeType@6598caab
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6598caab
Adding type registration timestamp -> org.hibernate.type.TimestampType@11abd6c
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@11abd6c
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@11abd6c
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@46ab4efc
Adding type registration calendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2ef041bb
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1b47b7f5
Adding type registration locale -> org.hibernate.type.LocaleType@1a17dd6f
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a17dd6f
Adding type registration currency -> org.hibernate.type.CurrencyType@3a16984c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3a16984c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@48c5698
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48c5698
Adding type registration class -> org.hibernate.type.ClassType@66298fe9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@66298fe9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@56835f2f
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@56835f2f
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15e08615
Adding type registration binary -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration byte[] -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration [B -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration row_version -> org.hibernate.type.RowVersionType@45d7495e
Adding type registration image -> org.hibernate.type.ImageType@3df77dfa
Adding type registration characters -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration char[] -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration [C -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration text -> org.hibernate.type.TextType@6d17914a
Adding type registration ntext -> org.hibernate.type.NTextType@612af486
Adding type registration blob -> org.hibernate.type.BlobType@5ab7ac02
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5ab7ac02
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1f45db49
Adding type registration clob -> org.hibernate.type.ClobType@30cafd13
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@30cafd13
Adding type registration nclob -> org.hibernate.type.NClobType@1b475663
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1b475663
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@699e0bf0
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58e03769
Adding type registration serializable -> org.hibernate.type.SerializableType@f849027
Adding type registration object -> org.hibernate.type.ObjectType@9c0d0bd
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@9c0d0bd
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@30d5e37c
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1da745a2
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4597e6e3
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@41ece227
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5e3d2765
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7910f355
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@34ab26a
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@259195fe
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@37a0fc8c
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@37a0fc8c
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@56835f2f
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4023d23f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@402676e3]
Binding entity from annotated class: com.revature.model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity com.revature.model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: com.revature.model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity com.revature.model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: com.revature.model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity com.revature.model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
MetadataSourceProcessor property employeeID with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:employeeID]
building SimpleValue for employeeID
Building property employeeID
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeID, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for employeeID
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [employee_id] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@386ea60f, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=com.revature.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c7b100b, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@58af5076, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4023d23f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@28ffa527]
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
Static SQL for entity: com.revature.model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bd67cf9]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Label)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Label, querySpaceUid=<gen:0>, path=com.revature.model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity com.revature.model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: com.revature.model.User
 Version select: select employee_id from user_table where employee_id =?
 Snapshot select: select user_.employee_id, user_.amount as amount2_2_ from user_table user_ where user_.employee_id=?
 Insert 0: insert into user_table (amount, employee_id) values (?, ?)
 Update 0: update user_table set amount=? where employee_id=?
 Delete 0: delete from user_table where employee_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@744c16fb]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.User, querySpaceUid=<gen:0>, path=com.revature.model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_2_0_}

Static select for entity com.revature.model.User [NONE]: select user0_.employee_id as employee1_2_0_, user0_.amount as amount2_2_0_ from user_table user0_ where user0_.employee_id=?
Static SQL for entity: com.revature.model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7aaf0f0a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Task)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Task, querySpaceUid=<gen:0>, path=com.revature.model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity com.revature.model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
drop table if exists label_table cascade
drop table if exists task_table cascade
drop table if exists user_table cascade
drop sequence if exists hibernate_sequence
create sequence hibernate_sequence start 1 increment 1
create table label_table (amount float8 not null, primary key (amount))
create table task_table (name int4 not null, primary key (name))
create table user_table (employee_id int4 not null, amount varchar(255), primary key (employee_id))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4b1ef6a
Registering SessionFactory: 19bbe515-85a4-4db5-a604-e58329ca21a8 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
select nextval ('hibernate_sequence')
Sequence value obtained: 1
HHH000387: ResultSet's statement was not registered
Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.revature.model.User{lastName=null, employeeID=1}
insert into user_table (amount, employee_id) values (?, ?)
committing
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2bb717d7
Adding type registration true_false -> org.hibernate.type.TrueFalseType@3f357c9d
Adding type registration yes_no -> org.hibernate.type.YesNoType@25a290ee
Adding type registration byte -> org.hibernate.type.ByteType@632241f5
Adding type registration byte -> org.hibernate.type.ByteType@632241f5
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@632241f5
Adding type registration character -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration char -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration short -> org.hibernate.type.ShortType@643f6179
Adding type registration short -> org.hibernate.type.ShortType@643f6179
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@643f6179
Adding type registration integer -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration int -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration long -> org.hibernate.type.LongType@bfb93cf
Adding type registration long -> org.hibernate.type.LongType@bfb93cf
Adding type registration java.lang.Long -> org.hibernate.type.LongType@bfb93cf
Adding type registration float -> org.hibernate.type.FloatType@1247c72e
Adding type registration float -> org.hibernate.type.FloatType@1247c72e
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1247c72e
Adding type registration double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@68d6f48e
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@68d6f48e
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d0b814d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d0b814d
Adding type registration string -> org.hibernate.type.StringType@d969452
Adding type registration java.lang.String -> org.hibernate.type.StringType@d969452
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@14ed7ddf
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@356b6b5d
Adding type registration url -> org.hibernate.type.UrlType@3d0352
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3d0352
Adding type registration Duration -> org.hibernate.type.DurationType@2fee69a1
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2fee69a1
Adding type registration Instant -> org.hibernate.type.InstantType@734fbae3
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@734fbae3
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@559d19c
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@559d19c
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5c9e8a67
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5c9e8a67
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@451816fd
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@451816fd
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18d30e7
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18d30e7
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@41bb1f09
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@41bb1f09
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@baa227e
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@baa227e
Adding type registration date -> org.hibernate.type.DateType@2d74cbbd
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d74cbbd
Adding type registration time -> org.hibernate.type.TimeType@6598caab
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6598caab
Adding type registration timestamp -> org.hibernate.type.TimestampType@11abd6c
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@11abd6c
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@11abd6c
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@46ab4efc
Adding type registration calendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2ef041bb
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1b47b7f5
Adding type registration locale -> org.hibernate.type.LocaleType@1a17dd6f
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a17dd6f
Adding type registration currency -> org.hibernate.type.CurrencyType@3a16984c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3a16984c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@48c5698
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48c5698
Adding type registration class -> org.hibernate.type.ClassType@66298fe9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@66298fe9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@56835f2f
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@56835f2f
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15e08615
Adding type registration binary -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration byte[] -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration [B -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration row_version -> org.hibernate.type.RowVersionType@45d7495e
Adding type registration image -> org.hibernate.type.ImageType@3df77dfa
Adding type registration characters -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration char[] -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration [C -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration text -> org.hibernate.type.TextType@6d17914a
Adding type registration ntext -> org.hibernate.type.NTextType@612af486
Adding type registration blob -> org.hibernate.type.BlobType@5ab7ac02
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5ab7ac02
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1f45db49
Adding type registration clob -> org.hibernate.type.ClobType@30cafd13
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@30cafd13
Adding type registration nclob -> org.hibernate.type.NClobType@1b475663
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1b475663
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@699e0bf0
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58e03769
Adding type registration serializable -> org.hibernate.type.SerializableType@f849027
Adding type registration object -> org.hibernate.type.ObjectType@9c0d0bd
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@9c0d0bd
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@30d5e37c
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1da745a2
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4597e6e3
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@41ece227
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5e3d2765
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7910f355
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@34ab26a
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@259195fe
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@37a0fc8c
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@37a0fc8c
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@56835f2f
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4023d23f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@402676e3]
Binding entity from annotated class: com.revature.model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity com.revature.model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: com.revature.model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity com.revature.model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: com.revature.model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity com.revature.model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
MetadataSourceProcessor property employeeID with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:employeeID]
building SimpleValue for employeeID
Building property employeeID
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeID, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for employeeID
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [employee_id] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@386ea60f, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=com.revature.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c7b100b, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@58af5076, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4023d23f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@28ffa527]
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
Static SQL for entity: com.revature.model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bd67cf9]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Label)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Label, querySpaceUid=<gen:0>, path=com.revature.model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity com.revature.model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: com.revature.model.User
 Version select: select employee_id from user_table where employee_id =?
 Snapshot select: select user_.employee_id, user_.amount as amount2_2_ from user_table user_ where user_.employee_id=?
 Insert 0: insert into user_table (amount, employee_id) values (?, ?)
 Update 0: update user_table set amount=? where employee_id=?
 Delete 0: delete from user_table where employee_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@744c16fb]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.User, querySpaceUid=<gen:0>, path=com.revature.model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_2_0_}

Static select for entity com.revature.model.User [NONE]: select user0_.employee_id as employee1_2_0_, user0_.amount as amount2_2_0_ from user_table user0_ where user0_.employee_id=?
Static SQL for entity: com.revature.model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7aaf0f0a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Task)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Task, querySpaceUid=<gen:0>, path=com.revature.model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity com.revature.model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
drop table if exists label_table cascade
drop table if exists task_table cascade
drop table if exists user_table cascade
drop sequence if exists hibernate_sequence
create sequence hibernate_sequence start 1 increment 1
create table label_table (amount float8 not null, primary key (amount))
create table task_table (name int4 not null, primary key (name))
create table user_table (employee_id int4 not null, amount varchar(255), primary key (employee_id))
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4b1ef6a
Registering SessionFactory: 6f659e0a-4450-4281-bcf6-082576d90c8c (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
select nextval ('hibernate_sequence')
Sequence value obtained: 1
HHH000387: ResultSet's statement was not registered
Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.revature.model.User{lastName=null, employeeID=1}
insert into user_table (amount, employee_id) values (?, ?)
committing
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2bb717d7
Adding type registration true_false -> org.hibernate.type.TrueFalseType@3f357c9d
Adding type registration yes_no -> org.hibernate.type.YesNoType@25a290ee
Adding type registration byte -> org.hibernate.type.ByteType@632241f5
Adding type registration byte -> org.hibernate.type.ByteType@632241f5
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@632241f5
Adding type registration character -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration char -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration short -> org.hibernate.type.ShortType@643f6179
Adding type registration short -> org.hibernate.type.ShortType@643f6179
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@643f6179
Adding type registration integer -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration int -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration long -> org.hibernate.type.LongType@bfb93cf
Adding type registration long -> org.hibernate.type.LongType@bfb93cf
Adding type registration java.lang.Long -> org.hibernate.type.LongType@bfb93cf
Adding type registration float -> org.hibernate.type.FloatType@1247c72e
Adding type registration float -> org.hibernate.type.FloatType@1247c72e
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1247c72e
Adding type registration double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@68d6f48e
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@68d6f48e
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d0b814d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d0b814d
Adding type registration string -> org.hibernate.type.StringType@d969452
Adding type registration java.lang.String -> org.hibernate.type.StringType@d969452
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@14ed7ddf
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@356b6b5d
Adding type registration url -> org.hibernate.type.UrlType@3d0352
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3d0352
Adding type registration Duration -> org.hibernate.type.DurationType@2fee69a1
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2fee69a1
Adding type registration Instant -> org.hibernate.type.InstantType@734fbae3
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@734fbae3
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@559d19c
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@559d19c
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5c9e8a67
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5c9e8a67
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@451816fd
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@451816fd
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18d30e7
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18d30e7
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@41bb1f09
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@41bb1f09
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@baa227e
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@baa227e
Adding type registration date -> org.hibernate.type.DateType@2d74cbbd
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d74cbbd
Adding type registration time -> org.hibernate.type.TimeType@6598caab
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6598caab
Adding type registration timestamp -> org.hibernate.type.TimestampType@11abd6c
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@11abd6c
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@11abd6c
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@46ab4efc
Adding type registration calendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2ef041bb
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1b47b7f5
Adding type registration locale -> org.hibernate.type.LocaleType@1a17dd6f
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a17dd6f
Adding type registration currency -> org.hibernate.type.CurrencyType@3a16984c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3a16984c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@48c5698
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48c5698
Adding type registration class -> org.hibernate.type.ClassType@66298fe9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@66298fe9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@56835f2f
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@56835f2f
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15e08615
Adding type registration binary -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration byte[] -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration [B -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration row_version -> org.hibernate.type.RowVersionType@45d7495e
Adding type registration image -> org.hibernate.type.ImageType@3df77dfa
Adding type registration characters -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration char[] -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration [C -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration text -> org.hibernate.type.TextType@6d17914a
Adding type registration ntext -> org.hibernate.type.NTextType@612af486
Adding type registration blob -> org.hibernate.type.BlobType@5ab7ac02
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5ab7ac02
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1f45db49
Adding type registration clob -> org.hibernate.type.ClobType@30cafd13
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@30cafd13
Adding type registration nclob -> org.hibernate.type.NClobType@1b475663
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1b475663
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@699e0bf0
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58e03769
Adding type registration serializable -> org.hibernate.type.SerializableType@f849027
Adding type registration object -> org.hibernate.type.ObjectType@9c0d0bd
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@9c0d0bd
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@30d5e37c
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1da745a2
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4597e6e3
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@41ece227
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5e3d2765
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7910f355
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@34ab26a
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@259195fe
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@37a0fc8c
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@37a0fc8c
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@56835f2f
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4023d23f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@402676e3]
Binding entity from annotated class: com.revature.model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity com.revature.model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: com.revature.model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity com.revature.model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: com.revature.model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity com.revature.model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
MetadataSourceProcessor property employeeID with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:employeeID]
building SimpleValue for employeeID
Building property employeeID
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeID, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for employeeID
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [employee_id] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@386ea60f, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=com.revature.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c7b100b, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@58af5076, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4023d23f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@28ffa527]
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
Static SQL for entity: com.revature.model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bd67cf9]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Label)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Label, querySpaceUid=<gen:0>, path=com.revature.model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity com.revature.model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: com.revature.model.User
 Version select: select employee_id from user_table where employee_id =?
 Snapshot select: select user_.employee_id, user_.amount as amount2_2_ from user_table user_ where user_.employee_id=?
 Insert 0: insert into user_table (amount, employee_id) values (?, ?)
 Update 0: update user_table set amount=? where employee_id=?
 Delete 0: delete from user_table where employee_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@744c16fb]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.User, querySpaceUid=<gen:0>, path=com.revature.model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_2_0_}

Static select for entity com.revature.model.User [NONE]: select user0_.employee_id as employee1_2_0_, user0_.amount as amount2_2_0_ from user_table user0_ where user0_.employee_id=?
Static SQL for entity: com.revature.model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7aaf0f0a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Task)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Task, querySpaceUid=<gen:0>, path=com.revature.model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity com.revature.model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
No alter strings for table : label_table
No alter strings for table : task_table
No alter strings for table : user_table
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3df79197
Registering SessionFactory: 6f78aed6-9991-45b2-b9c6-f2c97764d659 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
select nextval ('hibernate_sequence')
Sequence value obtained: 2
HHH000387: ResultSet's statement was not registered
Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.revature.model.User{lastName=null, employeeID=2}
insert into user_table (amount, employee_id) values (?, ?)
committing
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2bb717d7
Adding type registration true_false -> org.hibernate.type.TrueFalseType@3f357c9d
Adding type registration yes_no -> org.hibernate.type.YesNoType@25a290ee
Adding type registration byte -> org.hibernate.type.ByteType@632241f5
Adding type registration byte -> org.hibernate.type.ByteType@632241f5
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@632241f5
Adding type registration character -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration char -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration short -> org.hibernate.type.ShortType@643f6179
Adding type registration short -> org.hibernate.type.ShortType@643f6179
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@643f6179
Adding type registration integer -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration int -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration long -> org.hibernate.type.LongType@bfb93cf
Adding type registration long -> org.hibernate.type.LongType@bfb93cf
Adding type registration java.lang.Long -> org.hibernate.type.LongType@bfb93cf
Adding type registration float -> org.hibernate.type.FloatType@1247c72e
Adding type registration float -> org.hibernate.type.FloatType@1247c72e
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1247c72e
Adding type registration double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@68d6f48e
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@68d6f48e
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d0b814d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d0b814d
Adding type registration string -> org.hibernate.type.StringType@d969452
Adding type registration java.lang.String -> org.hibernate.type.StringType@d969452
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@14ed7ddf
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@356b6b5d
Adding type registration url -> org.hibernate.type.UrlType@3d0352
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3d0352
Adding type registration Duration -> org.hibernate.type.DurationType@2fee69a1
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2fee69a1
Adding type registration Instant -> org.hibernate.type.InstantType@734fbae3
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@734fbae3
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@559d19c
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@559d19c
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5c9e8a67
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5c9e8a67
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@451816fd
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@451816fd
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18d30e7
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18d30e7
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@41bb1f09
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@41bb1f09
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@baa227e
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@baa227e
Adding type registration date -> org.hibernate.type.DateType@2d74cbbd
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d74cbbd
Adding type registration time -> org.hibernate.type.TimeType@6598caab
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6598caab
Adding type registration timestamp -> org.hibernate.type.TimestampType@11abd6c
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@11abd6c
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@11abd6c
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@46ab4efc
Adding type registration calendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2ef041bb
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1b47b7f5
Adding type registration locale -> org.hibernate.type.LocaleType@1a17dd6f
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a17dd6f
Adding type registration currency -> org.hibernate.type.CurrencyType@3a16984c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3a16984c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@48c5698
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48c5698
Adding type registration class -> org.hibernate.type.ClassType@66298fe9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@66298fe9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@56835f2f
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@56835f2f
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15e08615
Adding type registration binary -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration byte[] -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration [B -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration row_version -> org.hibernate.type.RowVersionType@45d7495e
Adding type registration image -> org.hibernate.type.ImageType@3df77dfa
Adding type registration characters -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration char[] -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration [C -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration text -> org.hibernate.type.TextType@6d17914a
Adding type registration ntext -> org.hibernate.type.NTextType@612af486
Adding type registration blob -> org.hibernate.type.BlobType@5ab7ac02
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5ab7ac02
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1f45db49
Adding type registration clob -> org.hibernate.type.ClobType@30cafd13
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@30cafd13
Adding type registration nclob -> org.hibernate.type.NClobType@1b475663
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1b475663
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@699e0bf0
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58e03769
Adding type registration serializable -> org.hibernate.type.SerializableType@f849027
Adding type registration object -> org.hibernate.type.ObjectType@9c0d0bd
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@9c0d0bd
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@30d5e37c
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1da745a2
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4597e6e3
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@41ece227
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5e3d2765
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7910f355
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@34ab26a
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@259195fe
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@37a0fc8c
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@37a0fc8c
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@56835f2f
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4023d23f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@402676e3]
Binding entity from annotated class: com.revature.model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity com.revature.model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: com.revature.model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity com.revature.model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: com.revature.model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity com.revature.model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
MetadataSourceProcessor property employeeID with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:employeeID]
building SimpleValue for employeeID
Building property employeeID
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeID, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for employeeID
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [employee_id] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@386ea60f, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=com.revature.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c7b100b, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@58af5076, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4023d23f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@28ffa527]
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
Static SQL for entity: com.revature.model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bd67cf9]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Label)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Label, querySpaceUid=<gen:0>, path=com.revature.model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity com.revature.model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: com.revature.model.User
 Version select: select employee_id from user_table where employee_id =?
 Snapshot select: select user_.employee_id, user_.amount as amount2_2_ from user_table user_ where user_.employee_id=?
 Insert 0: insert into user_table (amount, employee_id) values (?, ?)
 Update 0: update user_table set amount=? where employee_id=?
 Delete 0: delete from user_table where employee_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@744c16fb]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.User, querySpaceUid=<gen:0>, path=com.revature.model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_2_0_}

Static select for entity com.revature.model.User [NONE]: select user0_.employee_id as employee1_2_0_, user0_.amount as amount2_2_0_ from user_table user0_ where user0_.employee_id=?
Static SQL for entity: com.revature.model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7aaf0f0a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Task)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Task, querySpaceUid=<gen:0>, path=com.revature.model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity com.revature.model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
No alter strings for table : label_table
No alter strings for table : task_table
No alter strings for table : user_table
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3df79197
Registering SessionFactory: 1c270c2e-85c9-4fd5-9bf3-14d94053a3f1 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        nextval ('hibernate_sequence')
Sequence value obtained: 3
HHH000387: ResultSet's statement was not registered
Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.revature.model.User{lastName=null, employeeID=3}

    insert 
    into
        user_table
        (amount, employee_id) 
    values
        (?, ?)
committing
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2bb717d7
Adding type registration true_false -> org.hibernate.type.TrueFalseType@3f357c9d
Adding type registration yes_no -> org.hibernate.type.YesNoType@25a290ee
Adding type registration byte -> org.hibernate.type.ByteType@632241f5
Adding type registration byte -> org.hibernate.type.ByteType@632241f5
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@632241f5
Adding type registration character -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration char -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration short -> org.hibernate.type.ShortType@643f6179
Adding type registration short -> org.hibernate.type.ShortType@643f6179
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@643f6179
Adding type registration integer -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration int -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration long -> org.hibernate.type.LongType@bfb93cf
Adding type registration long -> org.hibernate.type.LongType@bfb93cf
Adding type registration java.lang.Long -> org.hibernate.type.LongType@bfb93cf
Adding type registration float -> org.hibernate.type.FloatType@1247c72e
Adding type registration float -> org.hibernate.type.FloatType@1247c72e
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1247c72e
Adding type registration double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@68d6f48e
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@68d6f48e
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d0b814d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d0b814d
Adding type registration string -> org.hibernate.type.StringType@d969452
Adding type registration java.lang.String -> org.hibernate.type.StringType@d969452
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@14ed7ddf
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@356b6b5d
Adding type registration url -> org.hibernate.type.UrlType@3d0352
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3d0352
Adding type registration Duration -> org.hibernate.type.DurationType@2fee69a1
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2fee69a1
Adding type registration Instant -> org.hibernate.type.InstantType@734fbae3
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@734fbae3
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@559d19c
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@559d19c
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5c9e8a67
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5c9e8a67
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@451816fd
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@451816fd
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18d30e7
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18d30e7
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@41bb1f09
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@41bb1f09
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@baa227e
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@baa227e
Adding type registration date -> org.hibernate.type.DateType@2d74cbbd
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d74cbbd
Adding type registration time -> org.hibernate.type.TimeType@6598caab
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6598caab
Adding type registration timestamp -> org.hibernate.type.TimestampType@11abd6c
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@11abd6c
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@11abd6c
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@46ab4efc
Adding type registration calendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2ef041bb
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1b47b7f5
Adding type registration locale -> org.hibernate.type.LocaleType@1a17dd6f
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a17dd6f
Adding type registration currency -> org.hibernate.type.CurrencyType@3a16984c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3a16984c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@48c5698
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48c5698
Adding type registration class -> org.hibernate.type.ClassType@66298fe9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@66298fe9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@56835f2f
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@56835f2f
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15e08615
Adding type registration binary -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration byte[] -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration [B -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration row_version -> org.hibernate.type.RowVersionType@45d7495e
Adding type registration image -> org.hibernate.type.ImageType@3df77dfa
Adding type registration characters -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration char[] -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration [C -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration text -> org.hibernate.type.TextType@6d17914a
Adding type registration ntext -> org.hibernate.type.NTextType@612af486
Adding type registration blob -> org.hibernate.type.BlobType@5ab7ac02
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5ab7ac02
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1f45db49
Adding type registration clob -> org.hibernate.type.ClobType@30cafd13
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@30cafd13
Adding type registration nclob -> org.hibernate.type.NClobType@1b475663
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1b475663
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@699e0bf0
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58e03769
Adding type registration serializable -> org.hibernate.type.SerializableType@f849027
Adding type registration object -> org.hibernate.type.ObjectType@9c0d0bd
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@9c0d0bd
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@30d5e37c
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1da745a2
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4597e6e3
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@41ece227
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5e3d2765
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7910f355
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@34ab26a
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@259195fe
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@37a0fc8c
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@37a0fc8c
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@56835f2f
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4023d23f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@402676e3]
Binding entity from annotated class: com.revature.model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity com.revature.model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: com.revature.model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity com.revature.model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: com.revature.model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity com.revature.model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
MetadataSourceProcessor property employeeID with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:employeeID]
building SimpleValue for employeeID
Building property employeeID
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeID, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for employeeID
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [employee_id] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@386ea60f, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=com.revature.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.hbm2ddl=update, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c7b100b, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@58af5076, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4023d23f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@28ffa527]
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
Static SQL for entity: com.revature.model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bd67cf9]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Label)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Label, querySpaceUid=<gen:0>, path=com.revature.model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity com.revature.model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: com.revature.model.User
 Version select: select employee_id from user_table where employee_id =?
 Snapshot select: select user_.employee_id, user_.amount as amount2_2_ from user_table user_ where user_.employee_id=?
 Insert 0: insert into user_table (amount, employee_id) values (?, ?)
 Update 0: update user_table set amount=? where employee_id=?
 Delete 0: delete from user_table where employee_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@744c16fb]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.User, querySpaceUid=<gen:0>, path=com.revature.model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_2_0_}

Static select for entity com.revature.model.User [NONE]: select user0_.employee_id as employee1_2_0_, user0_.amount as amount2_2_0_ from user_table user0_ where user0_.employee_id=?
Static SQL for entity: com.revature.model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7aaf0f0a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Task)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Task, querySpaceUid=<gen:0>, path=com.revature.model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity com.revature.model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
No actions specified; doing nothing
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@27f6854b
Registering SessionFactory: dec0d3ff-f9da-4c83-b57d-8385d8f9a1b6 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        nextval ('hibernate_sequence')
Sequence value obtained: 4
HHH000387: ResultSet's statement was not registered
Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.revature.model.User{lastName=null, employeeID=4}

    insert 
    into
        user_table
        (amount, employee_id) 
    values
        (?, ?)
committing
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.4.30.Final
HHH000206: hibernate.properties not found
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77ccded4
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2bb717d7
Adding type registration true_false -> org.hibernate.type.TrueFalseType@3f357c9d
Adding type registration yes_no -> org.hibernate.type.YesNoType@25a290ee
Adding type registration byte -> org.hibernate.type.ByteType@632241f5
Adding type registration byte -> org.hibernate.type.ByteType@632241f5
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@632241f5
Adding type registration character -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration char -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@589dfa6f
Adding type registration short -> org.hibernate.type.ShortType@643f6179
Adding type registration short -> org.hibernate.type.ShortType@643f6179
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@643f6179
Adding type registration integer -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration int -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@20a1b3ae
Adding type registration long -> org.hibernate.type.LongType@bfb93cf
Adding type registration long -> org.hibernate.type.LongType@bfb93cf
Adding type registration java.lang.Long -> org.hibernate.type.LongType@bfb93cf
Adding type registration float -> org.hibernate.type.FloatType@1247c72e
Adding type registration float -> org.hibernate.type.FloatType@1247c72e
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1247c72e
Adding type registration double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7ef8e623
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@68d6f48e
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@68d6f48e
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d0b814d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d0b814d
Adding type registration string -> org.hibernate.type.StringType@d969452
Adding type registration java.lang.String -> org.hibernate.type.StringType@d969452
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@14ed7ddf
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@356b6b5d
Adding type registration url -> org.hibernate.type.UrlType@3d0352
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3d0352
Adding type registration Duration -> org.hibernate.type.DurationType@2fee69a1
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2fee69a1
Adding type registration Instant -> org.hibernate.type.InstantType@734fbae3
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@734fbae3
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@559d19c
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@559d19c
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5c9e8a67
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5c9e8a67
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@451816fd
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@451816fd
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18d30e7
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18d30e7
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@41bb1f09
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@41bb1f09
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@baa227e
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@baa227e
Adding type registration date -> org.hibernate.type.DateType@2d74cbbd
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d74cbbd
Adding type registration time -> org.hibernate.type.TimeType@6598caab
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6598caab
Adding type registration timestamp -> org.hibernate.type.TimestampType@11abd6c
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@11abd6c
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@11abd6c
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@46ab4efc
Adding type registration calendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4afd65fd
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2ef041bb
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1b47b7f5
Adding type registration locale -> org.hibernate.type.LocaleType@1a17dd6f
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a17dd6f
Adding type registration currency -> org.hibernate.type.CurrencyType@3a16984c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3a16984c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@48c5698
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48c5698
Adding type registration class -> org.hibernate.type.ClassType@66298fe9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@66298fe9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@56835f2f
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@56835f2f
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15e08615
Adding type registration binary -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration byte[] -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration [B -> org.hibernate.type.BinaryType@13fe5bb7
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@63a84bb6
Adding type registration row_version -> org.hibernate.type.RowVersionType@45d7495e
Adding type registration image -> org.hibernate.type.ImageType@3df77dfa
Adding type registration characters -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration char[] -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration [C -> org.hibernate.type.CharArrayType@1377b1a0
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60fc7f43
Adding type registration text -> org.hibernate.type.TextType@6d17914a
Adding type registration ntext -> org.hibernate.type.NTextType@612af486
Adding type registration blob -> org.hibernate.type.BlobType@5ab7ac02
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5ab7ac02
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1f45db49
Adding type registration clob -> org.hibernate.type.ClobType@30cafd13
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@30cafd13
Adding type registration nclob -> org.hibernate.type.NClobType@1b475663
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1b475663
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@699e0bf0
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58e03769
Adding type registration serializable -> org.hibernate.type.SerializableType@f849027
Adding type registration object -> org.hibernate.type.ObjectType@9c0d0bd
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@9c0d0bd
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@30d5e37c
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1da745a2
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4597e6e3
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@41ece227
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5e3d2765
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7910f355
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@34ab26a
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@259195fe
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.10
      major : 42
      minor : 2
JDBC version : 4.2
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@37a0fc8c
Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@37a0fc8c
HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@56835f2f
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4023d23f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@402676e3]
Binding entity from annotated class: com.revature.model.Label
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Label
Bind entity com.revature.model.Label on table label_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(label_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
MetadataSourceProcessor property amount with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Label:amount]
building SimpleValue for amount
Building property amount
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(amount)]), amount, assigned, , ...)
Binding entity from annotated class: com.revature.model.Task
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Task
Bind entity com.revature.model.Task on table task_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(task_table), mappingColumn=name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.Task:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(name)]), id, assigned, , ...)
Binding entity from annotated class: com.revature.model.User
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name User
Bind entity com.revature.model.User on table user_table
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=employee_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
MetadataSourceProcessor property employeeID with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:employeeID]
building SimpleValue for employeeID
Building property employeeID
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(employee_id)]), employeeID, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_table), mappingColumn=amount, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.revature.model.User:lastName]
building SimpleValue for lastName
Building property lastName
Starting fillSimpleValue for amount
Starting fillSimpleValue for id
Starting fillSimpleValue for employeeID
Starting fillSimpleValue for lastName
Forcing column [amount] to be non-null as it is part of the primary key for table [label_table]
Forcing column [name] to be non-null as it is part of the primary key for table [task_table]
Forcing column [employee_id] to be non-null as it is part of the primary key for table [user_table]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=16, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@386ea60f, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\JavaPrograms\Revature\OnIt\OnIt\target\classes;C:\Users\Jacob\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jacob\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jdbc\5.3.5\spring-jdbc-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-core\5.3.5\spring-core-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-jcl\5.3.5\spring-jcl-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-tx\5.3.5\spring-tx-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-context\5.3.5\spring-context-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aop\5.3.5\spring-aop-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-expression\5.3.5\spring-expression-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-beans\5.3.5\spring-beans-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-aspects\5.3.5\spring-aspects-5.3.5.jar;C:\Users\Jacob\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\Jacob\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\Jacob\.m2\repository\org\postgresql\postgresql\42.2.10\postgresql-42.2.10.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.1\jackson-databind-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.1\jackson-annotations-2.12.1.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.1\jackson-core-2.12.1.jar;C:\Users\Jacob\.m2\repository\org\hibernate\hibernate-core\5.4.30.Final\hibernate-core-5.4.30.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Jacob\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jacob\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\Jacob\.m2\repository\net\bytebuddy\byte-buddy\1.10.21\byte-buddy-1.10.21.jar;C:\Users\Jacob\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jacob\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jacob\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Jacob\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Jacob\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jacob\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Jacob\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Jacob\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Jacob\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Jacob\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Jacob\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Jacob\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Jacob\.m2\repository\org\springframework\spring-orm\5.3.5\spring-orm-5.3.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16\bin, sun.java.command=com.revature.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Jacob, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-03-16, java.home=C:\Program Files\Java\jdk-16, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16+36-2231, user.name=Jacob, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.hbm2ddl=update, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Jacob\AppData\Local\Temp\, java.version=16, user.dir=C:\JavaPrograms\Revature\OnIt\OnIt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c7b100b, java.library.path=C:\Program Files\Java\jdk-16\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk-16/bin/server;C:/Program Files/Java/jdk-16/bin;C:\Python39\Scripts\;C:\Python39\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Program Files\dotnet\;C:\Program Files (x86)\Brackets\command;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Jacob\scoop\apps\ojdkbuild8-full\current\bin;C:\Users\Jacob\scoop\apps\maven\current\bin;C:\Users\Jacob\scoop\shims;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Jacob\AppData\Local\Programs\Python\Python38-32\;C:\Users\Jacob\AppData\Local\Microsoft\WindowsApps;C:\Users\Jacob\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\bin;C:\Users\Jacob\AppData\Local\GitHubDesktop\bin;C:\Users\Jacob\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2020.3.3\bin;;C:\Users\Jacob\AppData\Roaming\npm;C:\Users\Jacob\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16+36-2231, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@58af5076, java.class.version=60.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4023d23f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@28ffa527]
Not known whether passed class name [com.revature.model.Label] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Label
Not known whether passed class name [com.revature.model.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.User
Not known whether passed class name [com.revature.model.Task] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.model.Task
Static SQL for entity: com.revature.model.Label
 Version select: select amount from label_table where amount =?
 Snapshot select: select label_.amount from label_table label_ where label_.amount=?
 Insert 0: insert into label_table (amount) values (?)
 Update 0: null
 Delete 0: delete from label_table where amount=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bd67cf9]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Label)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Label, querySpaceUid=<gen:0>, path=com.revature.model.Label)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Label)
          - SQL table alias mapping - label0_
          - alias suffix - 0_
          - suffixed key columns - {amount1_0_0_}

Static select for entity com.revature.model.Label [NONE]: select label0_.amount as amount1_0_0_ from label_table label0_ where label0_.amount=?
Static SQL for entity: com.revature.model.User
 Version select: select employee_id from user_table where employee_id =?
 Snapshot select: select user_.employee_id, user_.amount as amount2_2_ from user_table user_ where user_.employee_id=?
 Insert 0: insert into user_table (amount, employee_id) values (?, ?)
 Update 0: update user_table set amount=? where employee_id=?
 Delete 0: delete from user_table where employee_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@744c16fb]
Visiting attribute path : lastName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.User, querySpaceUid=<gen:0>, path=com.revature.model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {employee1_2_0_}

Static select for entity com.revature.model.User [NONE]: select user0_.employee_id as employee1_2_0_, user0_.amount as amount2_2_0_ from user_table user0_ where user0_.employee_id=?
Static SQL for entity: com.revature.model.Task
 Version select: select name from task_table where name =?
 Snapshot select: select task_.name from task_table task_ where task_.name=?
 Insert 0: insert into task_table (name) values (?)
 Update 0: null
 Delete 0: delete from task_table where name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7aaf0f0a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.revature.model.Task)
    - Returns
       - EntityReturnImpl(entity=com.revature.model.Task, querySpaceUid=<gen:0>, path=com.revature.model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {name1_1_0_}

Static select for entity com.revature.model.Task [NONE]: select task0_.name as name1_1_0_ from task_table task0_ where task0_.name=?
No actions specified; doing nothing
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@27f6854b
Registering SessionFactory: 7a50c214-ad28-4c9a-a86d-6b516d3e2f17 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        nextval ('hibernate_sequence')
Sequence value obtained: 5
HHH000387: ResultSet's statement was not registered
Generated identifier: 5, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.revature.model.User{lastName=null, employeeID=5}

    insert 
    into
        user_table
        (amount, employee_id) 
    values
        (?, ?)
committing
